[33m04:12:01 (90266) WARN PluginLoader[39m Module "@stryker-mutator/typescript" did not contribute a StrykerJS plugin. It didn't export a "strykerPlugins" or "strykerValidationSchema".
[32m04:12:01 (90266) INFO ProjectReader[39m Found 3 of 2254 file(s) to be mutated using incremental report with 1057 mutant(s), and 9 test(s).
[32m04:12:01 (90266) INFO Instrumenter[39m Instrumented 3 source file(s) with 160 mutant(s)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/configHandler.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/configHandler.ts.html (235:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 42)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 43)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Comments.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Comments.ts.html (283:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 44)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Posts.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Posts.ts.html (301:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 45)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Users.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Users.ts.html (412:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 46)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/AEndpoint.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/AEndpoint.ts.html (154:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 47)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 48)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/index.html (91:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 49)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/RestClient.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/RestClient.ts.html (766:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 50)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 51)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/configHandler.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/configHandler.ts.html (235:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 54)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 55)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Posts.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Posts.ts.html (301:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 58)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Comments.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Comments.ts.html (283:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 57)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Users.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Users.ts.html (412:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 59)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/AEndpoint.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/AEndpoint.ts.html (154:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 60)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 61)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/index.html (91:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 62)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comment.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comment.ts.html (406:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 64)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/index.html (104:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 63)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 66)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentDetails.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentDetails.ts.html (310:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 65)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentText.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentText.ts.html (178:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 67)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVote.ts.html (334:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 68)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVotes.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVotes.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 69)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comments.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comments.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 70)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentPosted.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentPosted.ts.html (97:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 71)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentVotesChanged.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentVotesChanged.ts.html (97:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 72)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/index.html (117:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 73)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/memberCreated.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/memberCreated.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 74)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postCreated.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postCreated.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 75)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postVotesChanged.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postVotesChanged.ts.html (97:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 76)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/index.html (299:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 77)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberDetails.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberDetails.ts.html (205:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 79)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 80)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/member.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/member.ts.html (220:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 78)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/post.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/post.ts.html (772:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 81)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postDetails.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postDetails.ts.html (367:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 82)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 83)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postLink.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postLink.ts.html (133:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 84)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postSlug.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postSlug.ts.html (178:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 85)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postText.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postText.ts.html (178:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 86)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postTitle.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postTitle.ts.html (160:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 87)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVote.ts.html (334:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 88)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVotes.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVotes.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 89)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentDetailsMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentDetailsMap.ts.html (205:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 90)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentMap.ts.html (151:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 91)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentVoteMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentVoteMap.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 92)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/index.html (169:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 93)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberIdMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberIdMap.ts.html (67:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 95)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberDetailsMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberDetailsMap.ts.html (124:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 94)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberMap.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 96)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postDetailsMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postDetailsMap.ts.html (208:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 97)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postMap.ts.html (181:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 98)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postVoteMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postVoteMap.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 99)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/bootstrap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/bootstrap.ts.html (796:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 100)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/commentRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/commentRepo.ts.html (514:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 101)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/index.html (130:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 102)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts.html (598:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 103)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeMemberRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeMemberRepo.ts.html (589:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 104)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostRepo.ts.html (610:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 105)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostVotesRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostVotesRepo.ts.html (349:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 106)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 107)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 108)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/EditPostErrors.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/EditPostErrors.ts.html (124:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 109)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 110)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/index.html (91:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 111)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userCreated.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userCreated.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 112)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userDeleted.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userDeleted.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 113)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/index.html (117:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 115)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userEmail.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userEmail.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 117)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userLoggedIn.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userLoggedIn.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 114)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/user.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/user.ts.html (382:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 116)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 118)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userName.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userName.ts.html (154:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 119)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userPassword.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userPassword.ts.html (316:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 120)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/userMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/userMap.ts.html (223:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 122)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 121)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 123)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/sequelizeUserRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/sequelizeUserRepo.ts.html (820:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 124)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 125)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.ts.html (55:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 126)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/RestClient.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/RestClient.ts.html (766:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 129)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 130)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Guard.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Guard.ts.html (379:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 131)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Result.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Result.ts.html (313:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 132)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/index.html (78:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 133)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/AggregateRoot.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/AggregateRoot.ts.html (160:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 134)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Entity.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Entity.ts.html (130:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 135)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Identifier.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Identifier.ts.html (118:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 136)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/UniqueEntityID.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/UniqueEntityID.ts.html (61:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 137)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/ValueObject.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/ValueObject.ts.html (127:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 138)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/WatchedList.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/WatchedList.ts.html (295:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 139)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/DomainEvents.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/DomainEvents.ts.html (277:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 140)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 141)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/index.html (130:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 142)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/config.js.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/config.js.html (235:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 143)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 144)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/BaseUser.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/BaseUser.ts.html (199:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 145)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Comment.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Comment.ts.html (244:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 146)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/CommentVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/CommentVote.ts.html (208:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 147)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Member.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Member.ts.html (172:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 148)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Post.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Post.ts.html (244:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 149)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/PostVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/PostVote.ts.html (196:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 150)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.html (143:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 151)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.ts.html (226:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 152)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/TextUtils.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/TextUtils.ts.html (133:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 153)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 154)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/docs/sprintD/TypeDoc/classes/modules_users_services_redis_redisauthservice.redisauthservice.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/docs/sprintD/TypeDoc/classes/modules_users_services_redis_redisauthservice.redisauthservice.html (240:22) Unexpected closing tag "p". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 1134)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m04:12:03 (90266) WARN DisableTypeChecksPreprocessor[39m (disable "warnings.preprocessorErrors" to ignore this warning
[32m04:12:03 (90266) INFO ConcurrencyTokenProvider[39m Creating 1 checker process(es) and 1 test runner process(es).
[32m04:12:08 (90266) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m04:12:09 (90266) INFO DryRunExecutor[39m Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
[32m04:14:36 (90266) INFO DryRunExecutor[39m Initial test run succeeded. Ran 193 tests in 2 minutes 26 seconds (net 49266 ms, overhead 97142 ms).
[32m04:14:36 (90266) INFO IncrementalDiffer[39m Incremental report:
	Mutants:	3 files changed (+65 -0)
	Tests:		25 files changed (+193 -0)
	Result:		0 of 160 mutant result(s) are reused.
Mutation testing 23% (elapsed: <1m, remaining: <1m) 12/59 tested (0 survived, 0 timed out)
Mutation testing 25% (elapsed: <1m, remaining: <1m) 15/59 tested (0 survived, 0 timed out)
Mutation testing 34% (elapsed: <1m, remaining: <1m) 19/59 tested (0 survived, 0 timed out)
Mutation testing 34% (elapsed: <1m, remaining: ~1m) 24/59 tested (0 survived, 0 timed out)
Mutation testing 36% (elapsed: <1m, remaining: ~1m) 26/59 tested (0 survived, 0 timed out)
Mutation testing 36% (elapsed: ~1m, remaining: ~1m) 26/59 tested (0 survived, 0 timed out)
Mutation testing 45% (elapsed: ~1m, remaining: ~1m) 28/59 tested (0 survived, 0 timed out)
Mutation testing 45% (elapsed: ~1m, remaining: ~1m) 28/59 tested (0 survived, 0 timed out)
Mutation testing 48% (elapsed: ~1m, remaining: ~1m) 30/59 tested (0 survived, 0 timed out)
Mutation testing 48% (elapsed: ~1m, remaining: ~1m) 30/59 tested (0 survived, 0 timed out)
Mutation testing 52% (elapsed: ~1m, remaining: ~1m) 32/59 tested (0 survived, 0 timed out)
Mutation testing 52% (elapsed: ~2m, remaining: ~1m) 33/59 tested (1 survived, 0 timed out)
Mutation testing 52% (elapsed: ~2m, remaining: ~1m) 33/59 tested (1 survived, 0 timed out)
Mutation testing 55% (elapsed: ~2m, remaining: ~1m) 35/59 tested (2 survived, 0 timed out)
Mutation testing 55% (elapsed: ~2m, remaining: ~1m) 36/59 tested (3 survived, 0 timed out)
Mutation testing 58% (elapsed: ~2m, remaining: ~1m) 37/59 tested (3 survived, 0 timed out)
Mutation testing 58% (elapsed: ~2m, remaining: ~1m) 37/59 tested (3 survived, 0 timed out)
Mutation testing 61% (elapsed: ~3m, remaining: ~1m) 39/59 tested (4 survived, 0 timed out)
Mutation testing 61% (elapsed: ~3m, remaining: ~1m) 39/59 tested (4 survived, 0 timed out)
Mutation testing 64% (elapsed: ~3m, remaining: ~1m) 41/59 tested (5 survived, 0 timed out)
Mutation testing 64% (elapsed: ~3m, remaining: ~1m) 41/59 tested (5 survived, 0 timed out)
Mutation testing 64% (elapsed: ~3m, remaining: ~1m) 42/59 tested (6 survived, 0 timed out)
Mutation testing 68% (elapsed: ~3m, remaining: ~1m) 43/59 tested (6 survived, 0 timed out)
Mutation testing 71% (elapsed: ~4m, remaining: ~1m) 45/59 tested (7 survived, 0 timed out)
Mutation testing 71% (elapsed: ~4m, remaining: ~1m) 45/59 tested (7 survived, 0 timed out)
Mutation testing 71% (elapsed: ~4m, remaining: ~1m) 46/59 tested (8 survived, 0 timed out)
Mutation testing 74% (elapsed: ~4m, remaining: ~1m) 47/59 tested (8 survived, 0 timed out)
Mutation testing 74% (elapsed: ~4m, remaining: ~1m) 47/59 tested (8 survived, 0 timed out)
Mutation testing 74% (elapsed: ~4m, remaining: ~1m) 48/59 tested (9 survived, 0 timed out)
Mutation testing 74% (elapsed: ~5m, remaining: ~1m) 48/59 tested (9 survived, 0 timed out)
Mutation testing 74% (elapsed: ~5m, remaining: ~1m) 49/59 tested (10 survived, 0 timed out)
Mutation testing 74% (elapsed: ~5m, remaining: ~1m) 50/59 tested (11 survived, 0 timed out)
Mutation testing 74% (elapsed: ~5m, remaining: ~1m) 50/59 tested (11 survived, 0 timed out)
Mutation testing 74% (elapsed: ~5m, remaining: ~1m) 51/59 tested (12 survived, 0 timed out)
Mutation testing 74% (elapsed: ~5m, remaining: ~2m) 51/59 tested (12 survived, 0 timed out)
Mutation testing 74% (elapsed: ~6m, remaining: ~2m) 51/59 tested (12 survived, 0 timed out)
Mutation testing 74% (elapsed: ~6m, remaining: ~2m) 51/59 tested (12 survived, 0 timed out)
Mutation testing 81% (elapsed: ~6m, remaining: ~1m) 52/59 tested (12 survived, 0 timed out)
Mutation testing 81% (elapsed: ~6m, remaining: ~1m) 52/59 tested (12 survived, 0 timed out)
Mutation testing 81% (elapsed: ~6m, remaining: ~1m) 52/59 tested (12 survived, 0 timed out)
Mutation testing 84% (elapsed: ~6m, remaining: ~1m) 53/59 tested (12 survived, 0 timed out)
Mutation testing 98% (elapsed: ~7m, remaining: <1m) 54/59 tested (12 survived, 1 timed out)
Mutation testing 98% (elapsed: ~7m, remaining: <1m) 54/59 tested (12 survived, 1 timed out)
Mutation testing 98% (elapsed: ~7m, remaining: <1m) 56/59 tested (12 survived, 1 timed out)
Mutation testing 98% (elapsed: ~7m, remaining: <1m) 56/59 tested (12 survived, 1 timed out)
Mutation testing 98% (elapsed: ~7m, remaining: <1m) 56/59 tested (12 survived, 1 timed out)
Mutation testing 98% (elapsed: ~7m, remaining: <1m) 57/59 tested (13 survived, 1 timed out)
Mutation testing 98% (elapsed: ~8m, remaining: <1m) 58/59 tested (13 survived, 1 timed out)
Mutation testing 98% (elapsed: ~8m, remaining: <1m) 58/59 tested (13 survived, 1 timed out)
Mutation testing 98% (elapsed: ~8m, remaining: <1m) 58/59 tested (13 survived, 1 timed out)

All tests
  api_test
    US001
      register.api.test.ts
        ✘ Register an account fields validation Account creation attempt with grupodoistests1@gmail.com, g2 and dummyPassword statusCode should be 200  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests1@gmail.com, g2 and dummyPassword statusText should be OK [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests2@gmail.com, UsernameMAAChar and dummyPassword statusCode should be 200  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests2@gmail.com, UsernameMAAChar and dummyPassword statusText should be OK [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUser and MinPass statusCode should be 200  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUser and MinPass statusText should be OK [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with gruposdoistests3@gmail.com, dummyUser and MinPass statusCode should be 409  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with gruposdoistests3@gmail.com, dummyUser and MinPass statusText should be Conflict [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUsers and MinPass statusCode should be 409  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUsers and MinPass statusText should be Conflict [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4gmail.com, dummyUser1 and dummyPass1 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4gmail.com, dummyUser1 and dummyPass1 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@gmail, dummyUser2 and dummyPass2 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@gmail, dummyUser2 and dummyPass2 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@.com, dummyUser3 and dummyPass3 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@.com, dummyUser3 and dummyPass3 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, c and dummyPass4 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, c and dummyPass4 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, Usernames16Chars and dummyPass5 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, Usernames16Chars and dummyPass5 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests6@gmail.com, Usernames1 and dummy statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests6@gmail.com, Usernames1 and dummy statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with , Usernames2 and dummy statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with , Usernames2 and dummy statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests7@gmail.com,  and dummy statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests7@gmail.com,  and dummy statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests8@gmail.com, Usernames3 and  statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests8@gmail.com, Usernames3 and  statusText should be Internal Server Error [line 39] (covered 0)
      US001-ssd.api.test.ts
        ✘ US001 - Visitor registers a new account based on (SSD1) AC should return 200 [line 16] (covered 0)
    US002
      createpost.api.test.ts
        ✘ US002 - Create a Post fields validation Post creation attempt with , text, One ring to rule them all,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with , text, One ring to rule them all,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 0 chars Status Code 500, text, ,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 0 chars Status Code 500, text, ,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 2 chars Status Code 500, text, 12,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 2 chars Status Code 500, text, 12,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 19 chars Status Code 500, text, 1111111111111111119,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 19 chars Status Code 500, text, 1111111111111111119,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 20 chars Status Code 200, text, 11111111111111111120,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 20 chars Status Code 200, text, 11111111111111111120,  statusText should be OK [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10000 chars Status Code 200, text, ,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10000 chars Status Code 200, text, ,  statusText should be OK [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10001 chars! Status Code 500, text, ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10001 chars! Status Code 500, text, ,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gandalf the grey!, , One Ring to find them,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gandalf the grey!, , One Ring to find them,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A, text, One Ring to bring them all and in the darkness bind them,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A, text, One Ring to bring them all and in the darkness bind them,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, text, The white tower,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, text, The white tower,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Rohan will answer, text, R,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Rohan will answer, text, R,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A wizzard is never late, link, ,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A wizzard is never late, link, ,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with my precious!!, link, , .pt statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with my precious!!, link, , .pt statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Legolas the elf, link, , Who knows statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Legolas the elf, link, , Who knows statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Helm's deep battle!, link, , ole.12 statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Helm's deep battle!, link, , ole.12 statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gimli the dwarf, link and text, The dark lord returns, shire.org statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gimli the dwarf, link and text, The dark lord returns, shire.org statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Lord of the Rings, text, Rohin charge the uruk kai,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Lord of the Rings, text, Rohin charge the uruk kai,  statusText should be OK [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Rings of Power, text, Rohin charge the uruk kai,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Rings of Power, text, Rohin charge the uruk kai,  statusText should be OK [line 62] (covered 0)
      US002-ssd.api.test.ts
        ✓ US002 - Member correctly makes a post (SSD1) according to the AC1, AC3, AC8 Post1 - Create Post with text [line 33] (killed 1)
        ~ US002 - Member correctly makes a post with an embedded link (SSD2) according to the AC1, AC3 and AC9 Post2 - Create Post with link [line 49] (covered 3)
    US003/US003-ssd.api.test.ts
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA view post request should return 200 [line 47] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA title should be This is my postBodyText title [line 50] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA <p>Dream Tester very good heavy metal band</p> [line 53] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA username should be AmbrosioDoChoco [line 56] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA type should be text [line 59] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA link should be undefined [line 62] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA points should be -200 [line 65] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA number of comments should be 6 [line 68] (covered 0)
      ~ US003 - View posts and their data based on (SSD1) AC view Post link data Get post Link data [line 74] (covered 2)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data title should be This is my postBodyText title [line 80] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data text undefinied [line 83] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data username should be NatalyLucas [line 86] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data type should be link [line 89] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data link should be www.github.com [line 92] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data points should be 90 [line 95] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data number of comments should be 0 [line 98] (covered 0)
    US004
      comment.api.test.ts
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusText should be Internal Server Error [line 62] (covered 0)
        ✓ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one [line 66] (killed 1)
        ~ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 4)
        ✘ US004 - Create a comment without field validation Comment creation attempt with D statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with D statusText should be Internal Server Error [line 62] (covered 0)
        ~ US004 - Create a comment without field validation Comment creation attempt with D Verify that when a comment is created the number of comments increases by one [line 66] (covered 3)
        ~ US004 - Create a comment without field validation Comment creation attempt with D Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 4)
        ✘ US004 - Create a comment without field validation Comment creation attempt with <body></body> statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with <body></body> statusText should be Internal Server Error [line 62] (covered 0)
        ~ US004 - Create a comment without field validation Comment creation attempt with <body></body> Verify that when a comment is created the number of comments increases by one [line 66] (covered 3)
        ~ US004 - Create a comment without field validation Comment creation attempt with <body></body> Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 4)
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusText should be Internal Server Error [line 62] (covered 0)
        ~ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one [line 66] (covered 3)
        ~ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 4)
        ✘ US004 - Create a comment without field validation Comment creation attempt with 2 statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with 2 statusText should be Internal Server Error [line 62] (covered 0)
        ~ US004 - Create a comment without field validation Comment creation attempt with 2 Verify that when a comment is created the number of comments increases by one [line 66] (covered 3)
        ~ US004 - Create a comment without field validation Comment creation attempt with 2 Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 4)
      US004-ssd.api.test.ts
        ~ US004 - Member correctly makes a comment on a post (SSD1), according to the AC1, AC2, AC3 and AC4 Create a comment [line 29] (covered 3)
    US005
      US005-ssd.api.test.ts
        ~ US005 - visitor (SSD1) views comments and their data according to AC1 US005 - SSD1 View comments and their data by seleting the post [line 51] (covered 2)
        ~ S005 - visitor (SSD2) views a comment and it's data according to AC1 US005 - SSD2 View comments and their data by seleting the comment timestamp [line 59] (covered 11)
      viewcomments.api.test.ts
        ✘ US005 - visitor views comments and their data according to AC comment text should be Theres some good in this world, Mr. Frodo… and its worth fighting for [line 55] (covered 0)
        ✘ US005 - visitor views comments and their data according to AC username should be the same as regBody.username [line 58] (covered 0)
        ✘ US005 - visitor views comments and their data according to AC mandatory key values exist [line 61] (covered 0)
    US006/US006-ssd.api.test.ts
      ✓ US 006 - Reply to a comment on a post should have return 200 [line 30] (killed 1)
      ✘ US 006 - Reply to a comment on a post should have the same content [line 43] (covered 0)
      ~ US 006 - Reply to a comment on a post should increase the num of comments [line 53] (covered 2)
    US007/US007-ssd.api.test.ts
      ✘ (SSD) - Alternative 1 - Member upvotes a post Upvote a post [line 47] (covered 0)
      ✘ (SSD) - Alternative 2 - Member downvotes a post SSD2 - Downvote a post [line 72] (covered 0)
      ✘ (SSD) - Alternative 3 - Member tries to upvote a previously upvoted post SSD3 - Upvote a previously upvoted post [line 98] (covered 0)
      ✘ (SSD) - Alternative 4 - Member tries to downvote a previously downvote post SSD4 - Downvote a previously downvoted post [line 124] (covered 0)
      ✘ (SSD) - Alternative 5 - Member changes an upvote to a downvote SSD5 - Downvote a previously upvoted post [line 150] (covered 0)
      ~ (SSD) - Alternative 6 - Member changes a downvote to an upvote SSD6 - Upvote a previously downvoted post [line 176] (covered 19)
    US008/US008-ssd.api.test.ts
      ✓ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 1 - Member upvotes comment Verify upvote success [line 71] (killed 1)
      ✓ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 1 - Member upvotes comment Check the +1 increment on score in post page [line 78] (killed 8)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 1 - Member upvotes comment Check the +1 increment on score in comment page [line 91] (covered 11)
      ✓ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 2 - Member downvotes comment Verify downvote success [line 126] (killed 1)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 2 - Member downvotes comment Check the -1 decrement on score in post page [line 135] (covered 10)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 2 - Member downvotes comment Check the -1 decrement on score in comment page [line 148] (covered 11)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 3 - Member upvotes a previously upvoted comment Check that there wasn't a increment on score in post page [line 181] (covered 12)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 3 - Member upvotes a previously upvoted comment Check that there wasn't a increment on score in comment page [line 196] (covered 13)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 4 - Member downvotes a previously downvoted comment Check that there wasn't a decrement on score in post page [line 231] (covered 12)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 4 - Member downvotes a previously downvoted comment Check that there wasn't a decrement on score in comment page [line 246] (covered 13)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 5 - Member changes upvote to downvote Check the +1 increment followed by a -1 decrement on score in post page [line 281] (covered 14)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 5 - Member changes upvote to downvote Check the +1 increment followed by a -1 decrement on score in comment page [line 304] (covered 15)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 6 - Member changes downvote to upvote Check the +1 increment followed by a -1 decrement on score in post page [line 342] (covered 14)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 6 - Member changes downvote to upvote Check the +1 increment followed by a -1 decrement on score in comment page [line 365] (covered 15)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 8 - Member upvotes a reply to a comment Verify upvote on reply success [line 412] (covered 3)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 8 - Member upvotes a reply to a comment Check the +1 increment on reply score in post page [line 421] (covered 10)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 8 - Member upvotes a reply to a comment Check the +1 increment on reply score in comment page [line 434] (covered 11)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 9 - Member downvotes a reply to a comment Verify upvote on reply success [line 477] (covered 3)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 9 - Member downvotes a reply to a comment Check the -1 increment on reply score in post page [line 486] (covered 10)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 9 - Member downvotes a reply to a comment Check the -1 increment on reply score in comment page [line 499] (covered 11)
    US009/US009-ssd.api.test.ts
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 1.1 - Register members should return 200  [line 109] (covered 0)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 1.2 - Login members should return 200  [line 115] (covered 0)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 1.3 - Get popular posts 1, 2 and 3 should return 200  [line 121] (covered 0)
      ~ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 2 - US009 - SSD Alternative 2 - Sort Posts by Popular 2.1 - Check if posts are sorted by score after upvoting [line 128] (covered 1)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 3 - US009 - SSD Alternative 1 - Sort Posts by New 3.1 - Get New posts should return 200 [line 150] (covered 0)
      ~ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 3 - US009 - SSD Alternative 1 - Sort Posts by New 3.2 - Check if Posts are displayed/sorted by TimeStamp [line 154] (covered 1)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 4 - US009 - SSD Alternative 3 - Sort Posts by Unpopular 4.1 - Get Unpopular posts should return 200 [line 167] (covered 0)
      ~ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 4 - US009 - SSD Alternative 3 - Sort Posts by Unpopular 4.2 - Check if Posts are displayed/sorted by Unpopular [line 171] (covered 7)
    US010/us010-ssd.api.test.ts
      ✓ US010- validar que os member details should have the same name as the logged in user [line 25] (killed 2)
      ~ US010- validar que os member details should have the amount of 1 Post [line 35] (covered 4)
      ~ US010- validar que os member details should have the amount of 3 comments [line 45] (covered 4)
      ~ US010- validar que os member details US010- validar dados de um member não loggado should have the same name as the logged in user [line 56] (covered 4)
      ~ US010- validar que os member details US010- validar dados de um member não loggado should have the amount of 1 Post [line 66] (covered 4)
      ~ US010- validar que os member details US010- validar dados de um member não loggado should have the amount of 4 comments [line 76] (covered 4)
      ~ US010- valida dddForum ranking the top commenter name should be AmbrosioDoChoco [line 89] (covered 4)
      ~ US010- valida dddForum ranking the top commenter should have 6 comments [line 99] (covered 4)
      ~ US010- valida dddForum ranking the top commenter should have 2 posts [line 109] (covered 4)
    US011
      login.api.test.ts
        ~ 1 - US011 - Login - Unsuccess Cases 1.1 - Login with incorrect username [line 21] (covered 2)
        ~ 1 - US011 - Login - Unsuccess Cases 1.2 - Login with incorrect password [line 33] (covered 2)
        ~ 1 - US011 - Login - Unsuccess Cases 1.3 - Login with incorrect username and password [line 45] (covered 2)
        ~ 1 - US011 - Login - Unsuccess Cases 1.4 - Login with correct username and blank password [line 57] (covered 2)
        ~ 1 - US011 - Login - Unsuccess Cases 1.5 - Login with blank username and correct password [line 71] (covered 2)
        ~ 1 - US011 - Login - Unsuccess Cases 2 - Try to login more than once whith the same uername and password [line 85] (covered 2)
        ~ 1 - US011 - Login - Unsuccess Cases 2.1 - Try to login more than once whith the same uername and password [line 98] (covered 2)
        ~ 1 - US011 - Login - Unsuccess Cases 2.2 - Try to login more than once whith the same uername and password [line 109] (covered 2)
      US011-ssd.api.test.ts
        ~ 1 - US011 - Member correctly logs in (SSD1) - AC2, AC3, AC4 1.1 - After register, member must login successfully [line 22] (covered 2)
        ✓ 1 - US011 - Member correctly logs in (SSD1) - AC2, AC3, AC4 2 - Validates authenticated member info after login [line 33] (killed 1)
    US012
      logout.api.test.ts
        ✓ 1 - US012 - Logout Unsuccess 1.1 - Member already logged out tryes to log out again with same accesstToken [line 22] (killed 1)
        ~ 2 - US012 - Logout Unsuccess   2.1 - Member loggs out with invalid token [line 38] (covered 2)
        ~ 2 - US012 - Logout Unsuccess   2.2 - The system allows members to logout and then login again even with an expired accessToken1. [line 45] (covered 2)
      US012-ssd.api.test.ts
        ~ 1 - US012 - Member correctly logs out (SSD1) - AC1, AC2, AC3 1.1 - Member logs out of his account successfully [line 19] (covered 2)
    US013/delete.api.test.ts
      ✓ Delete member - Unsuccess attempt to delete user who has created a post [line 87] (killed 1)
      ~ Delete member - Unsuccess attempt to delete user who has commented on a post [line 93] (covered 3)
    US014/US014-unpopular.api.test.ts
      ~ US014 - Sort posts by Unpopular Test 1 - Get unpopular posts API must return Status 200 OK [line 13] (covered 1)
      ~ US014 - Sort posts by Unpopular Test 2 - Check if posts are sorted by lowest score [line 19] (covered 1)
    US015/us015-ssd.api.test.ts
      ✓ US015- TEST AVERAGE comments per day with valid date test average comments per day [line 18] (killed 1)
      ~ US015- TEST AVERAGE comments per day with invalid date test average comments per day with invalid date should return 500 [line 30] (covered 4)
      ~ US015- TEST AVERAGE comments per day with no posts available test average comments per day with no posts available [line 41] (covered 4)
      ~ US015- TEST AVERAGE comments per day with no comments available test average comments per day with no comments available [line 53] (covered 4)
    US017/US017.api.test.ts
      ~ US017 - Get Post with more comments on a spefic date 1.1- checkin endPoint Status positive cenario should be 200 [line 23] (covered 2)
      ~ US017 - Get Post with more comments on a spefic date 1.2 - when the date is 2023-06-26 the result must be Dream TeSTer [line 29] (covered 2)
      ~ US017 - Get Post with more comments on a spefic date 1.3 - when the date is 2023-06-27 the result must be null [line 40] (covered 2)
      ~ US017 - Get Post with more comments on a spefic date 1.4 - when the date is 1231 the result should be a status code 500 [line 51] (covered 2)
    US018/US018.api.test.ts
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Check if endpoint request is successfull [line 24] (covered 2)
      ✘ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the top three commenters on a specific date [line 30] (covered 0)
      ✘ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return top three commenters in alphabetical order for a tie [line 46] (covered 0)
      ✘ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the last two commenters alphabetically in case of a tie [line 63] (covered 0)
      ✘ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the first two commenters alphabetically in case of a tie. [line 80] (covered 0)
      ✘ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Should return null result if no data is found [line 97] (covered 0)
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Should handle an invalid date format [line 113] (covered 2)
    US019/US019.api.test.ts
      ✘ API Tests for getUserWithoutCommentsandPostsbyDate Test 1 - At least one user should not post or comment [line 15] (covered 0)
      ✘ API Tests for getUserWithoutCommentsandPostsbyDate Get a date where all the users did at least one action [line 41] (covered 0)
    US020/US020.api.test.ts
      ~ Testing Percentage of Posts Without return 50 given 2 posts and one having no comments [line 71] (covered 2)
      ~ Testing Percentage of Posts Without return error 500 given wrong date" [line 80] (covered 2)
      ~ Testing Percentage of Posts Without return null given date with no posts [line 85] (covered 2)
  shared/core/Guard.spec.ts
    ✓ guard combined results knows that two successful results equates to success [line 14] (killed 6)
    ✓ guard combined results knows that one success, one failure equates to overall failure [line 19] (killed 5)
    ✓ guard against null or undefined knows that value provided equates to success [line 29] (killed 3)
    ✓ guard against null or undefined knows that null value equates to failure [line 34] (killed 3)
    ✓ guard against null or undefined knows that undefined value equates to failure [line 40] (killed 1)
    ~ guard against null or undefined knows that empty string still equates to success [line 46] (covered 16)
    ~ guard against null or undefined bulk knows that values provided equates to success [line 53] (covered 18)
    ✓ guard against null or undefined bulk knows that a single null value equates to failure [line 61] (killed 1)
    ~ guard against null or undefined bulk knows that a single undefined value equates to failure [line 71] (covered 19)

[NoCoverage] ObjectLiteral
src/api_test/endpoints/Posts.ts:46:16
-         headers: {
-           Authorization: accessToken,
-           Accept: 'application/json',
-           'Content-Type': 'application/json',
-         },
+         headers: {},

[NoCoverage] ObjectLiteral
src/api_test/endpoints/Posts.ts:58:16
-         headers: {
-           Authorization: accessToken,
-           Accept: 'application/json',
-           'Content-Type': 'application/json',
-         },
+         headers: {},

[NoCoverage] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:40
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text == postBody.text || false) {

[NoCoverage] EqualityOperator
src/api_test/endpoints/Posts.ts:70:40
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text == postBody.text || i.link != postBody.link) {

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (true) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (false) {
Ran all tests for this mutant.

[Survived] LogicalOperator
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title == postBody.title || i.memberPostedBy.user.username == regBody.username) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (true && i.memberPostedBy.user.username == regBody.username) {
Ran all tests for this mutant.

[Survived] EqualityOperator
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title != postBody.title && i.memberPostedBy.user.username == regBody.username) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:40
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title == postBody.title && true) {
Ran all tests for this mutant.

[Survived] EqualityOperator
src/api_test/endpoints/Posts.ts:69:40
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title == postBody.title && i.memberPostedBy.user.username != regBody.username) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (true) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (false) {
Ran all tests for this mutant.

[Survived] LogicalOperator
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text == postBody.text && i.link == postBody.link) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (false || i.link == postBody.link) {
Ran all tests for this mutant.

[Survived] EqualityOperator
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text != postBody.text || i.link == postBody.link) {
Ran all tests for this mutant.

[NoCoverage] ObjectLiteral
src/api_test/endpoints/Users.ts:104:16
-         headers: { Authorization: accessToken}
+         headers: {}

[Survived] ObjectLiteral
src/api_test/endpoints/Users.ts:74:13
-         data: { userId: userId },
+         data: {},
Tests ran:
    Delete member - Unsuccess attempt to delete user who has created a post
    Delete member - Unsuccess attempt to delete user who has commented on a post


[NoCoverage] BooleanLiteral
src/shared/core/AppError.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return true

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return false

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return actualValue >= minValue

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return actualValue <= minValue

[Survived] ConditionalExpression
src/shared/core/Guard.ts:30:12
-       return text.length >= numChars
+       return true

[Survived] EqualityOperator
src/shared/core/Guard.ts:30:12
-       return text.length >= numChars
+       return text.length > numChars

[Survived] ConditionalExpression
src/shared/core/Guard.ts:36:12
-       return text.length <= numChars
+       return true

[Survived] EqualityOperator
src/shared/core/Guard.ts:36:12
-       return text.length <= numChars
+       return text.length < numChars

[Survived] ConditionalExpression
src/shared/core/Guard.ts:52:11
-         if (result.isFailure) return result;
+         if (true) return result;
Tests ran:
    guard against null or undefined bulk knows that values provided equates to success
    guard against null or undefined bulk knows that a single null value equates to failure
    guard against null or undefined bulk knows that a single undefined value equates to failure


[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:63:19
-       let isValid = false;
+       let isValid = true;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:65:11
-         if (value === validValue) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:65:11
-         if (value === validValue) {
+         if (false) {

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:65:11
-         if (value === validValue) {
+         if (value !== validValue) {

[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:66:19
-           isValid = true;
+           isValid = false;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:70:9
-       if (isValid) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:70:9
-       if (isValid) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = true;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = false;

[NoCoverage] LogicalOperator
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min || num <= max;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = true && num <= max;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = num > min && num <= max;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = num < min && num <= max;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:37
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min && true;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:37
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min && num < max;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:37
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min && num > max;

[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:88:9
-       if (!isInRange) {
+       if (isInRange) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:88:9
-       if (!isInRange) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:88:9
-       if (!isInRange) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:105:11
-         if (!numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;
+         if (numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:105:11
-         if (!numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;
+         if (true) failingResult = numIsInRangeResult;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:105:11
-         if (!numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;
+         if (false) failingResult = numIsInRangeResult;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:108:9
-       if (failingResult) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:108:9
-       if (failingResult) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:30:12
-       return text.length >= numChars
+       return false

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:30:12
-       return text.length >= numChars
+       return text.length < numChars

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:36:12
-       return text.length <= numChars
+       return false

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:36:12
-       return text.length <= numChars
+       return text.length > numChars

[Survived] ConditionalExpression
src/shared/core/Result.ts:8:9
-       if (isSuccess && error) {
+       if (false) {
Tests ran:
    guard combined results knows that two successful results equates to success
    guard combined results knows that one success, one failure equates to overall failure
    guard against null or undefined knows that value provided equates to success
  and 6 more tests!


[Survived] ConditionalExpression
src/shared/core/Result.ts:11:9
-       if (!isSuccess && !error) {
+       if (false) {
Tests ran:
    guard combined results knows that two successful results equates to success
    guard combined results knows that one success, one failure equates to overall failure
    guard against null or undefined knows that value provided equates to success
  and 6 more tests!


[Survived] ConditionalExpression
src/shared/core/Result.ts:24:9
-       if (!this.isSuccess) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/core/Result.ts:46:11
-         if (result.isFailure) return result;
+         if (true) return result;

[NoCoverage] ConditionalExpression
src/shared/core/Result.ts:46:11
-         if (result.isFailure) return result;
+         if (false) return result;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:62:12
-       return true;
+       return false;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:66:12
-       return false;
+       return true;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:78:12
-       return false;
+       return true;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:82:12
-       return true;
+       return false;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:24:9
-       if (!this.isSuccess) {
+       if (this.isSuccess) {

[NoCoverage] ConditionalExpression
src/shared/core/Result.ts:24:9
-       if (!this.isSuccess) {
+       if (true) {

[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:18:28
-       const aggregateFound = !!this.findMarkedAggregateByID(aggregate.id);
+       const aggregateFound = !this.findMarkedAggregateByID(aggregate.id);

[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:18:29
-       const aggregateFound = !!this.findMarkedAggregateByID(aggregate.id);
+       const aggregateFound = !this.findMarkedAggregateByID(aggregate.id);

[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:20:9
-       if (!aggregateFound) {
+       if (aggregateFound) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:20:9
-       if (!aggregateFound) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:20:9
-       if (!aggregateFound) {
+       if (false) {

[NoCoverage] ArrowFunction
src/shared/domain/events/DomainEvents.ts:26:36
-       aggregate.domainEvents.forEach((event: IDomainEvent) => this.dispatch(event));
+       aggregate.domainEvents.forEach(() => undefined);

[NoCoverage] ArrowFunction
src/shared/domain/events/DomainEvents.ts:30:51
-       const index = this.markedAggregates.findIndex((a) => a.equals(aggregate));
+       const index = this.markedAggregates.findIndex(() => undefined);

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:37:11
-         if (aggregate.id.equals(id)) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:37:11
-         if (aggregate.id.equals(id)) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:48:9
-       if (aggregate) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:48:9
-       if (aggregate) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:56:9
-       if (!this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (this.handlersMap.hasOwnProperty(eventClassName)) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:56:9
-       if (!this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:56:9
-       if (!this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (false) {

[NoCoverage] ArrayDeclaration
src/shared/domain/events/DomainEvents.ts:57:42
-         this.handlersMap[eventClassName] = [];
+         this.handlersMap[eventClassName] = ["Stryker was here"];

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:73:9
-       if (this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:73:9
-       if (this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (object == null && object == undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (false || object == undefined) {

[NoCoverage] EqualityOperator
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (object != null || object == undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:27
-       if (object == null || object == undefined) {
+       if (object == null || false) {

[NoCoverage] EqualityOperator
src/shared/domain/Entity.ts:17:27
-       if (object == null || object == undefined) {
+       if (object == null || object != undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/Entity.ts:18:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:21:9
-       if (this === object) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:21:9
-       if (this === object) {
+       if (false) {

[NoCoverage] EqualityOperator
src/shared/domain/Entity.ts:21:9
-       if (this === object) {
+       if (this !== object) {

[NoCoverage] BooleanLiteral
src/shared/domain/Entity.ts:22:14
-         return true;
+         return false;

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:25:9
-       if (!isEntity(object)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:25:9
-       if (!isEntity(object)) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/Entity.ts:26:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (id === null && id === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (false || id === undefined) {

[NoCoverage] EqualityOperator
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (id !== null || id === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:24
-       if (id === null || id === undefined) {
+       if (id === null || false) {

[NoCoverage] EqualityOperator
src/shared/domain/Identifier.ts:7:24
-       if (id === null || id === undefined) {
+       if (id === null || id !== undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/Identifier.ts:8:14
-         return false;
+         return true;

[NoCoverage] BooleanLiteral
src/shared/domain/Identifier.ts:10:9
-       if (!(id instanceof this.constructor)) {
+       if (id instanceof this.constructor) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:10:9
-       if (!(id instanceof this.constructor)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:10:9
-       if (!(id instanceof this.constructor)) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/Identifier.ts:11:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:13:12
-       return id.toValue() === this.value;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:13:12
-       return id.toValue() === this.value;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/Identifier.ts:13:12
-       return id.toValue() === this.value;
+       return id.toValue() !== this.value;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (vo === null && vo === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (false || vo === undefined) {

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (vo !== null || vo === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:24
-       if (vo === null || vo === undefined) {
+       if (vo === null || false) {

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:22:24
-       if (vo === null || vo === undefined) {
+       if (vo === null || vo !== undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/ValueObject.ts:23:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:25:9
-       if (vo.props === undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:25:9
-       if (vo.props === undefined) {
+       if (false) {

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:25:9
-       if (vo.props === undefined) {
+       if (vo.props !== undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/ValueObject.ts:26:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:28:12
-       return JSON.stringify(this.props) === JSON.stringify(vo.props);
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:28:12
-       return JSON.stringify(this.props) === JSON.stringify(vo.props);
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:28:12
-       return JSON.stringify(this.props) === JSON.stringify(vo.props);
+       return JSON.stringify(this.props) !== JSON.stringify(vo.props);

[NoCoverage] ObjectLiteral
src/shared/domain/ValueObject.ts:14:26
-       let baseProps: any = {
-         ...props,
-       };
+       let baseProps: any = {};

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.currentItems.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:29:37
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.currentItems.filter(() => undefined).length !== 0;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.new.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.new.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:33:28
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.new.filter(() => undefined).length !== 0;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.removed.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.removed.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:37:32
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.removed.filter(() => undefined).length !== 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:41:16
-       this.new = this.new.filter((v) => !this.compareItems(v, item));
+       this.new = this.new;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:41:32
-       this.new = this.new.filter((v) => !this.compareItems(v, item));
+       this.new = this.new.filter(() => undefined);

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:41:39
-       this.new = this.new.filter((v) => !this.compareItems(v, item));
+       this.new = this.new.filter((v) => this.compareItems(v, item));

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:45:25
-       this.currentItems = this.currentItems.filter((v) => !this.compareItems(item, v));
+       this.currentItems = this.currentItems;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:45:50
-       this.currentItems = this.currentItems.filter((v) => !this.compareItems(item, v));
+       this.currentItems = this.currentItems.filter(() => undefined);

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:45:57
-       this.currentItems = this.currentItems.filter((v) => !this.compareItems(item, v));
+       this.currentItems = this.currentItems.filter((v) => this.compareItems(item, v));

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:49:20
-       this.removed = this.removed.filter((v) => !this.compareItems(item, v));
+       this.removed = this.removed;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:49:40
-       this.removed = this.removed.filter((v) => !this.compareItems(item, v));
+       this.removed = this.removed.filter(() => undefined);

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:49:47
-       this.removed = this.removed.filter((v) => !this.compareItems(item, v));
+       this.removed = this.removed.filter((v) => this.compareItems(item, v));

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.initial.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.initial.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:53:32
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.initial.filter(() => undefined).length !== 0;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:61:9
-       if (this.isRemovedItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:61:9
-       if (this.isRemovedItem(item)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (!this.isNewItem(item) || !this.wasAddedInitially(item)) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (this.isNewItem(item) && !this.wasAddedInitially(item)) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:65:34
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (!this.isNewItem(item) && this.wasAddedInitially(item)) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:69:9
-       if (!this.isCurrentItem(item)) {
+       if (this.isCurrentItem(item)) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:69:9
-       if (!this.isCurrentItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:69:9
-       if (!this.isCurrentItem(item)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:77:9
-       if (this.isNewItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:77:9
-       if (this.isNewItem(item)) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:82:9
-       if (!this.isRemovedItem(item)) {
+       if (this.isRemovedItem(item)) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:82:9
-       if (!this.isRemovedItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:82:9
-       if (!this.isRemovedItem(item)) {
+       if (false) {

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:17:18
-     "development": {
-       "username": DDD_FORUM_DB_USER,
-       "password": DDD_FORUM_DB_PASS,
-       "database": DDD_FORUM_DB_DEV_DB_NAME,
-       "host": DDD_FORUM_DB_HOST,
-       "dialect": "mysql"
-     },
+     "development": {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:31:17
-     "production": {
-       "username": DDD_FORUM_DB_USER,
-       "password": DDD_FORUM_DB_PASS,
-       "database": DDD_FORUM_DB_PROD_DB_NAME,
-       "host": DDD_FORUM_DB_HOST,
-       "dialect": "mysql"
-     }
+     "production": {}

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/config/config.js:46:14
-   const mode = DDD_FORUM_IS_PRODUCTION === "true" ? 'prod' : 'dev';
+   const mode = true ? 'prod' : 'dev';

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/config/config.js:46:14
-   const mode = DDD_FORUM_IS_PRODUCTION === "true" ? 'prod' : 'dev';
+   const mode = false ? 'prod' : 'dev';

[Survived] EqualityOperator
src/shared/infra/database/sequelize/config/config.js:46:14
-   const mode = DDD_FORUM_IS_PRODUCTION === "true" ? 'prod' : 'dev';
+   const mode = DDD_FORUM_IS_PRODUCTION !== "true" ? 'prod' : 'dev';

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/config/config.js:50:29
-   module.exports.connection = DDD_FORUM_IS_PRODUCTION === "true"
+   module.exports.connection = false

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:56:21
-       dialectOptions: {
-         multipleStatements: true,
-       },
+       dialectOptions: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/config/config.js:57:27
-         multipleStatements: true,
+         multipleStatements: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:59:11
-       pool: {
-         max: 5,
-         min: 0,
-         idle: 10000
-       },
+       pool: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/config/config.js:64:14
-       logging: false
+       logging: true

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:13:35
-     BaseUser.addHook('afterCreate', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterCreate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:14:36
-     BaseUser.addHook('afterDestroy', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterDestroy', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:15:35
-     BaseUser.addHook('afterUpdate', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterUpdate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:16:33
-     BaseUser.addHook('afterSave', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterSave', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:17:35
-     BaseUser.addHook('afterUpsert', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterUpsert', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:19:33
-     Member.addHook('afterCreate', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterCreate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:20:34
-     Member.addHook('afterDestroy', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterDestroy', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:21:33
-     Member.addHook('afterUpdate', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterUpdate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:22:31
-     Member.addHook('afterSave', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterSave', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:23:33
-     Member.addHook('afterUpsert', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterUpsert', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:25:31
-     Post.addHook('afterCreate', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterCreate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:26:32
-     Post.addHook('afterDestroy', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterDestroy', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:27:31
-     Post.addHook('afterUpdate', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterUpdate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:28:29
-     Post.addHook('afterSave', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterSave', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:29:31
-     Post.addHook('afterUpsert', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterUpsert', () => undefined);

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:4:16
-   export default {
-     up: async (queryInterface, Sequelize) => {
-       const CREATE_BASE_USER = () => {
-         return queryInterface.createTable('base_user', {
-           base_user_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           user_email: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-             unique: true,
-           },
-           is_email_verified: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           username: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-           },
-           user_password: {
-             type: Sequelize.STRING,
-             allowNull: true,
-             defaultValue: null,
-           },
-           is_admin_user: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           is_deleted: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       };
-       const CREATE_MEMBER = () =>
-         queryInterface.createTable('member', {
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_POST = () =>
-         queryInterface.createTable('post', {
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_COMMENT = () =>
-         queryInterface.createTable('comment', {
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_POST_VOTE = () =>
-         queryInterface.createTable('post_vote', {
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_COMMENT_VOTE = () =>
-         queryInterface.createTable('comment_vote', {
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       await runner.run([
-         () => CREATE_BASE_USER(),
-         () => CREATE_MEMBER(),
-         () => CREATE_POST(),
-         () => CREATE_COMMENT(),
-         () => CREATE_POST_VOTE(),
-         () => CREATE_COMMENT_VOTE(),
-       ]);
-     },
-     down: (queryInterface, Sequelize) => {
-       return runner.run([() => queryInterface.dropTable('base_user')]);
-     },
-   };
+   export default {};

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:7:54
-         return queryInterface.createTable('base_user', {
-           base_user_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           user_email: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-             unique: true,
-           },
-           is_email_verified: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           username: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-           },
-           user_password: {
-             type: Sequelize.STRING,
-             allowNull: true,
-             defaultValue: null,
-           },
-           is_admin_user: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           is_deleted: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         return queryInterface.createTable('base_user', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:8:23
-           base_user_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           base_user_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:11:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:12:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:14:21
-           user_email: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-             unique: true,
-           },
+           user_email: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:16:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:17:19
-             unique: true,
+             unique: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:19:28
-           is_email_verified: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
+           is_email_verified: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:21:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:22:25
-             defaultValue: false,
+             defaultValue: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:24:19
-           username: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-           },
+           username: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:26:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:28:24
-           user_password: {
-             type: Sequelize.STRING,
-             allowNull: true,
-             defaultValue: null,
-           },
+           user_password: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:30:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:33:24
-           is_admin_user: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
+           is_admin_user: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:35:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:36:25
-             defaultValue: false,
+             defaultValue: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:38:21
-           is_deleted: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
+           is_deleted: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:40:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:41:25
-             defaultValue: false,
+             defaultValue: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:43:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:45:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:48:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:50:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:56:27
-       const CREATE_MEMBER = () =>
-         queryInterface.createTable('member', {
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_MEMBER = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:57:44
-         queryInterface.createTable('member', {
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('member', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:58:20
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:61:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:62:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:64:25
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_base_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:66:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:67:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:68:23
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:75:21
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
+           reputation: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:77:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:80:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:82:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:85:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:87:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:92:25
-       const CREATE_POST = () =>
-         queryInterface.createTable('post', {
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_POST = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:93:42
-         queryInterface.createTable('post', {
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('post', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:94:18
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           post_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:97:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:98:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:100:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:102:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:103:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:110:15
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
+           type: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:112:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:114:16
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
+           title: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:116:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:118:15
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
+           text: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:120:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:122:15
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
+           link: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:124:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:126:15
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
+           slug: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:128:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:130:17
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
+           points: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:132:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:135:29
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
+           total_num_comments: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:137:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:140:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:142:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:145:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:147:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:152:28
-       const CREATE_COMMENT = () =>
-         queryInterface.createTable('comment', {
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_COMMENT = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:153:45
-         queryInterface.createTable('comment', {
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('comment', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:154:21
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           comment_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:157:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:158:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:160:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:162:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:163:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:170:28
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           parent_comment_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:172:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:173:23
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:180:18
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           post_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:182:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:183:23
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:190:15
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
+           text: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:192:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:194:17
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
+           points: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:196:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:199:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:201:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:204:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:206:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:211:30
-       const CREATE_POST_VOTE = () =>
-         queryInterface.createTable('post_vote', {
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_POST_VOTE = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:212:47
-         queryInterface.createTable('post_vote', {
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('post_vote', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:213:23
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           post_vote_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:216:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:217:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:219:18
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           post_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:221:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:222:23
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:229:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:231:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:232:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:239:15
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
+           type: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:241:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:243:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:245:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:248:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:250:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:255:33
-       const CREATE_COMMENT_VOTE = () =>
-         queryInterface.createTable('comment_vote', {
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_COMMENT_VOTE = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:256:50
-         queryInterface.createTable('comment_vote', {
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('comment_vote', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:257:26
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           comment_vote_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:260:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:261:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:263:21
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           comment_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:265:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:266:23
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:273:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:275:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:276:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:283:15
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
+           type: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:285:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:287:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:289:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:292:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:294:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrayDeclaration
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:299:22
-       await runner.run([
-         () => CREATE_BASE_USER(),
-         () => CREATE_MEMBER(),
-         () => CREATE_POST(),
-         () => CREATE_COMMENT(),
-         () => CREATE_POST_VOTE(),
-         () => CREATE_COMMENT_VOTE(),
-       ]);
+       await runner.run([]);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:300:7
-         () => CREATE_BASE_USER(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:301:7
-         () => CREATE_MEMBER(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:302:7
-         () => CREATE_POST(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:303:7
-         () => CREATE_COMMENT(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:304:7
-         () => CREATE_POST_VOTE(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:305:7
-         () => CREATE_COMMENT_VOTE(),
+         () => undefined,

[NoCoverage] ArrayDeclaration
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:310:23
-       return runner.run([() => queryInterface.dropTable('base_user')]);
+       return runner.run([]);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:310:24
-       return runner.run([() => queryInterface.dropTable('base_user')]);
+       return runner.run([() => undefined]);

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:4:5
-       {
-         base_user_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         user_email: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-           unique: true,
-         },
-         is_email_verified: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
-         is_admin_user: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
-         is_deleted: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
-         username: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-         },
-         user_password: {
-           type: DataTypes.STRING,
-           allowNull: true,
-           defaultValue: null,
-         },
-       },
+       {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:5:21
-         base_user_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         base_user_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:8:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:9:21
-           primaryKey: true,
+           primaryKey: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:11:19
-         user_email: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-           unique: true,
-         },
+         user_email: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:13:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:14:17
-           unique: true,
+           unique: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:16:26
-         is_email_verified: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
+         is_email_verified: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:18:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:19:23
-           defaultValue: false,
+           defaultValue: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:21:22
-         is_admin_user: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
+         is_admin_user: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:23:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:24:23
-           defaultValue: false,
+           defaultValue: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:26:19
-         is_deleted: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
+         is_deleted: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:28:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:29:23
-           defaultValue: false,
+           defaultValue: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:31:17
-         username: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-         },
+         username: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:33:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:35:22
-         user_password: {
-           type: DataTypes.STRING,
-           allowNull: true,
-           defaultValue: null,
-         },
+         user_password: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:37:20
-           allowNull: true,
+           allowNull: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:41:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'base_user',
-         indexes: [{ unique: true, fields: ['user_email'] }],
-       },
+       {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:42:19
-         timestamps: true,
+         timestamps: false,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:43:20
-         underscored: true,
+         underscored: false,

[Survived] ArrayDeclaration
src/shared/infra/database/sequelize/models/BaseUser.ts:45:16
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [],

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:45:17
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [{}],

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:45:27
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [{ unique: false, fields: ['user_email'] }],

[Survived] ArrayDeclaration
src/shared/infra/database/sequelize/models/BaseUser.ts:45:41
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [{ unique: true, fields: [] }],

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:50:36
-       BaseUser.hasOne(models.Member, { as: 'Member', foreignKey: 'member_id' });
+       BaseUser.hasOne(models.Member, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:4:5
-       {
-         comment_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         parent_comment_id: {
-           type: DataTypes.UUID,
-           allowNull: true,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: false,
-         },
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 1,
-         },
-       },
+       {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:5:19
-         comment_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         comment_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:8:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:9:21
-           primaryKey: true,
+           primaryKey: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:11:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:13:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:14:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:21:16
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         post_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:23:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:24:21
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:31:26
-         parent_comment_id: {
-           type: DataTypes.UUID,
-           allowNull: true,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         parent_comment_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:33:20
-           allowNull: true,
+           allowNull: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:34:21
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:41:13
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: false,
-         },
+         text: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:43:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:45:15
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 1,
-         },
+         points: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:47:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:51:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'comment',
-       },
+       {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:52:19
-         timestamps: true,
+         timestamps: false,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:53:20
-         underscored: true,
+         underscored: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:59:38
-       Comment.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       Comment.belongsTo(models.Member, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:64:36
-       Comment.belongsTo(models.Post, { foreignKey: 'post_id', targetKey: 'post_id', as: 'Post' });
+       Comment.belongsTo(models.Post, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:65:41
-       Comment.hasMany(models.CommentVote, { foreignKey: 'comment_id', as: 'CommentVotes' });
+       Comment.hasMany(models.CommentVote, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:4:5
-       {
-         comment_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         comment_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
-       },
+       {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:5:24
-         comment_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         comment_vote_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:8:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:9:21
-           primaryKey: true,
+           primaryKey: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:11:19
-         comment_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         comment_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:13:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:14:21
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:21:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:23:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:24:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:31:13
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
+         type: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:33:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:36:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'comment_vote',
-       },
+       {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:37:19
-         timestamps: true,
+         timestamps: false,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:38:20
-         underscored: true,
+         underscored: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:44:42
-       CommentVote.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       CommentVote.belongsTo(models.Member, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:49:43
-       CommentVote.belongsTo(models.Comment, {
-         foreignKey: 'comment_id',
-         targetKey: 'comment_id',
-         as: 'Comment',
-       });
+       CommentVote.belongsTo(models.Comment, {});

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/index.ts:26:20
-   let modelsLoaded = false;
+   let modelsLoaded = true;

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:29:7
-     if (modelsLoaded) return models;
+     if (true) return models;

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:29:7
-     if (modelsLoaded) return models;
+     if (false) return models;

[Survived] ArrowFunction
src/shared/infra/database/sequelize/models/index.ts:35:7
-         (t) =>
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+         () => undefined,

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:36:9
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           false,

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:36:10
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (true) && !~t.indexOf('index') && !~t.indexOf('.map'),

[Survived] LogicalOperator
src/shared/infra/database/sequelize/models/index.ts:36:10
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') && ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),

[Survived] UnaryOperator
src/shared/infra/database/sequelize/models/index.ts:36:10
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),

[NoCoverage] UnaryOperator
src/shared/infra/database/sequelize/models/index.ts:36:31
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') || t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/index.ts:36:77
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && ~t.indexOf('.map'),

[Survived] UnaryOperator
src/shared/infra/database/sequelize/models/index.ts:36:78
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !t.indexOf('.map'),

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:41:19
-     for (let i = 0; i < modelsList.length; i++) {
+     for (let i = 0; false; i++) {

[Survived] EqualityOperator
src/shared/infra/database/sequelize/models/index.ts:41:19
-     for (let i = 0; i < modelsList.length; i++) {
+     for (let i = 0; i >= modelsList.length; i++) {

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:48:9
-       if (models[modelName].associate) {
+       if (true) {

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:48:9
-       if (models[modelName].associate) {
+       if (false) {

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/index.ts:56:18
-     modelsLoaded = true;
+     modelsLoaded = false;

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:4:5
-       {
-         member_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         member_base_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           primaryKey: true,
-           references: {
-             model: 'base_user',
-             key: 'base_user_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         reputation: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
-       },
+       {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:5:18
-         member_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         member_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:8:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:9:21
-           primaryKey: true,
+           primaryKey: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:11:23
-         member_base_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           primaryKey: true,
-           references: {
-             model: 'base_user',
-             key: 'base_user_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_base_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:13:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:14:21
-           primaryKey: true,
+           primaryKey: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:15:21
-           references: {
-             model: 'base_user',
-             key: 'base_user_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:22:19
-         reputation: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
+         reputation: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:24:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:28:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'member',
-       },
+       {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:29:19
-         timestamps: true,
+         timestamps: false,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:30:20
-         underscored: true,
+         underscored: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:36:39
-       Member.belongsTo(models.BaseUser, {
-         foreignKey: 'member_base_id',
-         targetKey: 'base_user_id',
-         as: 'BaseUser',
-       });
+       Member.belongsTo(models.BaseUser, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:41:33
-       Member.hasMany(models.Post, { foreignKey: 'member_id', as: 'Post' });
+       Member.hasMany(models.Post, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:4:5
-       {
-         post_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         type: {
-           type: DataTypes.STRING(30),
-           allowNull: false,
-         },
-         title: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
-         link: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
-         slug: {
-           type: DataTypes.STRING(300),
-           allowNull: false,
-         },
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
-         total_num_comments: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
-       },
+       {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:5:16
-         post_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         post_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:8:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:9:21
-           primaryKey: true,
+           primaryKey: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:11:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:13:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:14:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:21:13
-         type: {
-           type: DataTypes.STRING(30),
-           allowNull: false,
-         },
+         type: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:23:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:25:14
-         title: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
+         title: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:27:20
-           allowNull: true,
+           allowNull: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:29:13
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
+         text: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:31:20
-           allowNull: true,
+           allowNull: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:33:13
-         link: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
+         link: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:35:20
-           allowNull: true,
+           allowNull: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:37:13
-         slug: {
-           type: DataTypes.STRING(300),
-           allowNull: false,
-         },
+         slug: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:39:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:41:15
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
+         points: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:43:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:46:27
-         total_num_comments: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
+         total_num_comments: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:48:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:52:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'post',
-       },
+       {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:53:19
-         timestamps: true,
+         timestamps: false,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:54:20
-         underscored: true,
+         underscored: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:60:35
-       Post.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       Post.belongsTo(models.Member, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:65:35
-       Post.hasMany(models.PostVote, { foreignKey: 'post_id', as: 'Votes' });
+       Post.hasMany(models.PostVote, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:4:5
-       {
-         post_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
-       },
+       {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:5:21
-         post_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         post_vote_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:8:20
-           allowNull: false,
+           allowNull: true,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:9:21
-           primaryKey: true,
+           primaryKey: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:11:16
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         post_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:13:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:14:21
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:21:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:23:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:24:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:31:13
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
+         type: {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:33:20
-           allowNull: false,
+           allowNull: true,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:36:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'post_vote',
-       },
+       {},

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:37:19
-         timestamps: true,
+         timestamps: false,

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:38:20
-         underscored: true,
+         underscored: false,

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:44:39
-       PostVote.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       PostVote.belongsTo(models.Member, {});

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:49:37
-       PostVote.belongsTo(models.Post, { foreignKey: 'post_id', targetKey: 'post_id', as: 'Post' });
+       PostVote.belongsTo(models.Post, {});

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:6:11
-         if (err.original) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:6:11
-         if (err.original) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:12:13
-           if (err.original.code == 'ER_DUP_ENTRY') {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:12:13
-           if (err.original.code == 'ER_DUP_ENTRY') {
+           if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:12:13
-           if (err.original.code == 'ER_DUP_ENTRY') {
+           if (err.original.code != 'ER_DUP_ENTRY') {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:14:20
-           } else if (err.original.code == 'ER_DUP_FIELDNAME') {
+           } else if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:14:20
-           } else if (err.original.code == 'ER_DUP_FIELDNAME') {
+           } else if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:14:20
-           } else if (err.original.code == 'ER_DUP_FIELDNAME') {
+           } else if (err.original.code != 'ER_DUP_FIELDNAME') {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:21:20
-           } else if (err.original.code == 'ER_CANT_DROP_FIELD_OR_KEY') {
+           } else if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:21:20
-           } else if (err.original.code == 'ER_CANT_DROP_FIELD_OR_KEY') {
+           } else if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:21:20
-           } else if (err.original.code == 'ER_CANT_DROP_FIELD_OR_KEY') {
+           } else if (err.original.code != 'ER_CANT_DROP_FIELD_OR_KEY') {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:28:20
-           } else if (err.name == 'SequelizeUnknownConstraintError') {
+           } else if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:28:20
-           } else if (err.name == 'SequelizeUnknownConstraintError') {
+           } else if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:28:20
-           } else if (err.name == 'SequelizeUnknownConstraintError') {
+           } else if (err.name != 'SequelizeUnknownConstraintError') {

[NoCoverage] ObjectLiteral
src/shared/infra/http/api/v1.ts:9:19
-     return res.json({ message: "Yo! we're up" });
+     return res.json({});

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:19:33
-   const server = new ApolloServer({
-     typeDefs: [typeDefs, ForumTypeDefs, UserTypeDefs],
-     resolvers: {
-       DateTime: GraphQLDateTime,
-       Post: {
-         memberPostedBy: async (post, args, context) => {
-           const memberDetails = await memberRepo.getMemberDetailsByPostLinkOrSlug(post.slug);
-           return MemberDetailsMap.toDTO(memberDetails);
-         },
-       },
-       Query: {
-         posts: async (parent, args, context) => {
-           const response = await getRecentPosts.execute({});
-           if (response.isRight()) {
-             const postDetails = response.value.getValue();
-             return postDetails.map(PostDetailsMap.toDTO);
-           } else {
-             throw response.value;
-           }
-         },
-       },
-     },
-   });
+   const server = new ApolloServer({});

[NoCoverage] ArrayDeclaration
src/shared/infra/http/graphql/server.ts:20:13
-     typeDefs: [typeDefs, ForumTypeDefs, UserTypeDefs],
+     typeDefs: [],

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:21:14
-     resolvers: {
-       DateTime: GraphQLDateTime,
-       Post: {
-         memberPostedBy: async (post, args, context) => {
-           const memberDetails = await memberRepo.getMemberDetailsByPostLinkOrSlug(post.slug);
-           return MemberDetailsMap.toDTO(memberDetails);
-         },
-       },
-       Query: {
-         posts: async (parent, args, context) => {
-           const response = await getRecentPosts.execute({});
-           if (response.isRight()) {
-             const postDetails = response.value.getValue();
-             return postDetails.map(PostDetailsMap.toDTO);
-           } else {
-             throw response.value;
-           }
-         },
-       },
-     },
+     resolvers: {},

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:23:11
-       Post: {
-         memberPostedBy: async (post, args, context) => {
-           const memberDetails = await memberRepo.getMemberDetailsByPostLinkOrSlug(post.slug);
-           return MemberDetailsMap.toDTO(memberDetails);
-         },
-       },
+       Post: {},

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:29:12
-       Query: {
-         posts: async (parent, args, context) => {
-           const response = await getRecentPosts.execute({});
-           if (response.isRight()) {
-             const postDetails = response.value.getValue();
-             return postDetails.map(PostDetailsMap.toDTO);
-           } else {
-             throw response.value;
-           }
-         },
-       },
+       Query: {},

[NoCoverage] ObjectLiteral
src/shared/infra/http/models/BaseController.ts:17:34
-       return res.status(code).json({ message });
+       return res.status(code).json({});

[NoCoverage] BooleanLiteral
src/shared/infra/http/models/BaseController.ts:21:9
-       if (!!dto) {
+       if (!dto) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/models/BaseController.ts:21:9
-       if (!!dto) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/models/BaseController.ts:21:9
-       if (!!dto) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/infra/http/models/BaseController.ts:21:10
-       if (!!dto) {
+       if (!dto) {

[NoCoverage] ObjectLiteral
src/shared/infra/http/models/BaseController.ts:67:33
-       return res.status(500).json({
-         message: error.toString(),
-       });
+       return res.status(500).json({});

[NoCoverage] ObjectLiteral
src/shared/infra/http/utils/Middleware.ts:13:36
-       return res.status(status).send({ message });
+       return res.status(status).send({});

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:20:11
-         if (token) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:20:11
-         if (token) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = false;

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded !== false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:22:34
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:22:47
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded === true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:24:13
-           if (signatureFailed) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:24:13
-           if (signatureFailed) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:33:13
-           if (tokens.length !== 0) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:33:13
-           if (tokens.length !== 0) {
+           if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:33:13
-           if (tokens.length !== 0) {
+           if (tokens.length === 0) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:49:11
-         if (token) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:49:11
-         if (token) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = false;

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded !== false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:51:34
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:51:47
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded === true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:53:13
-           if (signatureFailed) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:53:13
-           if (signatureFailed) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:62:13
-           if (tokens.length !== 0) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:62:13
-           if (tokens.length !== 0) {
+           if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:62:13
-           if (tokens.length !== 0) {
+           if (tokens.length === 0) {

[NoCoverage] ObjectLiteral
src/shared/infra/http/utils/Middleware.ts:79:22
-       return rateLimit({
-         windowMs: mins * 60 * 1000,
-         max: maxRequests,
-       });
+       return rateLimit({});

[NoCoverage] ArithmeticOperator
src/shared/infra/http/utils/Middleware.ts:80:17
-         windowMs: mins * 60 * 1000,
+         windowMs: mins * 60 / 1000,

[NoCoverage] ArithmeticOperator
src/shared/infra/http/utils/Middleware.ts:80:17
-         windowMs: mins * 60 * 1000,
+         windowMs: mins / 60 * 1000,

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:86:9
-       if (!isProduction) {
+       if (isProduction) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:86:9
-       if (!isProduction) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:86:9
-       if (!isProduction) {
+       if (false) {

[NoCoverage] ArrayDeclaration
src/shared/infra/http/utils/Middleware.ts:90:32
-       const approvedDomainList = ['https://khalilstemmler.com'];
+       const approvedDomainList = [];

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:94:27
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !approvedDomainList.find(d => d === domain);

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:94:28
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !approvedDomainList.find(d => d === domain);

[NoCoverage] ArrowFunction
src/shared/infra/http/utils/Middleware.ts:94:53
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find(() => undefined);

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:94:60
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find((d) => true);

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:94:60
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find((d) => false);

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:94:60
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find((d) => d !== domain);

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:97:9
-       if (!isValidDomain) {
+       if (isValidDomain) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:97:9
-       if (!isValidDomain) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:97:9
-       if (!isValidDomain) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/shared/infra/http/utils/Middleware.ts:98:35
-         return res.status(403).json({ message: 'Unauthorized' });
+         return res.status(403).json({});

[NoCoverage] ObjectLiteral
src/shared/infra/http/app.ts:10:16
-   const origin = {
-     // origin: isProduction ? 'https://dddforum.com' : '*',
-     origin: '*',
-   };
+   const origin = {};

[NoCoverage] ObjectLiteral
src/shared/infra/http/app.ts:18:31
-   app.use(bodyParser.urlencoded({ extended: true }));
+   app.use(bodyParser.urlencoded({}));

[NoCoverage] BooleanLiteral
src/shared/infra/http/app.ts:18:43
-   app.use(bodyParser.urlencoded({ extended: true }));
+   app.use(bodyParser.urlencoded({ extended: false }));

[NoCoverage] ConditionalExpression
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = false;

[NoCoverage] LogicalOperator
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = (process.env.DEBUG_PORT || process.env.PORT) && 5001;

[NoCoverage] ConditionalExpression
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = false || 5001;

[NoCoverage] LogicalOperator
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = process.env.DEBUG_PORT && process.env.PORT || 5001;

[NoCoverage] ArrowFunction
src/shared/utils/FlowUtils.ts:3:24
-       return new Promise((resolve) => setTimeout(resolve, ms));
+       return new Promise(() => undefined);

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"](\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\S@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+))|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"])*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\S@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|("."))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[^0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[^0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[^0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[^0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([^a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[^a-zA-Z]{2,}))$/;

[NoCoverage] MethodExpression
src/shared/utils/TextUtils.ts:19:20
-       return re.test(String(email).toLowerCase());
+       return re.test(String(email).toUpperCase());

[Survived] ConditionalExpression
src/shared/utils/TextUtils.ts:26:32
-       for (let i = numberDigits; i > 0; --i) {
+       for (let i = numberDigits; false; --i) {

[Survived] EqualityOperator
src/shared/utils/TextUtils.ts:26:32
-       for (let i = numberDigits; i > 0; --i) {
+       for (let i = numberDigits; i >= 0; --i) {

[Survived] EqualityOperator
src/shared/utils/TextUtils.ts:26:32
-       for (let i = numberDigits; i > 0; --i) {
+       for (let i = numberDigits; i <= 0; --i) {

[Survived] ArithmeticOperator
src/shared/utils/TextUtils.ts:27:33
-         value += chars[Math.round(Math.random() * (chars.length - 1))];
+         value += chars[Math.round(Math.random() / (chars.length - 1))];

[Survived] ArithmeticOperator
src/shared/utils/TextUtils.ts:27:50
-         value += chars[Math.round(Math.random() * (chars.length - 1))];
+         value += chars[Math.round(Math.random() * (chars.length + 1))];

Ran 0.33 tests per mutant on average.
------------------------------------------|---------|----------|-----------|------------|----------|----------|
File                                      | % score | # killed | # timeout | # survived | # no cov | # errors |
------------------------------------------|---------|----------|-----------|------------|----------|----------|
All files                                 |    6.90 |       38 |         5 |        177 |      403 |       63 |
 api_test                                 |   52.63 |       19 |         1 |         13 |        5 |       21 |
  endpoints                               |   52.63 |       19 |         1 |         13 |        5 |       21 |
   Comments.ts                            |  100.00 |       12 |         1 |          0 |        0 |        6 |
   Posts.ts                               |    5.88 |        1 |         0 |         12 |        4 |        7 |
   Users.ts                               |   75.00 |        6 |         0 |          1 |        1 |        8 |
 shared                                   |    3.93 |       19 |         4 |        164 |      398 |       42 |
  core                                    |   27.94 |       19 |         0 |          8 |       41 |        1 |
   AppError.ts                            |    0.00 |        0 |         0 |          0 |        1 |        0 |
   Guard.ts                               |   21.28 |       10 |         0 |          5 |       32 |        0 |
   Result.ts                              |   45.00 |        9 |         0 |          3 |        8 |        0 |
   UseCaseError.ts                        |     n/a |        0 |         0 |          0 |        0 |        0 |
   WithChanges.ts                         |     n/a |        0 |         0 |          0 |        0 |        1 |
  domain                                  |    0.00 |        0 |         0 |          0 |      107 |        8 |
   events                                 |    0.00 |        0 |         0 |          0 |       17 |        2 |
    DomainEvents.ts                       |    0.00 |        0 |         0 |          0 |       17 |        2 |
   AggregateRoot.ts                       |     n/a |        0 |         0 |          0 |        0 |        1 |
   Entity.ts                              |    0.00 |        0 |         0 |          0 |       15 |        1 |
   Identifier.ts                          |    0.00 |        0 |         0 |          0 |       15 |        0 |
   UniqueEntityID.ts                      |     n/a |        0 |         0 |          0 |        0 |        0 |
   ValueObject.ts                         |    0.00 |        0 |         0 |          0 |       16 |        0 |
   WatchedList.ts                         |    0.00 |        0 |         0 |          0 |       44 |        4 |
  infra                                   |    0.79 |        0 |         3 |        151 |      225 |       32 |
   database                               |    0.95 |        0 |         3 |        151 |      161 |       29 |
    sequelize                             |    0.95 |        0 |         3 |        151 |      161 |       29 |
     config                               |    0.00 |        0 |         0 |         10 |        0 |        5 |
      config.js                           |    0.00 |        0 |         0 |         10 |        0 |        5 |
     hooks                                |    0.00 |        0 |         0 |          0 |       15 |        0 |
      index.ts                            |    0.00 |        0 |         0 |          0 |       15 |        0 |
     migrations                           |    0.00 |        0 |         0 |          0 |      131 |        0 |
      20191004134636-initial-migration.ts |    0.00 |        0 |         0 |          0 |      131 |        0 |
     models                               |    2.07 |        0 |         3 |        141 |        1 |       23 |
      BaseUser.ts                         |    0.00 |        0 |         0 |         28 |        0 |        0 |
      Comment.ts                          |    0.00 |        0 |         0 |         23 |        0 |        0 |
      CommentVote.ts                      |    0.00 |        0 |         0 |         17 |        0 |        0 |
      index.ts                            |   15.79 |        0 |         3 |         15 |        1 |       23 |
      Member.ts                           |    0.00 |        0 |         0 |         15 |        0 |        0 |
      Post.ts                             |    0.00 |        0 |         0 |         26 |        0 |        0 |
      PostVote.ts                         |    0.00 |        0 |         0 |         17 |        0 |        0 |
     runner.ts                            |    0.00 |        0 |         0 |          0 |       14 |        1 |
   http                                   |    0.00 |        0 |         0 |          0 |       64 |        3 |
    api                                   |    0.00 |        0 |         0 |          0 |        1 |        0 |
     v1.ts                                |    0.00 |        0 |         0 |          0 |        1 |        0 |
    graphql                               |    0.00 |        0 |         0 |          0 |        5 |        3 |
     forum.ts                             |     n/a |        0 |         0 |          0 |        0 |        0 |
     server.ts                            |    0.00 |        0 |         0 |          0 |        5 |        3 |
     users.ts                             |     n/a |        0 |         0 |          0 |        0 |        0 |
    models                                |    0.00 |        0 |         0 |          0 |        6 |        0 |
     BaseController.ts                    |    0.00 |        0 |         0 |          0 |        6 |        0 |
    utils                                 |    0.00 |        0 |         0 |          0 |       44 |        0 |
     Middleware.ts                        |    0.00 |        0 |         0 |          0 |       44 |        0 |
    app.ts                                |    0.00 |        0 |         0 |          0 |        8 |        0 |
  utils                                   |    3.23 |        0 |         1 |          5 |       25 |        1 |
   FlowUtils.ts                           |    0.00 |        0 |         0 |          0 |        1 |        0 |
   TextUtils.ts                           |    3.33 |        0 |         1 |          5 |       24 |        1 |
------------------------------------------|---------|----------|-----------|------------|----------|----------|
[32m04:22:57 (90266) INFO HtmlReporter[39m Your report can be found at: file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/reports/mutation/mutation.html
[32m04:22:57 (90266) INFO MutationTestExecutor[39m Done in 10 minutes 56 seconds.
