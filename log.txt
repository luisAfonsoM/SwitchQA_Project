[33m01:46:31 (74818) WARN PluginLoader[39m Module "@stryker-mutator/typescript" did not contribute a StrykerJS plugin. It didn't export a "strykerPlugins" or "strykerValidationSchema".
[32m01:46:33 (74818) INFO ProjectReader[39m Found 274 of 2253 file(s) to be mutated using incremental report with 0 mutant(s), and 206 test(s).
[32m01:46:34 (74818) INFO Instrumenter[39m Instrumented 274 source file(s) with 3801 mutant(s)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/configHandler.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/configHandler.ts.html (235:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 42)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/config/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 43)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Comments.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Comments.ts.html (283:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 44)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Posts.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Posts.ts.html (301:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 45)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Users.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/Users.ts.html (412:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 46)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/AEndpoint.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/AEndpoint.ts.html (154:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 47)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/abstracts/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 48)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/RestClient.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/RestClient.ts.html (766:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 50)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/endpoints/index.html (91:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 49)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/api_test/restClient/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 51)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/configHandler.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/configHandler.ts.html (235:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 54)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/config/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 55)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Comments.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Comments.ts.html (283:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 57)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Posts.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Posts.ts.html (301:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 58)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Users.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/Users.ts.html (412:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 59)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/AEndpoint.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/AEndpoint.ts.html (154:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 60)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/abstracts/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 61)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/endpoints/index.html (91:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 62)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/index.html (104:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 63)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comment.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comment.ts.html (406:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 64)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 66)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentDetails.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentDetails.ts.html (310:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 65)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentText.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentText.ts.html (178:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 67)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVote.ts.html (334:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 68)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVotes.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/commentVotes.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 69)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comments.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/comments.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 70)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentPosted.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentPosted.ts.html (97:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 71)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentVotesChanged.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/commentVotesChanged.ts.html (97:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 72)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/index.html (117:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 73)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postCreated.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postCreated.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 75)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/memberCreated.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/memberCreated.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 74)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postVotesChanged.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/events/postVotesChanged.ts.html (97:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 76)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/index.html (299:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 77)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/member.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/member.ts.html (220:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 78)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberDetails.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberDetails.ts.html (205:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 79)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/memberId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 80)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/post.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/post.ts.html (772:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 81)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postDetails.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postDetails.ts.html (367:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 82)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 83)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postLink.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postLink.ts.html (133:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 84)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postSlug.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postSlug.ts.html (178:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 85)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postText.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postText.ts.html (178:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 86)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postTitle.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postTitle.ts.html (160:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 87)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVotes.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVotes.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 89)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/domain/postVote.ts.html (334:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 88)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentDetailsMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentDetailsMap.ts.html (205:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 90)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentMap.ts.html (151:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 91)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentVoteMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/commentVoteMap.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 92)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/index.html (169:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 93)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberDetailsMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberDetailsMap.ts.html (124:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 94)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberIdMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberIdMap.ts.html (67:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 95)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/memberMap.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 96)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postDetailsMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postDetailsMap.ts.html (208:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 97)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postMap.ts.html (181:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 98)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postVoteMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/mappers/postVoteMap.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 99)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/bootstrap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/bootstrap.ts.html (796:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 100)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/commentRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/commentRepo.ts.html (514:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 101)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/index.html (130:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 102)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts.html (598:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 103)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeMemberRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizeMemberRepo.ts.html (589:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 104)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostRepo.ts.html (610:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 105)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostVotesRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/implementations/sequelizePostVotesRepo.ts.html (349:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 106)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 107)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/repos/index.ts.html (85:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 108)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/EditPostErrors.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/EditPostErrors.ts.html (124:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 109)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/forum/useCases/post/editPost/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 110)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/index.html (91:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 111)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userCreated.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userCreated.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 112)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userDeleted.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userDeleted.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 113)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userLoggedIn.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/events/userLoggedIn.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 114)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/index.html (117:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 115)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/user.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/user.ts.html (382:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 116)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userEmail.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userEmail.ts.html (139:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 117)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userId.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userId.ts.html (88:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 118)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userName.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userName.ts.html (154:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 119)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userPassword.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/domain/userPassword.ts.html (316:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 120)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 121)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/userMap.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/mappers/userMap.ts.html (223:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 122)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 123)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/sequelizeUserRepo.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/implementations/sequelizeUserRepo.ts.html (820:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 124)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 125)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/modules/users/repos/index.ts.html (55:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 126)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/RestClient.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/RestClient.ts.html (766:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 129)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/restClient/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 130)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Guard.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Guard.ts.html (379:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 131)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Result.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/Result.ts.html (313:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 132)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/core/index.html (78:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 133)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/AggregateRoot.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/AggregateRoot.ts.html (160:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 134)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Entity.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Entity.ts.html (130:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 135)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Identifier.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/Identifier.ts.html (118:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 136)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/UniqueEntityID.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/UniqueEntityID.ts.html (61:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 137)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/ValueObject.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/ValueObject.ts.html (127:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 138)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/WatchedList.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/WatchedList.ts.html (295:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 139)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/DomainEvents.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/DomainEvents.ts.html (277:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 140)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/events/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 141)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/domain/index.html (130:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 142)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/config.js.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/config.js.html (235:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 143)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/config/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 144)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/BaseUser.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/BaseUser.ts.html (199:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 145)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Comment.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Comment.ts.html (244:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 146)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/CommentVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/CommentVote.ts.html (208:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 147)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Member.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Member.ts.html (172:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 148)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Post.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/Post.ts.html (244:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 149)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/PostVote.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/PostVote.ts.html (196:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 150)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.html (143:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 151)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/infra/database/sequelize/models/index.ts.html (226:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 152)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/TextUtils.ts.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/TextUtils.ts.html (133:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 153)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/index.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/coverage/shared/utils/index.html (65:0) Unexpected closing tag "div". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 154)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/docs/sprintD/TypeDoc/classes/modules_users_services_redis_redisauthservice.redisauthservice.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/docs/sprintD/TypeDoc/classes/modules_users_services_redis_redisauthservice.redisauthservice.html (240:22) Unexpected closing tag "p". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags
    at ngHtmlParser (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 1134)
    at async DisableTypeChecksPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m01:46:36 (74818) WARN DisableTypeChecksPreprocessor[39m (disable "warnings.preprocessorErrors" to ignore this warning
[32m01:46:36 (74818) INFO ConcurrencyTokenProvider[39m Creating 1 checker process(es) and 1 test runner process(es).
[32m01:46:41 (74818) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m01:46:42 (74818) INFO DryRunExecutor[39m Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
[32m01:49:11 (74818) INFO DryRunExecutor[39m Initial test run succeeded. Ran 206 tests in 2 minutes 29 seconds (net 47910 ms, overhead 101564 ms).
[32m01:49:11 (74818) INFO IncrementalDiffer[39m Incremental report:
	Mutants:	147 files changed (+1961 -0)
	Tests:		0 files changed (+0 -0)
	Result:		0 of 3801 mutant result(s) are reused.
Mutation testing 0% (elapsed: <1m, remaining: n/a) 63/1955 tested (0 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: n/a) 166/1955 tested (0 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~39m) 207/1955 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~18m) 256/1955 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~21m) 380/1955 tested (1 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~26m) 460/1955 tested (1 survived, 0 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~22m) 520/1955 tested (7 survived, 0 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~24m) 573/1955 tested (7 survived, 0 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~27m) 640/1955 tested (7 survived, 0 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~30m) 689/1955 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~33m) 757/1955 tested (20 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~36m) 827/1955 tested (20 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~15m) 883/1955 tested (20 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~16m) 924/1955 tested (20 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~17m) 967/1955 tested (27 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~18m) 997/1955 tested (27 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~19m) 1021/1955 tested (27 survived, 0 timed out)
Mutation testing 12% (elapsed: ~3m, remaining: ~21m) 1049/1955 tested (27 survived, 0 timed out)
Mutation testing 12% (elapsed: ~3m, remaining: ~22m) 1079/1955 tested (34 survived, 0 timed out)
Mutation testing 12% (elapsed: ~3m, remaining: ~23m) 1140/1955 tested (34 survived, 0 timed out)
Mutation testing 12% (elapsed: ~3m, remaining: ~24m) 1178/1955 tested (34 survived, 0 timed out)
Mutation testing 12% (elapsed: ~3m, remaining: ~25m) 1223/1955 tested (34 survived, 0 timed out)
Mutation testing 12% (elapsed: ~3m, remaining: ~26m) 1265/1955 tested (35 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~28m) 1314/1955 tested (35 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~29m) 1342/1955 tested (35 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~30m) 1362/1955 tested (42 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~31m) 1372/1955 tested (42 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~32m) 1381/1955 tested (42 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~33m) 1389/1955 tested (42 survived, 0 timed out)
Mutation testing 12% (elapsed: ~5m, remaining: ~35m) 1401/1955 tested (42 survived, 0 timed out)
Mutation testing 12% (elapsed: ~5m, remaining: ~36m) 1433/1955 tested (49 survived, 0 timed out)
Mutation testing 12% (elapsed: ~5m, remaining: ~37m) 1461/1955 tested (49 survived, 0 timed out)
Mutation testing 12% (elapsed: ~5m, remaining: ~38m) 1491/1955 tested (55 survived, 0 timed out)
Mutation testing 12% (elapsed: ~5m, remaining: ~39m) 1511/1955 tested (55 survived, 0 timed out)
Mutation testing 12% (elapsed: ~5m, remaining: ~40m) 1529/1955 tested (55 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~42m) 1546/1955 tested (55 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~43m) 1548/1955 tested (56 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~44m) 1550/1955 tested (56 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 1562/1955 tested (56 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~46m) 1583/1955 tested (63 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~47m) 1593/1955 tested (63 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~49m) 1609/1955 tested (69 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~50m) 1617/1955 tested (69 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~51m) 1627/1955 tested (69 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~52m) 1643/1955 tested (75 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~53m) 1652/1955 tested (75 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~54m) 1661/1955 tested (75 survived, 0 timed out)
Mutation testing 12% (elapsed: ~8m, remaining: ~56m) 1669/1955 tested (75 survived, 0 timed out)
Mutation testing 12% (elapsed: ~8m, remaining: ~57m) 1685/1955 tested (82 survived, 0 timed out)
Mutation testing 12% (elapsed: ~8m, remaining: ~58m) 1694/1955 tested (82 survived, 0 timed out)
Mutation testing 12% (elapsed: ~8m, remaining: ~59m) 1703/1955 tested (82 survived, 0 timed out)
Mutation testing 12% (elapsed: ~8m, remaining: ~1h 0m) 1713/1955 tested (82 survived, 0 timed out)
Mutation testing 12% (elapsed: ~8m, remaining: ~1h 1m) 1714/1955 tested (82 survived, 0 timed out)
Mutation testing 12% (elapsed: ~9m, remaining: ~1h 3m) 1714/1955 tested (82 survived, 0 timed out)
Mutation testing 12% (elapsed: ~9m, remaining: ~1h 4m) 1721/1955 tested (89 survived, 0 timed out)
Mutation testing 12% (elapsed: ~9m, remaining: ~1h 5m) 1721/1955 tested (89 survived, 0 timed out)
Mutation testing 13% (elapsed: ~9m, remaining: ~1h 1m) 1722/1955 tested (89 survived, 0 timed out)
Mutation testing 13% (elapsed: ~9m, remaining: ~1h 2m) 1729/1955 tested (96 survived, 0 timed out)
Mutation testing 13% (elapsed: ~9m, remaining: ~1h 3m) 1729/1955 tested (96 survived, 0 timed out)
Mutation testing 13% (elapsed: ~10m, remaining: ~1h 2m) 1730/1955 tested (96 survived, 0 timed out)
Mutation testing 13% (elapsed: ~10m, remaining: ~1h 3m) 1731/1955 tested (97 survived, 0 timed out)
Mutation testing 13% (elapsed: ~10m, remaining: ~1h 4m) 1731/1955 tested (97 survived, 0 timed out)
Mutation testing 13% (elapsed: ~10m, remaining: ~1h 5m) 1738/1955 tested (104 survived, 0 timed out)
Mutation testing 13% (elapsed: ~10m, remaining: ~1h 7m) 1738/1955 tested (104 survived, 0 timed out)
Mutation testing 13% (elapsed: ~10m, remaining: ~1h 6m) 1748/1955 tested (113 survived, 0 timed out)
Mutation testing 13% (elapsed: ~11m, remaining: ~1h 7m) 1753/1955 tested (118 survived, 0 timed out)
Mutation testing 13% (elapsed: ~11m, remaining: ~1h 8m) 1753/1955 tested (118 survived, 0 timed out)
Mutation testing 13% (elapsed: ~11m, remaining: ~1h 9m) 1760/1955 tested (125 survived, 0 timed out)
Mutation testing 14% (elapsed: ~11m, remaining: ~1h 9m) 1764/1955 tested (128 survived, 0 timed out)
Mutation testing 14% (elapsed: ~11m, remaining: ~1h 9m) 1765/1955 tested (128 survived, 0 timed out)
Mutation testing 14% (elapsed: ~11m, remaining: ~1h 10m) 1765/1955 tested (128 survived, 0 timed out)
Mutation testing 14% (elapsed: ~12m, remaining: ~1h 9m) 1770/1955 tested (132 survived, 0 timed out)
Mutation testing 14% (elapsed: ~12m, remaining: ~1h 10m) 1770/1955 tested (132 survived, 0 timed out)
Mutation testing 14% (elapsed: ~12m, remaining: ~1h 11m) 1774/1955 tested (136 survived, 0 timed out)
Mutation testing 15% (elapsed: ~12m, remaining: ~1h 9m) 1775/1955 tested (136 survived, 0 timed out)
Mutation testing 15% (elapsed: ~12m, remaining: ~1h 10m) 1775/1955 tested (136 survived, 0 timed out)
Mutation testing 15% (elapsed: ~12m, remaining: ~1h 8m) 1779/1955 tested (139 survived, 0 timed out)
Mutation testing 15% (elapsed: ~13m, remaining: ~1h 9m) 1779/1955 tested (139 survived, 0 timed out)
Mutation testing 15% (elapsed: ~13m, remaining: ~1h 10m) 1779/1955 tested (139 survived, 0 timed out)
Mutation testing 15% (elapsed: ~13m, remaining: ~1h 11m) 1780/1955 tested (140 survived, 0 timed out)
Mutation testing 16% (elapsed: ~13m, remaining: ~1h 10m) 1781/1955 tested (140 survived, 0 timed out)
Mutation testing 16% (elapsed: ~13m, remaining: ~1h 11m) 1784/1955 tested (143 survived, 0 timed out)
Mutation testing 16% (elapsed: ~13m, remaining: ~1h 11m) 1784/1955 tested (143 survived, 0 timed out)
Mutation testing 16% (elapsed: ~14m, remaining: ~1h 12m) 1784/1955 tested (143 survived, 0 timed out)
Mutation testing 16% (elapsed: ~14m, remaining: ~1h 11m) 1785/1955 tested (143 survived, 0 timed out)
Mutation testing 16% (elapsed: ~14m, remaining: ~1h 12m) 1785/1955 tested (143 survived, 0 timed out)
Mutation testing 16% (elapsed: ~14m, remaining: ~1h 12m) 1789/1955 tested (147 survived, 0 timed out)
Mutation testing 16% (elapsed: ~14m, remaining: ~1h 13m) 1789/1955 tested (147 survived, 0 timed out)
Mutation testing 16% (elapsed: ~14m, remaining: ~1h 14m) 1789/1955 tested (147 survived, 0 timed out)
Mutation testing 17% (elapsed: ~15m, remaining: ~1h 13m) 1790/1955 tested (147 survived, 0 timed out)
Mutation testing 17% (elapsed: ~15m, remaining: ~1h 13m) 1790/1955 tested (147 survived, 0 timed out)
Mutation testing 17% (elapsed: ~15m, remaining: ~1h 14m) 1792/1955 tested (149 survived, 0 timed out)
Mutation testing 17% (elapsed: ~15m, remaining: ~1h 15m) 1793/1955 tested (150 survived, 0 timed out)
Mutation testing 17% (elapsed: ~15m, remaining: ~1h 16m) 1793/1955 tested (150 survived, 0 timed out)
Mutation testing 17% (elapsed: ~15m, remaining: ~1h 14m) 1794/1955 tested (150 survived, 0 timed out)
[33m02:05:09 (74818) WARN ChildProcessProxy[39m Child process [pid 74834] ran out of memory. Stdout and stderr are logged on debug level.
[32m02:05:09 (74818) INFO RetryRejectedDecorator[39m Test runner process [74834] ran out of memory. You probably have a memory leak in your tests. Don't worry, Stryker will restart the process, but you might want to investigate this later, because this decreases performance.
Mutation testing 17% (elapsed: ~16m, remaining: ~1h 15m) 1794/1955 tested (150 survived, 0 timed out)
Mutation testing 17% (elapsed: ~16m, remaining: ~1h 16m) 1794/1955 tested (150 survived, 0 timed out)
Mutation testing 17% (elapsed: ~16m, remaining: ~1h 17m) 1796/1955 tested (152 survived, 0 timed out)
Mutation testing 17% (elapsed: ~16m, remaining: ~1h 17m) 1797/1955 tested (152 survived, 0 timed out)
Mutation testing 17% (elapsed: ~16m, remaining: ~1h 16m) 1799/1955 tested (153 survived, 0 timed out)
Mutation testing 17% (elapsed: ~16m, remaining: ~1h 17m) 1799/1955 tested (153 survived, 0 timed out)
Mutation testing 17% (elapsed: ~17m, remaining: ~1h 17m) 1799/1955 tested (153 survived, 0 timed out)
Mutation testing 17% (elapsed: ~17m, remaining: ~1h 18m) 1800/1955 tested (154 survived, 0 timed out)
Mutation testing 17% (elapsed: ~17m, remaining: ~1h 19m) 1801/1955 tested (155 survived, 0 timed out)
Mutation testing 17% (elapsed: ~17m, remaining: ~1h 20m) 1801/1955 tested (155 survived, 0 timed out)
Mutation testing 17% (elapsed: ~17m, remaining: ~1h 20m) 1801/1955 tested (155 survived, 0 timed out)
Mutation testing 17% (elapsed: ~17m, remaining: ~1h 21m) 1802/1955 tested (155 survived, 0 timed out)
Mutation testing 17% (elapsed: ~18m, remaining: ~1h 22m) 1802/1955 tested (155 survived, 0 timed out)
Mutation testing 17% (elapsed: ~18m, remaining: ~1h 23m) 1803/1955 tested (156 survived, 0 timed out)
Mutation testing 17% (elapsed: ~18m, remaining: ~1h 23m) 1803/1955 tested (156 survived, 0 timed out)
Mutation testing 17% (elapsed: ~18m, remaining: ~1h 24m) 1804/1955 tested (157 survived, 0 timed out)
Mutation testing 17% (elapsed: ~18m, remaining: ~1h 25m) 1804/1955 tested (157 survived, 0 timed out)
Mutation testing 17% (elapsed: ~18m, remaining: ~1h 26m) 1805/1955 tested (157 survived, 1 timed out)
Mutation testing 17% (elapsed: ~19m, remaining: ~1h 26m) 1805/1955 tested (157 survived, 1 timed out)
Mutation testing 17% (elapsed: ~19m, remaining: ~1h 27m) 1806/1955 tested (158 survived, 1 timed out)
Mutation testing 20% (elapsed: ~19m, remaining: ~1h 17m) 1807/1955 tested (158 survived, 2 timed out)
Mutation testing 20% (elapsed: ~19m, remaining: ~1h 17m) 1807/1955 tested (158 survived, 2 timed out)
Mutation testing 20% (elapsed: ~19m, remaining: ~1h 18m) 1809/1955 tested (158 survived, 2 timed out)
Mutation testing 20% (elapsed: ~19m, remaining: ~1h 19m) 1810/1955 tested (159 survived, 2 timed out)
Mutation testing 20% (elapsed: ~20m, remaining: ~1h 19m) 1811/1955 tested (159 survived, 3 timed out)
Mutation testing 20% (elapsed: ~20m, remaining: ~1h 20m) 1813/1955 tested (160 survived, 3 timed out)
Mutation testing 20% (elapsed: ~20m, remaining: ~1h 21m) 1814/1955 tested (160 survived, 3 timed out)
Mutation testing 20% (elapsed: ~20m, remaining: ~1h 21m) 1815/1955 tested (160 survived, 3 timed out)
Mutation testing 20% (elapsed: ~20m, remaining: ~1h 22m) 1816/1955 tested (160 survived, 3 timed out)
Mutation testing 20% (elapsed: ~20m, remaining: ~1h 23m) 1816/1955 tested (160 survived, 3 timed out)
Mutation testing 20% (elapsed: ~21m, remaining: ~1h 19m) 1818/1955 tested (160 survived, 3 timed out)
Mutation testing 20% (elapsed: ~21m, remaining: ~1h 19m) 1819/1955 tested (160 survived, 3 timed out)
Mutation testing 20% (elapsed: ~21m, remaining: ~1h 20m) 1820/1955 tested (160 survived, 3 timed out)
Mutation testing 21% (elapsed: ~21m, remaining: ~1h 19m) 1821/1955 tested (160 survived, 3 timed out)
Mutation testing 21% (elapsed: ~21m, remaining: ~1h 19m) 1821/1955 tested (160 survived, 3 timed out)
Mutation testing 21% (elapsed: ~21m, remaining: ~1h 20m) 1823/1955 tested (160 survived, 3 timed out)
Mutation testing 21% (elapsed: ~22m, remaining: ~1h 20m) 1824/1955 tested (160 survived, 4 timed out)
Mutation testing 21% (elapsed: ~22m, remaining: ~1h 21m) 1825/1955 tested (160 survived, 4 timed out)
Mutation testing 21% (elapsed: ~22m, remaining: ~1h 22m) 1826/1955 tested (160 survived, 4 timed out)
Mutation testing 21% (elapsed: ~22m, remaining: ~1h 22m) 1828/1955 tested (160 survived, 4 timed out)
Mutation testing 21% (elapsed: ~22m, remaining: ~1h 23m) 1828/1955 tested (160 survived, 4 timed out)
Mutation testing 21% (elapsed: ~22m, remaining: ~1h 24m) 1830/1955 tested (161 survived, 4 timed out)
Mutation testing 21% (elapsed: ~23m, remaining: ~1h 24m) 1830/1955 tested (161 survived, 4 timed out)
Mutation testing 21% (elapsed: ~23m, remaining: ~1h 25m) 1830/1955 tested (161 survived, 4 timed out)
Mutation testing 21% (elapsed: ~23m, remaining: ~1h 25m) 1832/1955 tested (162 survived, 4 timed out)
Mutation testing 21% (elapsed: ~23m, remaining: ~1h 26m) 1832/1955 tested (162 survived, 4 timed out)
Mutation testing 21% (elapsed: ~23m, remaining: ~1h 27m) 1832/1955 tested (162 survived, 4 timed out)
Mutation testing 21% (elapsed: ~23m, remaining: ~1h 27m) 1834/1955 tested (164 survived, 4 timed out)
Mutation testing 21% (elapsed: ~24m, remaining: ~1h 28m) 1835/1955 tested (164 survived, 4 timed out)
Mutation testing 21% (elapsed: ~24m, remaining: ~1h 28m) 1835/1955 tested (164 survived, 4 timed out)
Mutation testing 21% (elapsed: ~24m, remaining: ~1h 29m) 1835/1955 tested (164 survived, 4 timed out)
Mutation testing 21% (elapsed: ~24m, remaining: ~1h 30m) 1836/1955 tested (165 survived, 4 timed out)
Mutation testing 21% (elapsed: ~24m, remaining: ~1h 29m) 1838/1955 tested (165 survived, 4 timed out)
Mutation testing 21% (elapsed: ~24m, remaining: ~1h 30m) 1838/1955 tested (165 survived, 4 timed out)
Mutation testing 21% (elapsed: ~25m, remaining: ~1h 30m) 1838/1955 tested (165 survived, 4 timed out)
Mutation testing 21% (elapsed: ~25m, remaining: ~1h 31m) 1840/1955 tested (167 survived, 4 timed out)
Mutation testing 21% (elapsed: ~25m, remaining: ~1h 32m) 1840/1955 tested (167 survived, 4 timed out)
Mutation testing 21% (elapsed: ~25m, remaining: ~1h 32m) 1841/1955 tested (167 survived, 4 timed out)
Mutation testing 21% (elapsed: ~25m, remaining: ~1h 33m) 1842/1955 tested (167 survived, 4 timed out)
Mutation testing 21% (elapsed: ~25m, remaining: ~1h 33m) 1843/1955 tested (168 survived, 4 timed out)
Mutation testing 21% (elapsed: ~26m, remaining: ~1h 34m) 1843/1955 tested (168 survived, 4 timed out)
Mutation testing 21% (elapsed: ~26m, remaining: ~1h 35m) 1845/1955 tested (169 survived, 4 timed out)
Mutation testing 21% (elapsed: ~26m, remaining: ~1h 35m) 1845/1955 tested (169 survived, 4 timed out)
Mutation testing 21% (elapsed: ~26m, remaining: ~1h 36m) 1845/1955 tested (169 survived, 4 timed out)
Mutation testing 21% (elapsed: ~26m, remaining: ~1h 37m) 1846/1955 tested (170 survived, 4 timed out)
Mutation testing 21% (elapsed: ~26m, remaining: ~1h 37m) 1847/1955 tested (171 survived, 4 timed out)
Mutation testing 21% (elapsed: ~27m, remaining: ~1h 38m) 1847/1955 tested (171 survived, 4 timed out)
Mutation testing 21% (elapsed: ~27m, remaining: ~1h 38m) 1848/1955 tested (172 survived, 4 timed out)
Mutation testing 21% (elapsed: ~27m, remaining: ~1h 39m) 1848/1955 tested (172 survived, 4 timed out)
Mutation testing 21% (elapsed: ~27m, remaining: ~1h 40m) 1849/1955 tested (173 survived, 4 timed out)
Mutation testing 21% (elapsed: ~27m, remaining: ~1h 40m) 1849/1955 tested (173 survived, 4 timed out)
Mutation testing 21% (elapsed: ~27m, remaining: ~1h 41m) 1850/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~28m, remaining: ~1h 41m) 1850/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~28m, remaining: ~1h 42m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~28m, remaining: ~1h 43m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~28m, remaining: ~1h 43m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~28m, remaining: ~1h 44m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~28m, remaining: ~1h 44m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~29m, remaining: ~1h 45m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~29m, remaining: ~1h 46m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~29m, remaining: ~1h 46m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 21% (elapsed: ~29m, remaining: ~1h 47m) 1851/1955 tested (174 survived, 4 timed out)
Mutation testing 24% (elapsed: ~29m, remaining: ~1h 32m) 1852/1955 tested (174 survived, 4 timed out)
Mutation testing 24% (elapsed: ~29m, remaining: ~1h 32m) 1852/1955 tested (174 survived, 4 timed out)
Mutation testing 24% (elapsed: ~30m, remaining: ~1h 33m) 1853/1955 tested (174 survived, 4 timed out)
Mutation testing 27% (elapsed: ~30m, remaining: ~1h 21m) 1854/1955 tested (174 survived, 4 timed out)
Mutation testing 27% (elapsed: ~30m, remaining: ~1h 21m) 1854/1955 tested (174 survived, 4 timed out)
Mutation testing 27% (elapsed: ~30m, remaining: ~1h 22m) 1854/1955 tested (174 survived, 4 timed out)
Mutation testing 27% (elapsed: ~30m, remaining: ~1h 22m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~30m, remaining: ~1h 22m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~31m, remaining: ~1h 23m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~31m, remaining: ~1h 23m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~31m, remaining: ~1h 24m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~31m, remaining: ~1h 24m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~31m, remaining: ~1h 25m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~31m, remaining: ~1h 25m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~32m, remaining: ~1h 26m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 27% (elapsed: ~32m, remaining: ~1h 26m) 1855/1955 tested (175 survived, 4 timed out)
Mutation testing 29% (elapsed: ~32m, remaining: ~1h 15m) 1856/1955 tested (175 survived, 4 timed out)
Mutation testing 29% (elapsed: ~32m, remaining: ~1h 16m) 1856/1955 tested (175 survived, 4 timed out)
Mutation testing 29% (elapsed: ~32m, remaining: ~1h 16m) 1856/1955 tested (175 survived, 4 timed out)
Mutation testing 29% (elapsed: ~32m, remaining: ~1h 17m) 1856/1955 tested (175 survived, 4 timed out)
Mutation testing 32% (elapsed: ~33m, remaining: ~1h 8m) 1857/1955 tested (175 survived, 4 timed out)
Mutation testing 32% (elapsed: ~33m, remaining: ~1h 8m) 1857/1955 tested (175 survived, 4 timed out)
Mutation testing 32% (elapsed: ~33m, remaining: ~1h 8m) 1858/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~33m, remaining: ~1h 9m) 1858/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~33m, remaining: ~1h 9m) 1858/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~33m, remaining: ~1h 9m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~34m, remaining: ~1h 10m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~34m, remaining: ~1h 10m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~34m, remaining: ~1h 10m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~34m, remaining: ~1h 11m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~34m, remaining: ~1h 11m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~34m, remaining: ~1h 11m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~35m, remaining: ~1h 12m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 32% (elapsed: ~35m, remaining: ~1h 12m) 1859/1955 tested (176 survived, 4 timed out)
Mutation testing 35% (elapsed: ~35m, remaining: ~1h 4m) 1860/1955 tested (176 survived, 4 timed out)
Mutation testing 35% (elapsed: ~35m, remaining: ~1h 4m) 1860/1955 tested (176 survived, 4 timed out)
Mutation testing 35% (elapsed: ~35m, remaining: ~1h 5m) 1860/1955 tested (176 survived, 4 timed out)
Mutation testing 35% (elapsed: ~35m, remaining: ~1h 5m) 1861/1955 tested (177 survived, 4 timed out)
Mutation testing 35% (elapsed: ~36m, remaining: ~1h 5m) 1861/1955 tested (177 survived, 4 timed out)
Mutation testing 35% (elapsed: ~36m, remaining: ~1h 5m) 1861/1955 tested (177 survived, 4 timed out)
Mutation testing 35% (elapsed: ~36m, remaining: ~1h 6m) 1861/1955 tested (177 survived, 4 timed out)
Mutation testing 35% (elapsed: ~36m, remaining: ~1h 6m) 1861/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~36m, remaining: ~59m) 1862/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~36m, remaining: ~59m) 1862/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~37m, remaining: ~59m) 1862/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~37m, remaining: ~1h 0m) 1863/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~37m, remaining: ~1h 0m) 1863/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~37m, remaining: ~1h 0m) 1863/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~37m, remaining: ~1h 0m) 1863/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~37m, remaining: ~1h 1m) 1863/1955 tested (177 survived, 4 timed out)
Mutation testing 38% (elapsed: ~38m, remaining: ~1h 1m) 1863/1955 tested (177 survived, 4 timed out)
Mutation testing 40% (elapsed: ~38m, remaining: ~54m) 1865/1955 tested (178 survived, 4 timed out)
Mutation testing 40% (elapsed: ~38m, remaining: ~55m) 1865/1955 tested (178 survived, 4 timed out)
Mutation testing 40% (elapsed: ~38m, remaining: ~55m) 1865/1955 tested (178 survived, 4 timed out)
Mutation testing 40% (elapsed: ~38m, remaining: ~55m) 1865/1955 tested (178 survived, 4 timed out)
Mutation testing 40% (elapsed: ~38m, remaining: ~55m) 1866/1955 tested (179 survived, 4 timed out)
Mutation testing 40% (elapsed: ~39m, remaining: ~56m) 1866/1955 tested (179 survived, 4 timed out)
Mutation testing 40% (elapsed: ~39m, remaining: ~56m) 1866/1955 tested (179 survived, 4 timed out)
Mutation testing 40% (elapsed: ~39m, remaining: ~56m) 1867/1955 tested (179 survived, 4 timed out)
Mutation testing 40% (elapsed: ~39m, remaining: ~56m) 1867/1955 tested (179 survived, 4 timed out)
Mutation testing 40% (elapsed: ~39m, remaining: ~57m) 1868/1955 tested (180 survived, 4 timed out)
Mutation testing 40% (elapsed: ~39m, remaining: ~57m) 1868/1955 tested (180 survived, 4 timed out)
Mutation testing 40% (elapsed: ~40m, remaining: ~57m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~40m, remaining: ~57m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~40m, remaining: ~58m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~40m, remaining: ~58m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~40m, remaining: ~58m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~40m, remaining: ~58m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~41m, remaining: ~59m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~41m, remaining: ~59m) 1869/1955 tested (181 survived, 4 timed out)
Mutation testing 40% (elapsed: ~41m, remaining: ~59m) 1870/1955 tested (182 survived, 4 timed out)
[33m02:30:38 (74818) WARN ChildProcessProxy[39m Child process [pid 79631] ran out of memory. Stdout and stderr are logged on debug level.
[32m02:30:38 (74818) INFO RetryRejectedDecorator[39m Test runner process [79631] ran out of memory. You probably have a memory leak in your tests. Don't worry, Stryker will restart the process, but you might want to investigate this later, because this decreases performance.
Mutation testing 40% (elapsed: ~41m, remaining: ~59m) 1870/1955 tested (182 survived, 4 timed out)
Mutation testing 40% (elapsed: ~41m, remaining: ~1h 0m) 1870/1955 tested (182 survived, 4 timed out)
Mutation testing 40% (elapsed: ~41m, remaining: ~1h 0m) 1870/1955 tested (182 survived, 4 timed out)
Mutation testing 40% (elapsed: ~42m, remaining: ~1h 0m) 1871/1955 tested (183 survived, 4 timed out)
Mutation testing 43% (elapsed: ~42m, remaining: ~54m) 1872/1955 tested (183 survived, 4 timed out)
Mutation testing 43% (elapsed: ~42m, remaining: ~54m) 1872/1955 tested (183 survived, 4 timed out)
Mutation testing 46% (elapsed: ~42m, remaining: ~48m) 1873/1955 tested (183 survived, 4 timed out)
Mutation testing 46% (elapsed: ~42m, remaining: ~49m) 1873/1955 tested (183 survived, 4 timed out)
Mutation testing 46% (elapsed: ~42m, remaining: ~49m) 1874/1955 tested (184 survived, 4 timed out)
Mutation testing 46% (elapsed: ~43m, remaining: ~49m) 1874/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~43m, remaining: ~44m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~43m, remaining: ~44m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~43m, remaining: ~44m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~43m, remaining: ~44m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~43m, remaining: ~45m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~44m, remaining: ~45m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~44m, remaining: ~45m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 49% (elapsed: ~44m, remaining: ~45m) 1875/1955 tested (184 survived, 4 timed out)
Mutation testing 52% (elapsed: ~44m, remaining: ~40m) 1876/1955 tested (184 survived, 4 timed out)
Mutation testing 52% (elapsed: ~44m, remaining: ~41m) 1876/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~44m, remaining: ~37m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~45m, remaining: ~37m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~45m, remaining: ~37m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~45m, remaining: ~37m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~45m, remaining: ~38m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~45m, remaining: ~38m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~45m, remaining: ~38m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~46m, remaining: ~38m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~46m, remaining: ~38m) 1877/1955 tested (184 survived, 4 timed out)
Mutation testing 54% (elapsed: ~46m, remaining: ~38m) 1877/1955 tested (184 survived, 4 timed out)
[33m02:35:41 (74818) WARN ChildProcessProxy[39m Child process [pid 80092] ran out of memory. Stdout and stderr are logged on debug level.
[32m02:35:41 (74818) INFO RetryRejectedDecorator[39m Test runner process [80092] ran out of memory. You probably have a memory leak in your tests. Don't worry, Stryker will restart the process, but you might want to investigate this later, because this decreases performance.
Mutation testing 57% (elapsed: ~46m, remaining: ~34m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~46m, remaining: ~34m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~46m, remaining: ~34m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~47m, remaining: ~35m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~47m, remaining: ~35m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~47m, remaining: ~35m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~47m, remaining: ~35m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~47m, remaining: ~35m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 57% (elapsed: ~47m, remaining: ~35m) 1878/1955 tested (184 survived, 4 timed out)
Mutation testing 60% (elapsed: ~48m, remaining: ~31m) 1879/1955 tested (184 survived, 4 timed out)
Mutation testing 60% (elapsed: ~48m, remaining: ~32m) 1879/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~48m, remaining: ~28m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~48m, remaining: ~28m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~48m, remaining: ~28m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~48m, remaining: ~28m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~49m, remaining: ~29m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~49m, remaining: ~29m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~49m, remaining: ~29m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~49m, remaining: ~29m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 62% (elapsed: ~49m, remaining: ~29m) 1880/1955 tested (184 survived, 4 timed out)
Mutation testing 65% (elapsed: ~49m, remaining: ~26m) 1881/1955 tested (184 survived, 4 timed out)
Mutation testing 65% (elapsed: ~50m, remaining: ~26m) 1881/1955 tested (184 survived, 4 timed out)
Mutation testing 65% (elapsed: ~50m, remaining: ~26m) 1881/1955 tested (184 survived, 4 timed out)
Mutation testing 68% (elapsed: ~50m, remaining: ~23m) 1882/1955 tested (184 survived, 4 timed out)
Mutation testing 68% (elapsed: ~50m, remaining: ~23m) 1882/1955 tested (184 survived, 4 timed out)
Mutation testing 68% (elapsed: ~50m, remaining: ~23m) 1882/1955 tested (184 survived, 4 timed out)
Mutation testing 68% (elapsed: ~50m, remaining: ~23m) 1882/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~51m, remaining: ~20m) 1884/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~51m, remaining: ~20m) 1884/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~51m, remaining: ~20m) 1884/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~51m, remaining: ~20m) 1884/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~51m, remaining: ~20m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~51m, remaining: ~20m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~52m, remaining: ~20m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~52m, remaining: ~20m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~52m, remaining: ~21m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~52m, remaining: ~21m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~52m, remaining: ~21m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~52m, remaining: ~21m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~53m, remaining: ~21m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 71% (elapsed: ~53m, remaining: ~21m) 1886/1955 tested (184 survived, 4 timed out)
Mutation testing 74% (elapsed: ~53m, remaining: ~18m) 1887/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~53m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~53m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~53m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~54m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~54m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~54m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~54m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~54m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~54m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~55m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 76% (elapsed: ~55m, remaining: ~16m) 1888/1955 tested (184 survived, 4 timed out)
Mutation testing 79% (elapsed: ~55m, remaining: ~14m) 1889/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~55m, remaining: ~11m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~55m, remaining: ~11m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~55m, remaining: ~11m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~56m, remaining: ~11m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~56m, remaining: ~11m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~56m, remaining: ~12m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~56m, remaining: ~12m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~56m, remaining: ~12m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~56m, remaining: ~12m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 82% (elapsed: ~57m, remaining: ~12m) 1890/1955 tested (184 survived, 4 timed out)
Mutation testing 85% (elapsed: ~57m, remaining: ~9m) 1891/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~57m, remaining: ~7m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~57m, remaining: ~7m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~57m, remaining: ~7m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~57m, remaining: ~7m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~58m, remaining: ~7m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~58m, remaining: ~7m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~58m, remaining: ~7m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~58m, remaining: ~8m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~58m, remaining: ~8m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~58m, remaining: ~8m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~59m, remaining: ~8m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 87% (elapsed: ~59m, remaining: ~8m) 1892/1955 tested (184 survived, 4 timed out)
Mutation testing 90% (elapsed: ~59m, remaining: ~6m) 1893/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~59m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~59m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~59m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~1h 0m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~1h 0m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~1h 0m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~1h 0m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~1h 0m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 93% (elapsed: ~1h 0m, remaining: ~4m) 1894/1955 tested (184 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 1m, remaining: ~1m) 1896/1955 tested (184 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 1m, remaining: ~1m) 1897/1955 tested (184 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 1m, remaining: ~1m) 1899/1955 tested (184 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 1m, remaining: ~1m) 1901/1955 tested (185 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 1m, remaining: ~1m) 1903/1955 tested (186 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 1m, remaining: ~1m) 1904/1955 tested (186 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 2m, remaining: ~1m) 1906/1955 tested (186 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 2m, remaining: ~1m) 1908/1955 tested (186 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 2m, remaining: ~1m) 1910/1955 tested (186 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 2m, remaining: ~1m) 1912/1955 tested (186 survived, 4 timed out)
Mutation testing 97% (elapsed: ~1h 2m, remaining: ~1m) 1913/1955 tested (186 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 2m, remaining: n/a) 1916/1955 tested (186 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 3m, remaining: n/a) 1916/1955 tested (186 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 3m, remaining: n/a) 1916/1955 tested (186 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 3m, remaining: n/a) 1916/1955 tested (186 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 3m, remaining: n/a) 1916/1955 tested (186 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 3m, remaining: n/a) 1918/1955 tested (188 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 3m, remaining: n/a) 1918/1955 tested (188 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: n/a) 1918/1955 tested (188 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: n/a) 1918/1955 tested (188 survived, 4 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: n/a) 1920/1955 tested (189 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: n/a) 1920/1955 tested (189 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: n/a) 1920/1955 tested (189 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: n/a) 1920/1955 tested (189 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 5m, remaining: n/a) 1921/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 5m, remaining: n/a) 1922/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 5m, remaining: n/a) 1922/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 5m, remaining: n/a) 1922/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 5m, remaining: n/a) 1922/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 5m, remaining: n/a) 1923/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 6m, remaining: n/a) 1923/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 6m, remaining: n/a) 1924/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 6m, remaining: n/a) 1924/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 6m, remaining: n/a) 1924/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 6m, remaining: n/a) 1924/1955 tested (190 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 6m, remaining: n/a) 1925/1955 tested (191 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 7m, remaining: n/a) 1925/1955 tested (191 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 7m, remaining: n/a) 1926/1955 tested (191 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 7m, remaining: n/a) 1926/1955 tested (191 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 7m, remaining: n/a) 1926/1955 tested (191 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 7m, remaining: n/a) 1926/1955 tested (191 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 7m, remaining: n/a) 1926/1955 tested (191 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 8m, remaining: n/a) 1927/1955 tested (192 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 8m, remaining: n/a) 1927/1955 tested (192 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 8m, remaining: n/a) 1927/1955 tested (192 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 8m, remaining: n/a) 1927/1955 tested (192 survived, 5 timed out)
[33m02:57:44 (74818) WARN ChildProcessProxy[39m Child process [pid 83152] exited unexpectedly with exit code null (SIGABRT). Last part of stdout and stderr was:
	16: 0x10f2fd436 v8::internal::(anonymous namespace)::GetSharedFunctionInfoForScriptImpl(v8::internal::Isolate*, v8::internal::Handle<v8::internal::String>, v8::internal::ScriptDetails const&, v8::Extension*, v8::internal::AlignedCachedData*, v8::internal::BackgroundDeserializeTask*, bool (*)(int, void*), void*, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason, v8::internal::NativesFlag) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	17: 0x10f2fd363 v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Isolate*, v8::internal::Handle<v8::internal::String>, v8::internal::ScriptDetails const&, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason, v8::internal::NativesFlag) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	18: 0x10f246b53 v8::ScriptCompiler::CompileUnboundInternal(v8::Isolate*, v8::ScriptCompiler::Source*, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	19: 0x10f07b29a node::contextify::ContextifyScript::New(v8::FunctionCallbackInfo<v8::Value> const&) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	20: 0x10f2a5a83 v8::internal::MaybeHandle<v8::internal::Object> v8::internal::(anonymous namespace)::HandleApiCallHelper<true>(v8::internal::Isolate*, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::FunctionTemplateInfo>, v8::internal::Handle<v8::internal::Object>, unsigned long*, int) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	21: 0x10f2a554a v8::internal::Builtin_HandleApiCall(int, unsigned long*, v8::internal::Isolate*) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	22: 0x10fc52176 Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	23: 0x10fbc14af Builtins_JSBuiltinsConstructStub [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	
	[90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for posts is http://localhost:5001/api/v1/posts 
	[90m2023-12-08 02:57:08.064 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:57:08.067 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:10.806 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:57:10.811 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for posts is http://localhost:5001/api/v1/posts 
	[90m2023-12-08 02:57:10.814 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:14.261 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:19.544 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:57:28.101 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:42.614 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	 ChildProcessCrashedError: Child process [pid 83152] exited unexpectedly with exit code null (SIGABRT). Last part of stdout and stderr was:
	16: 0x10f2fd436 v8::internal::(anonymous namespace)::GetSharedFunctionInfoForScriptImpl(v8::internal::Isolate*, v8::internal::Handle<v8::internal::String>, v8::internal::ScriptDetails const&, v8::Extension*, v8::internal::AlignedCachedData*, v8::internal::BackgroundDeserializeTask*, bool (*)(int, void*), void*, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason, v8::internal::NativesFlag) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	17: 0x10f2fd363 v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Isolate*, v8::internal::Handle<v8::internal::String>, v8::internal::ScriptDetails const&, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason, v8::internal::NativesFlag) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	18: 0x10f246b53 v8::ScriptCompiler::CompileUnboundInternal(v8::Isolate*, v8::ScriptCompiler::Source*, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	19: 0x10f07b29a node::contextify::ContextifyScript::New(v8::FunctionCallbackInfo<v8::Value> const&) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	20: 0x10f2a5a83 v8::internal::MaybeHandle<v8::internal::Object> v8::internal::(anonymous namespace)::HandleApiCallHelper<true>(v8::internal::Isolate*, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::FunctionTemplateInfo>, v8::internal::Handle<v8::internal::Object>, unsigned long*, int) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	21: 0x10f2a554a v8::internal::Builtin_HandleApiCall(int, unsigned long*, v8::internal::Isolate*) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	22: 0x10fc52176 Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	23: 0x10fbc14af Builtins_JSBuiltinsConstructStub [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	
	[90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for posts is http://localhost:5001/api/v1/posts 
	[90m2023-12-08 02:57:08.064 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:57:08.067 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:10.806 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:57:10.811 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for posts is http://localhost:5001/api/v1/posts 
	[90m2023-12-08 02:57:10.814 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:14.261 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:19.544 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:57:28.101 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:57:42.614 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	
    at ChildProcess.handleUnexpectedExit (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/child-proxy/child-process-proxy.js:179:31)
    at ChildProcess.emit (node:events:514:28)
    at maybeClose (node:internal/child_process:1105:16)
    at ChildProcess._handle.onexit (node:internal/child_process:305:5) {
  innerError: undefined,
  pid: 83152,
  exitCode: null,
  signal: 'SIGABRT'
}
Mutation testing 99% (elapsed: ~1h 8m, remaining: n/a) 1928/1955 tested (192 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 8m, remaining: n/a) 1928/1955 tested (192 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 9m, remaining: n/a) 1928/1955 tested (192 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 9m, remaining: n/a) 1929/1955 tested (193 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 9m, remaining: n/a) 1929/1955 tested (193 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 9m, remaining: n/a) 1930/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 9m, remaining: n/a) 1930/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 9m, remaining: n/a) 1930/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 10m, remaining: n/a) 1931/1955 tested (194 survived, 5 timed out)
[33m02:59:13 (74818) WARN ChildProcessProxy[39m Child process [pid 82623] exited unexpectedly with exit code null (SIGABRT). Last part of stdout and stderr was:
	17: 0x100b28fdd v8::internal::JSObject::DefineAccessor(v8::internal::LookupIterator*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyAttributes) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	18: 0x100b28d7a v8::internal::JSReceiver::ValidateAndApplyPropertyDescriptor(v8::internal::Isolate*, v8::internal::LookupIterator*, bool, v8::internal::PropertyDescriptor*, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>, v8::internal::Handle<v8::internal::Name>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	19: 0x100b27da8 v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::LookupIterator*, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	20: 0x100b27c71 v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle<v8::internal::JSObject>, v8::internal::PropertyKey const&, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	21: 0x100b27788 v8::internal::JSReceiver::DefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle<v8::internal::JSReceiver>, v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	22: 0x100b27586 v8::internal::JSReceiver::DefineProperty(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	23: 0x100737063 v8::internal::Builtin_ObjectDefineProperty(int, unsigned long*, v8::internal::Isolate*) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	24: 0x1010bf176 Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	
	 The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:58:20.415 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:20.776 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for posts is http://localhost:5001/api/v1/posts 
	[90m2023-12-08 02:58:20.780 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:58:20.787 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:25.137 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:28.244 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:35.434 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:58:49.805 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:59:00.601 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	 ChildProcessCrashedError: Child process [pid 82623] exited unexpectedly with exit code null (SIGABRT). Last part of stdout and stderr was:
	17: 0x100b28fdd v8::internal::JSObject::DefineAccessor(v8::internal::LookupIterator*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyAttributes) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	18: 0x100b28d7a v8::internal::JSReceiver::ValidateAndApplyPropertyDescriptor(v8::internal::Isolate*, v8::internal::LookupIterator*, bool, v8::internal::PropertyDescriptor*, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>, v8::internal::Handle<v8::internal::Name>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	19: 0x100b27da8 v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::LookupIterator*, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	20: 0x100b27c71 v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle<v8::internal::JSObject>, v8::internal::PropertyKey const&, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	21: 0x100b27788 v8::internal::JSReceiver::DefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle<v8::internal::JSReceiver>, v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyDescriptor*, v8::Maybe<v8::internal::ShouldThrow>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	22: 0x100b27586 v8::internal::JSReceiver::DefineProperty(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	23: 0x100737063 v8::internal::Builtin_ObjectDefineProperty(int, unsigned long*, v8::internal::Isolate*) [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	24: 0x1010bf176 Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit [/Users/SwitchQA/.nvm/versions/node/v20.9.0/bin/node]
	
	 The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:58:20.415 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:20.776 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for posts is http://localhost:5001/api/v1/posts 
	[90m2023-12-08 02:58:20.780 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:58:20.787 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:25.137 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:28.244 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for comments is http://localhost:5001/api/v1/comments 
	[90m2023-12-08 02:58:35.434 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:58:49.805 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	[90m2023-12-08 02:59:00.601 [39m[1m[94mINFO[39m[22m  [90m[src/api_test/endpoints/abstracts/AEndpoint.ts:74  undefined.constructor][39m The Service URL for users is http://localhost:5001/api/v1/users 
	
    at ChildProcess.handleUnexpectedExit (file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/node_modules/@stryker-mutator/core/dist/src/child-proxy/child-process-proxy.js:179:31)
    at ChildProcess.emit (node:events:514:28)
    at maybeClose (node:internal/child_process:1105:16)
    at ChildProcess._handle.onexit (node:internal/child_process:305:5) {
  innerError: undefined,
  pid: 82623,
  exitCode: null,
  signal: 'SIGABRT'
}
Mutation testing 99% (elapsed: ~1h 10m, remaining: n/a) 1931/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 10m, remaining: n/a) 1931/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 10m, remaining: n/a) 1933/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 10m, remaining: n/a) 1933/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 10m, remaining: n/a) 1933/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 11m, remaining: n/a) 1935/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 11m, remaining: n/a) 1935/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 11m, remaining: n/a) 1935/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 11m, remaining: n/a) 1937/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 11m, remaining: n/a) 1937/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 11m, remaining: n/a) 1938/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 12m, remaining: n/a) 1939/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 12m, remaining: n/a) 1939/1955 tested (194 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 12m, remaining: n/a) 1940/1955 tested (195 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 12m, remaining: n/a) 1941/1955 tested (195 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 12m, remaining: n/a) 1941/1955 tested (195 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 12m, remaining: n/a) 1942/1955 tested (195 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 13m, remaining: n/a) 1943/1955 tested (196 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 13m, remaining: n/a) 1943/1955 tested (196 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 13m, remaining: n/a) 1944/1955 tested (196 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 13m, remaining: n/a) 1945/1955 tested (196 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 13m, remaining: n/a) 1945/1955 tested (196 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 13m, remaining: n/a) 1946/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 14m, remaining: n/a) 1946/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 14m, remaining: n/a) 1947/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 14m, remaining: n/a) 1947/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 14m, remaining: n/a) 1947/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 14m, remaining: n/a) 1949/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 14m, remaining: n/a) 1949/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 15m, remaining: n/a) 1949/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 15m, remaining: n/a) 1950/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 15m, remaining: n/a) 1951/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 15m, remaining: n/a) 1951/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 15m, remaining: n/a) 1952/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 15m, remaining: n/a) 1952/1955 tested (197 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 16m, remaining: n/a) 1953/1955 tested (198 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 16m, remaining: n/a) 1953/1955 tested (198 survived, 5 timed out)
Mutation testing 99% (elapsed: ~1h 16m, remaining: n/a) 1954/1955 tested (198 survived, 5 timed out)

All tests
  api_test
    Bootstrap
      Jmeter/boostrapjmeter.spec.ts
        ✘ Inject data into db should inject data into db to prepare Jmeter test scenario [line 13] (covered 0)
      bootstrap.spec.ts
        ~ Inject data into db should inject data into db [line 7] (covered 1)
    US001
      register.api.test.ts
        ✘ Register an account fields validation Account creation attempt with grupodoistests1@gmail.com, g2 and dummyPassword statusCode should be 200  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests1@gmail.com, g2 and dummyPassword statusText should be OK [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests2@gmail.com, UsernameMAAChar and dummyPassword statusCode should be 200  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests2@gmail.com, UsernameMAAChar and dummyPassword statusText should be OK [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUser and MinPass statusCode should be 200  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUser and MinPass statusText should be OK [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with gruposdoistests3@gmail.com, dummyUser and MinPass statusCode should be 409  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with gruposdoistests3@gmail.com, dummyUser and MinPass statusText should be Conflict [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUsers and MinPass statusCode should be 409  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests3@gmail.com, dummyUsers and MinPass statusText should be Conflict [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4gmail.com, dummyUser1 and dummyPass1 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4gmail.com, dummyUser1 and dummyPass1 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@gmail, dummyUser2 and dummyPass2 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@gmail, dummyUser2 and dummyPass2 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@.com, dummyUser3 and dummyPass3 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests4@.com, dummyUser3 and dummyPass3 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, c and dummyPass4 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, c and dummyPass4 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, Usernames16Chars and dummyPass5 statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests5@gmail.com, Usernames16Chars and dummyPass5 statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests6@gmail.com, Usernames1 and dummy statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests6@gmail.com, Usernames1 and dummy statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with , Usernames2 and dummy statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with , Usernames2 and dummy statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests7@gmail.com,  and dummy statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests7@gmail.com,  and dummy statusText should be Internal Server Error [line 39] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests8@gmail.com, Usernames3 and  statusCode should be 500  [line 35] (covered 0)
        ✘ Register an account fields validation Account creation attempt with grupodoistests8@gmail.com, Usernames3 and  statusText should be Internal Server Error [line 39] (covered 0)
      US001-ssd.api.test.ts
        ✘ US001 - Visitor registers a new account based on (SSD1) AC should return 200 [line 16] (covered 0)
    US002
      createpost.api.test.ts
        ✘ US002 - Create a Post fields validation Post creation attempt with , text, One ring to rule them all,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with , text, One ring to rule them all,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 0 chars Status Code 500, text, ,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 0 chars Status Code 500, text, ,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 2 chars Status Code 500, text, 12,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 2 chars Status Code 500, text, 12,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 19 chars Status Code 500, text, 1111111111111111119,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 19 chars Status Code 500, text, 1111111111111111119,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 20 chars Status Code 200, text, 11111111111111111120,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 20 chars Status Code 200, text, 11111111111111111120,  statusText should be OK [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10000 chars Status Code 200, text, ,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10000 chars Status Code 200, text, ,  statusText should be OK [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10001 chars! Status Code 500, text, ,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Text 10001 chars! Status Code 500, text, ,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gandalf the grey!, , One Ring to find them,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gandalf the grey!, , One Ring to find them,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A, text, One Ring to bring them all and in the darkness bind them,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A, text, One Ring to bring them all and in the darkness bind them,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, text, The white tower,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, text, The white tower,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Rohan will answer, text, R,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Rohan will answer, text, R,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A wizzard is never late, link, ,  statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with A wizzard is never late, link, ,  statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with my precious!!, link, , .pt statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with my precious!!, link, , .pt statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Legolas the elf, link, , Who knows statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Legolas the elf, link, , Who knows statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Helm's deep battle!, link, , ole.12 statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Helm's deep battle!, link, , ole.12 statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gimli the dwarf, link and text, The dark lord returns, shire.org statusCode should be 500  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with Gimli the dwarf, link and text, The dark lord returns, shire.org statusText should be Internal Server Error [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Lord of the Rings, text, Rohin charge the uruk kai,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Lord of the Rings, text, Rohin charge the uruk kai,  statusText should be OK [line 62] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Rings of Power, text, Rohin charge the uruk kai,  statusCode should be 200  [line 58] (covered 0)
        ✘ US002 - Create a Post fields validation Post creation attempt with The Rings of Power, text, Rohin charge the uruk kai,  statusText should be OK [line 62] (covered 0)
      US002-ssd.api.test.ts
        ✓ US002 - Member correctly makes a post (SSD1) according to the AC1, AC3, AC8 Post1 - Create Post with text [line 33] (killed 3)
        ~ US002 - Member correctly makes a post with an embedded link (SSD2) according to the AC1, AC3 and AC9 Post2 - Create Post with link [line 49] (covered 33)
    US003/US003-ssd.api.test.ts
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA view post request should return 200 [line 47] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA title should be This is my postBodyText title [line 50] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA <p>Dream Tester very good heavy metal band</p> [line 53] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA username should be AmbrosioDoChoco [line 56] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA type should be text [line 59] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA link should be undefined [line 62] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA points should be -200 [line 65] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC Validate TEXT POST DATA number of comments should be 6 [line 68] (covered 0)
      ~ US003 - View posts and their data based on (SSD1) AC view Post link data Get post Link data [line 74] (covered 30)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data title should be This is my postBodyText title [line 80] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data text undefinied [line 83] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data username should be NatalyLucas [line 86] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data type should be link [line 89] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data link should be www.github.com [line 92] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data points should be 90 [line 95] (covered 0)
      ✘ US003 - View posts and their data based on (SSD1) AC view Post link data number of comments should be 0 [line 98] (covered 0)
    US004
      comment.api.test.ts
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusText should be Internal Server Error [line 62] (covered 0)
        ✓ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one [line 66] (killed 9)
        ~ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 36)
        ✘ US004 - Create a comment without field validation Comment creation attempt with D statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with D statusText should be Internal Server Error [line 62] (covered 0)
        ✓ US004 - Create a comment without field validation Comment creation attempt with D Verify that when a comment is created the number of comments increases by one [line 66] (killed 1)
        ~ US004 - Create a comment without field validation Comment creation attempt with D Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 36)
        ✘ US004 - Create a comment without field validation Comment creation attempt with <body></body> statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with <body></body> statusText should be Internal Server Error [line 62] (covered 0)
        ✓ US004 - Create a comment without field validation Comment creation attempt with <body></body> Verify that when a comment is created the number of comments increases by one [line 66] (killed 1)
        ~ US004 - Create a comment without field validation Comment creation attempt with <body></body> Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 36)
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with  statusText should be Internal Server Error [line 62] (covered 0)
        ✓ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one [line 66] (killed 1)
        ~ US004 - Create a comment without field validation Comment creation attempt with  Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 36)
        ✘ US004 - Create a comment without field validation Comment creation attempt with 2 statusCode should be 500  [line 59] (covered 0)
        ✘ US004 - Create a comment without field validation Comment creation attempt with 2 statusText should be Internal Server Error [line 62] (covered 0)
        ✓ US004 - Create a comment without field validation Comment creation attempt with 2 Verify that when a comment is created the number of comments increases by one [line 66] (killed 3)
        ~ US004 - Create a comment without field validation Comment creation attempt with 2 Verify that when a comment is created the number of comments increases by one using the getComments function [line 78] (covered 36)
      US004-ssd.api.test.ts
        ✓ US004 - Member correctly makes a comment on a post (SSD1), according to the AC1, AC2, AC3 and AC4 Create a comment [line 29] (killed 2)
    US005
      US005-ssd.api.test.ts
        ✓ US005 - visitor (SSD1) views comments and their data according to AC1 US005 - SSD1 View comments and their data by seleting the post [line 51] (killed 1)
        ~ S005 - visitor (SSD2) views a comment and it's data according to AC1 US005 - SSD2 View comments and their data by seleting the comment timestamp [line 59] (covered 39)
      viewcomments.api.test.ts
        ✘ US005 - visitor views comments and their data according to AC comment text should be Theres some good in this world, Mr. Frodo… and its worth fighting for [line 55] (covered 0)
        ✘ US005 - visitor views comments and their data according to AC username should be the same as regBody.username [line 58] (covered 0)
        ✘ US005 - visitor views comments and their data according to AC mandatory key values exist [line 61] (covered 0)
    US006/US006-ssd.api.test.ts
      ✓ US 006 - Reply to a comment on a post should have return 200 [line 30] (killed 2)
      ✘ US 006 - Reply to a comment on a post should have the same content [line 43] (covered 0)
      ~ US 006 - Reply to a comment on a post should increase the num of comments [line 53] (covered 242)
    US007/US007-ssd.api.test.ts
      ✘ (SSD) - Alternative 1 - Member upvotes a post Upvote a post [line 47] (covered 0)
      ✘ (SSD) - Alternative 2 - Member downvotes a post SSD2 - Downvote a post [line 72] (covered 0)
      ✘ (SSD) - Alternative 3 - Member tries to upvote a previously upvoted post SSD3 - Upvote a previously upvoted post [line 98] (covered 0)
      ✘ (SSD) - Alternative 4 - Member tries to downvote a previously downvote post SSD4 - Downvote a previously downvoted post [line 124] (covered 0)
      ✘ (SSD) - Alternative 5 - Member changes an upvote to a downvote SSD5 - Downvote a previously upvoted post [line 150] (covered 0)
      ~ (SSD) - Alternative 6 - Member changes a downvote to an upvote SSD6 - Upvote a previously downvoted post [line 176] (covered 260)
    US008/US008-ssd.api.test.ts
      ✓ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 1 - Member upvotes comment Verify upvote success [line 71] (killed 2)
      ✓ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 1 - Member upvotes comment Check the +1 increment on score in post page [line 78] (killed 8)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 1 - Member upvotes comment Check the +1 increment on score in comment page [line 91] (covered 39)
      ✓ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 2 - Member downvotes comment Verify downvote success [line 126] (killed 1)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 2 - Member downvotes comment Check the -1 decrement on score in post page [line 135] (covered 38)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 2 - Member downvotes comment Check the -1 decrement on score in comment page [line 148] (covered 39)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 3 - Member upvotes a previously upvoted comment Check that there wasn't a increment on score in post page [line 181] (covered 41)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 3 - Member upvotes a previously upvoted comment Check that there wasn't a increment on score in comment page [line 196] (covered 42)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 4 - Member downvotes a previously downvoted comment Check that there wasn't a decrement on score in post page [line 231] (covered 41)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 4 - Member downvotes a previously downvoted comment Check that there wasn't a decrement on score in comment page [line 246] (covered 42)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 5 - Member changes upvote to downvote Check the +1 increment followed by a -1 decrement on score in post page [line 281] (covered 43)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 5 - Member changes upvote to downvote Check the +1 increment followed by a -1 decrement on score in comment page [line 304] (covered 44)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 6 - Member changes downvote to upvote Check the +1 increment followed by a -1 decrement on score in post page [line 342] (covered 43)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 6 - Member changes downvote to upvote Check the +1 increment followed by a -1 decrement on score in comment page [line 365] (covered 44)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 8 - Member upvotes a reply to a comment Verify upvote on reply success [line 412] (covered 30)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 8 - Member upvotes a reply to a comment Check the +1 increment on reply score in post page [line 421] (covered 38)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 8 - Member upvotes a reply to a comment Check the +1 increment on reply score in comment page [line 434] (covered 39)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 9 - Member downvotes a reply to a comment Verify upvote on reply success [line 477] (covered 30)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 9 - Member downvotes a reply to a comment Check the -1 increment on reply score in post page [line 486] (covered 38)
      ~ US008 - SSDs flow tests based on Acceptance Criteria SSD Alternative 9 - Member downvotes a reply to a comment Check the -1 increment on reply score in comment page [line 499] (covered 39)
    US009/US009-ssd.api.test.ts
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 1.1 - Register members should return 200  [line 109] (covered 0)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 1.2 - Login members should return 200  [line 115] (covered 0)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 1.3 - Get popular posts 1, 2 and 3 should return 200  [line 121] (covered 0)
      ~ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 2 - US009 - SSD Alternative 2 - Sort Posts by Popular 2.1 - Check if posts are sorted by score after upvoting [line 128] (covered 29)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 3 - US009 - SSD Alternative 1 - Sort Posts by New 3.1 - Get New posts should return 200 [line 150] (covered 0)
      ~ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 3 - US009 - SSD Alternative 1 - Sort Posts by New 3.2 - Check if Posts are displayed/sorted by TimeStamp [line 154] (covered 29)
      ✘ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 4 - US009 - SSD Alternative 3 - Sort Posts by Unpopular 4.1 - Get Unpopular posts should return 200 [line 167] (covered 0)
      ~ 1 - US009 - Sort Posts by Popular or New - Create/Test Environment 4 - US009 - SSD Alternative 3 - Sort Posts by Unpopular 4.2 - Check if Posts are displayed/sorted by Unpopular [line 171] (covered 251)
    US010/us010-ssd.api.test.ts
      ✓ US010- validar que os member details should have the same name as the logged in user [line 25] (killed 1)
      ~ US010- validar que os member details should have the amount of 1 Post [line 35] (covered 36)
      ~ US010- validar que os member details should have the amount of 3 comments [line 45] (covered 36)
      ~ US010- validar que os member details US010- validar dados de um member não loggado should have the same name as the logged in user [line 56] (covered 36)
      ~ US010- validar que os member details US010- validar dados de um member não loggado should have the amount of 1 Post [line 66] (covered 36)
      ~ US010- validar que os member details US010- validar dados de um member não loggado should have the amount of 4 comments [line 76] (covered 36)
      ~ US010- valida dddForum ranking the top commenter name should be AmbrosioDoChoco [line 89] (covered 36)
      ~ US010- valida dddForum ranking the top commenter should have 6 comments [line 99] (covered 36)
      ~ US010- valida dddForum ranking the top commenter should have 2 posts [line 109] (covered 36)
    US011
      login.api.test.ts
        ✓ 1 - US011 - Login - Unsuccess Cases 1.1 - Login with incorrect username [line 21] (killed 1)
        ~ 1 - US011 - Login - Unsuccess Cases 1.2 - Login with incorrect password [line 33] (covered 36)
        ~ 1 - US011 - Login - Unsuccess Cases 1.3 - Login with incorrect username and password [line 45] (covered 36)
        ~ 1 - US011 - Login - Unsuccess Cases 1.4 - Login with correct username and blank password [line 57] (covered 36)
        ~ 1 - US011 - Login - Unsuccess Cases 1.5 - Login with blank username and correct password [line 71] (covered 36)
        ~ 1 - US011 - Login - Unsuccess Cases 2 - Try to login more than once whith the same uername and password [line 85] (covered 33)
        ~ 1 - US011 - Login - Unsuccess Cases 2.1 - Try to login more than once whith the same uername and password [line 98] (covered 33)
        ~ 1 - US011 - Login - Unsuccess Cases 2.2 - Try to login more than once whith the same uername and password [line 109] (covered 33)
      US011-ssd.api.test.ts
        ~ 1 - US011 - Member correctly logs in (SSD1) - AC2, AC3, AC4 1.1 - After register, member must login successfully [line 22] (covered 33)
        ✓ 1 - US011 - Member correctly logs in (SSD1) - AC2, AC3, AC4 2 - Validates authenticated member info after login [line 33] (killed 1)
    US012
      logout.api.test.ts
        ✓ 1 - US012 - Logout Unsuccess 1.1 - Member already logged out tryes to log out again with same accesstToken [line 22] (killed 2)
        ~ 2 - US012 - Logout Unsuccess   2.1 - Member loggs out with invalid token [line 38] (covered 32)
        ~ 2 - US012 - Logout Unsuccess   2.2 - The system allows members to logout and then login again even with an expired accessToken1. [line 45] (covered 29)
      US012-ssd.api.test.ts
        ✓ 1 - US012 - Member correctly logs out (SSD1) - AC1, AC2, AC3 1.1 - Member logs out of his account successfully [line 19] (killed 1)
    US013/delete.api.test.ts
      ✓ Delete member - Unsuccess attempt to delete user who has created a post [line 87] (killed 1)
      ~ Delete member - Unsuccess attempt to delete user who has commented on a post [line 93] (covered 33)
    US014/US014-unpopular.api.test.ts
      ~ US014 - Sort posts by Unpopular Test 1 - Get unpopular posts API must return Status 200 OK [line 13] (covered 29)
      ~ US014 - Sort posts by Unpopular Test 2 - Check if posts are sorted by lowest score [line 19] (covered 29)
    US015/us015-ssd.api.test.ts
      ✓ US015- TEST AVERAGE comments per day with valid date test average comments per day [line 18] (killed 1)
      ~ US015- TEST AVERAGE comments per day with invalid date test average comments per day with invalid date should return 500 [line 30] (covered 39)
      ~ US015- TEST AVERAGE comments per day with no posts available test average comments per day with no posts available [line 41] (covered 36)
      ~ US015- TEST AVERAGE comments per day with no comments available test average comments per day with no comments available [line 53] (covered 36)
    US017/US017.api.test.ts
      ~ US017 - Get Post with more comments on a spefic date 1.1- checkin endPoint Status positive cenario should be 200 [line 23] (covered 29)
      ~ US017 - Get Post with more comments on a spefic date 1.2 - when the date is 2023-06-26 the result must be Dream TeSTer [line 29] (covered 29)
      ~ US017 - Get Post with more comments on a spefic date 1.3 - when the date is 2023-06-27 the result must be null [line 40] (covered 29)
      ✓ US017 - Get Post with more comments on a spefic date 1.4 - when the date is 1231 the result should be a status code 500 [line 51] (killed 1)
    US018/US018.api.test.ts
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Check if endpoint request is successfull [line 24] (covered 29)
      ✓ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the top three commenters on a specific date [line 30] (killed 17)
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return top three commenters in alphabetical order for a tie [line 46] (covered 18)
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the last two commenters alphabetically in case of a tie [line 63] (covered 19)
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the first two commenters alphabetically in case of a tie. [line 80] (covered 19)
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Should return null result if no data is found [line 97] (covered 15)
      ~ API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Should handle an invalid date format [line 113] (covered 35)
    US019/US019.api.test.ts
      ✘ API Tests for getUserWithoutCommentsandPostsbyDate Test 1 - At least one user should not post or comment [line 15] (covered 0)
      ✘ API Tests for getUserWithoutCommentsandPostsbyDate Get a date where all the users did at least one action [line 41] (covered 0)
    US020/US020.api.test.ts
      ✓ Testing Percentage of Posts Without return 50 given 2 posts and one having no comments [line 71] (killed 6)
      ✓ Testing Percentage of Posts Without return error 500 given wrong date" [line 80] (killed 2)
      ~ Testing Percentage of Posts Without return null given date with no posts [line 85] (covered 29)
  modules/forum/domain/postSlug.spec.ts
    ✓ Should be able to create a post slug [line 10] (killed 19)
    ~ Should be able to parse out any bad characters not suitable for a slug [line 20] (covered 45)
  shared/core/Guard.spec.ts
    ~ guard combined results knows that two successful results equates to success [line 14] (covered 11)
    ✓ guard combined results knows that one success, one failure equates to overall failure [line 19] (killed 4)
    ✓ guard against null or undefined knows that value provided equates to success [line 29] (killed 1)
    ✓ guard against null or undefined knows that null value equates to failure [line 34] (killed 3)
    ✓ guard against null or undefined knows that undefined value equates to failure [line 40] (killed 1)
    ~ guard against null or undefined knows that empty string still equates to success [line 46] (covered 16)
    ~ guard against null or undefined bulk knows that values provided equates to success [line 53] (covered 18)
    ✓ guard against null or undefined bulk knows that a single null value equates to failure [line 61] (killed 1)
    ~ guard against null or undefined bulk knows that a single undefined value equates to failure [line 71] (covered 19)

[Survived] ConditionalExpression
src/api_test/config/configHandler.ts:32:9
-       if (!ConfigHandler.instance) {
+       if (true) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/config/configHandler.ts:60:9
-       if (this.validEnvironments.indexOf(environment) === -1) {
+       if (false) {
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/api_test/endpoints/abstracts/AEndpoint.ts:24:38
-     protected log: Logger = new Logger({
-       minLevel: this.config.environmnetConfig.log_level,
-       dateTimeTimezone:
-         this.config.environmnetConfig.time_zone ||
-         Intl.DateTimeFormat().resolvedOptions().timeZone,
-     });
+     protected log: Logger = new Logger({});
Ran all tests for this mutant.

[Survived] LogicalOperator
src/api_test/endpoints/abstracts/AEndpoint.ts:27:7
-         this.config.environmnetConfig.time_zone ||
-         Intl.DateTimeFormat().resolvedOptions().timeZone,
+         this.config.environmnetConfig.time_zone && Intl.DateTimeFormat().resolvedOptions().timeZone,
Ran all tests for this mutant.

[NoCoverage] ObjectLiteral
src/api_test/endpoints/Posts.ts:46:16
-         headers: {
-           Authorization: accessToken,
-           Accept: 'application/json',
-           'Content-Type': 'application/json',
-         },
+         headers: {},

[NoCoverage] ObjectLiteral
src/api_test/endpoints/Posts.ts:58:16
-         headers: {
-           Authorization: accessToken,
-           Accept: 'application/json',
-           'Content-Type': 'application/json',
-         },
+         headers: {},

[NoCoverage] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:40
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text == postBody.text || false) {

[NoCoverage] EqualityOperator
src/api_test/endpoints/Posts.ts:70:40
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text == postBody.text || i.link != postBody.link) {

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (true) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (false) {
Ran all tests for this mutant.

[Survived] LogicalOperator
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title == postBody.title || i.memberPostedBy.user.username == regBody.username) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (true && i.memberPostedBy.user.username == regBody.username) {
Ran all tests for this mutant.

[Survived] EqualityOperator
src/api_test/endpoints/Posts.ts:69:11
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title != postBody.title && i.memberPostedBy.user.username == regBody.username) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:69:40
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title == postBody.title && true) {
Ran all tests for this mutant.

[Survived] EqualityOperator
src/api_test/endpoints/Posts.ts:69:40
-         if (i.title == postBody.title && i.memberPostedBy.user.username == regBody.username) {
+         if (i.title == postBody.title && i.memberPostedBy.user.username != regBody.username) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (true) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (false) {
Ran all tests for this mutant.

[Survived] LogicalOperator
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text == postBody.text && i.link == postBody.link) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (false || i.link == postBody.link) {
Ran all tests for this mutant.

[Survived] EqualityOperator
src/api_test/endpoints/Posts.ts:70:13
-           if (i.text == postBody.text || i.link == postBody.link) {
+           if (i.text != postBody.text || i.link == postBody.link) {
Ran all tests for this mutant.

[NoCoverage] ObjectLiteral
src/api_test/endpoints/Users.ts:104:16
-         headers: { Authorization: accessToken}
+         headers: {}

[Survived] ObjectLiteral
src/api_test/endpoints/Users.ts:74:13
-         data: { userId: userId },
+         data: {},
Tests ran:
    Delete member - Unsuccess attempt to delete user who has created a post
    Delete member - Unsuccess attempt to delete user who has commented on a post


[NoCoverage] ObjectLiteral
src/api_test/restClient/RestClient.ts:70:24
-         requestHeaders = {
-           ...requestHeaders,
-           ...{
-             Authorization: `Bearer ${authToken}`,
-           },
-         };
+         requestHeaders = {};

[NoCoverage] ObjectLiteral
src/api_test/restClient/RestClient.ts:72:12
-           ...{
-             Authorization: `Bearer ${authToken}`,
-           },
+           ...{},

[Survived] ObjectLiteral
src/api_test/restClient/RestClient.ts:20:24
-   const log = new Logger({
-     minLevel: config.environmnetConfig.log_level,
-     dateTimeTimezone:
-       config.environmnetConfig.time_zone ||
-       Intl.DateTimeFormat().resolvedOptions().timeZone,
-   });
+   const log = new Logger({});
Ran all tests for this mutant.

[Survived] LogicalOperator
src/api_test/restClient/RestClient.ts:23:5
-       config.environmnetConfig.time_zone ||
-       Intl.DateTimeFormat().resolvedOptions().timeZone,
+       config.environmnetConfig.time_zone && Intl.DateTimeFormat().resolvedOptions().timeZone,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/api_test/restClient/RestClient.ts:37:39
-       this.axiosInstance = axios.create({ baseURL: baseUrl });
+       this.axiosInstance = axios.create({});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/api_test/restClient/RestClient.ts:40:40
-     private httpsAgent = new https.Agent({
-       rejectUnauthorized: false,
-     });
+     private httpsAgent = new https.Agent({});
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/api_test/restClient/RestClient.ts:41:25
-       rejectUnauthorized: false,
+       rejectUnauthorized: true,
Ran all tests for this mutant.

[NoCoverage] ConditionalExpression
src/config/auth.ts:4:20
-     redisServerPort: process.env.DDD_FORUM_REDIS_PORT || 6379,
+     redisServerPort: true,

[NoCoverage] ConditionalExpression
src/config/auth.ts:4:20
-     redisServerPort: process.env.DDD_FORUM_REDIS_PORT || 6379,
+     redisServerPort: false,

[NoCoverage] LogicalOperator
src/config/auth.ts:4:20
-     redisServerPort: process.env.DDD_FORUM_REDIS_PORT || 6379,
+     redisServerPort: process.env.DDD_FORUM_REDIS_PORT && 6379,

[NoCoverage] ConditionalExpression
src/config/index.ts:3:22
-   const isProduction = process.env.DDD_FORUM_IS_PRODUCTION === 'true';
+   const isProduction = true;

[NoCoverage] ConditionalExpression
src/config/index.ts:3:22
-   const isProduction = process.env.DDD_FORUM_IS_PRODUCTION === 'true';
+   const isProduction = false;

[NoCoverage] EqualityOperator
src/config/index.ts:3:22
-   const isProduction = process.env.DDD_FORUM_IS_PRODUCTION === 'true';
+   const isProduction = process.env.DDD_FORUM_IS_PRODUCTION !== 'true';

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:22:79
-       const existingDownvote: CommentVote = existingVotesOnCommentByMember.find((v) =>
-         v.isDownvote(),
+       const existingDownvote: CommentVote = existingVotesOnCommentByMember.find(() => undefined,

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:26:35
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:26:36
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:28:9
-       if (downvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:28:9
-       if (downvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:34:77
-       const existingUpvote: CommentVote = existingVotesOnCommentByMember.find((v) => v.isUpvote());
+       const existingUpvote: CommentVote = existingVotesOnCommentByMember.find(() => undefined);

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:36:33
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:36:34
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:38:9
-       if (upvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:38:9
-       if (upvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:49:9
-       if (downvoteOrError.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:49:9
-       if (downvoteOrError.isFailure) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:67:77
-       const existingUpvote: CommentVote = existingVotesOnCommentByMember.find((v) => v.isUpvote());
+       const existingUpvote: CommentVote = existingVotesOnCommentByMember.find(() => undefined);

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:69:33
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:69:34
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:70:9
-       if (upvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:70:9
-       if (upvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:76:79
-       const existingDownvote: CommentVote = existingVotesOnCommentByMember.find((v) =>
-         v.isDownvote(),
+       const existingDownvote: CommentVote = existingVotesOnCommentByMember.find(() => undefined,

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:80:35
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:80:36
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:81:9
-       if (downvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:81:9
-       if (downvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:92:9
-       if (upvoteOrError.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:92:9
-       if (upvoteOrError.isFailure) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:110:73
-       const existingDownvote: PostVote = existingVotesOnPostByMember.find((v) => v.isDownvote());
+       const existingDownvote: PostVote = existingVotesOnPostByMember.find(() => undefined);

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:112:35
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:112:36
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:114:9
-       if (downvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:114:9
-       if (downvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:119:71
-       const existingUpvote: PostVote = existingVotesOnPostByMember.find((v) => v.isUpvote());
+       const existingUpvote: PostVote = existingVotesOnPostByMember.find(() => undefined);

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:121:33
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:121:34
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:123:9
-       if (upvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:123:9
-       if (upvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:133:9
-       if (downvoteOrError.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:133:9
-       if (downvoteOrError.isFailure) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:148:71
-       const existingUpvote: PostVote = existingVotesOnPostByMember.find((v) => v.isUpvote());
+       const existingUpvote: PostVote = existingVotesOnPostByMember.find(() => undefined);

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:151:33
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:151:34
-       const upvoteAlreadyExists = !!existingUpvote;
+       const upvoteAlreadyExists = !existingUpvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:153:9
-       if (upvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:153:9
-       if (upvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/domain/services/postService.ts:158:73
-       const existingDownvote: PostVote = existingVotesOnPostByMember.find((v) => v.isDownvote());
+       const existingDownvote: PostVote = existingVotesOnPostByMember.find(() => undefined);

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:160:35
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/services/postService.ts:160:36
-       const downvoteAlreadyExists = !!existingDownvote;
+       const downvoteAlreadyExists = !existingDownvote;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:162:9
-       if (downvoteAlreadyExists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:162:9
-       if (downvoteAlreadyExists) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:170:9
-       if (upvoteOrError.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:170:9
-       if (upvoteOrError.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:193:9
-       if (commentOrError.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/services/postService.ts:193:9
-       if (commentOrError.isFailure) {
+       if (false) {

[NoCoverage] ArithmeticOperator
src/modules/forum/domain/comment.ts:45:12
-       return initialValue + this.computeVotePoints();
+       return initialValue - this.computeVotePoints();

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:52:11
-         if (vote.isUpvote()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:52:11
-         if (vote.isUpvote()) {
+         if (false) {

[NoCoverage] UpdateOperator
src/modules/forum/domain/comment.ts:53:9
-           tally++;
+           tally--;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:56:11
-         if (vote.isDownvote()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:56:11
-         if (vote.isDownvote()) {
+         if (false) {

[NoCoverage] UpdateOperator
src/modules/forum/domain/comment.ts:57:9
-           tally--;
+           tally++;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:62:11
-         if (vote.isUpvote()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:62:11
-         if (vote.isUpvote()) {
+         if (false) {

[NoCoverage] UpdateOperator
src/modules/forum/domain/comment.ts:63:9
-           tally--;
+           tally++;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:66:11
-         if (vote.isDownvote()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:66:11
-         if (vote.isDownvote()) {
+         if (false) {

[NoCoverage] UpdateOperator
src/modules/forum/domain/comment.ts:67:9
-           tally++;
+           tally--;

[NoCoverage] ArithmeticOperator
src/modules/forum/domain/comment.ts:89:25
-       this.props.points = totalNumUpvotes - totalNumDownvotes;
+       this.props.points = totalNumUpvotes + totalNumDownvotes;

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/comment.ts:97:56
-       const nullGuard = Guard.againstNullOrUndefinedBulk([
-         { argument: props.memberId, argumentName: 'memberId' },
-         { argument: props.text, argumentName: 'text' },
-         { argument: props.postId, argumentName: 'postId' },
-       ]);
+       const nullGuard = Guard.againstNullOrUndefinedBulk([]);

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:103:9
-       if (nullGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:103:9
-       if (nullGuard.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:106:28
-         const isNewComment = !!id === false;
+         const isNewComment = true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:106:28
-         const isNewComment = !!id === false;
+         const isNewComment = false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/comment.ts:106:28
-         const isNewComment = !!id === false;
+         const isNewComment = !!id !== false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/comment.ts:106:28
-         const isNewComment = !!id === false;
+         const isNewComment = !id === false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/comment.ts:106:29
-         const isNewComment = !!id === false;
+         const isNewComment = !id === false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/comment.ts:106:37
-         const isNewComment = !!id === false;
+         const isNewComment = !!id === true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:116:11
-         if (isNewComment) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/comment.ts:116:11
-         if (isNewComment) {
+         if (false) {

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/commentDetails.ts:69:56
-       const nullGuard = Guard.againstNullOrUndefinedBulk([
-         { argument: props.commentId, argumentName: 'commentId' },
-         { argument: props.text, argumentName: 'text' },
-         { argument: props.member, argumentName: 'member' },
-         { argument: props.createdAt, argumentName: 'createdAt' },
-         { argument: props.postSlug, argumentName: 'postSlug' },
-         { argument: props.postTitle, argumentName: 'postTitle' },
-         { argument: props.points, argumentName: 'points' },
-       ]);
+       const nullGuard = Guard.againstNullOrUndefinedBulk([]);

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentDetails.ts:79:9
-       if (nullGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentDetails.ts:79:9
-       if (nullGuard.isFailure) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/commentDetails.ts:86:71
-           wasUpvotedByMe: props.wasUpvotedByMe ? props.wasUpvotedByMe : false,
+           wasUpvotedByMe: props.wasUpvotedByMe ? props.wasUpvotedByMe : true,

[NoCoverage] BooleanLiteral
src/modules/forum/domain/commentDetails.ts:87:77
-           wasDownvotedByMe: props.wasDownvotedByMe ? props.wasDownvotedByMe : false,
+           wasDownvotedByMe: props.wasDownvotedByMe ? props.wasDownvotedByMe : true,

[NoCoverage] Regex
src/modules/forum/domain/commentText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/[^>]+(>|$)/g, '');

[NoCoverage] Regex
src/modules/forum/domain/commentText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/?[^>](>|$)/g, '');

[NoCoverage] Regex
src/modules/forum/domain/commentText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/?[>]+(>|$)/g, '');

[NoCoverage] Regex
src/modules/forum/domain/commentText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/?[^>]+(>)/g, '');

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentText.ts:30:9
-       if (nullGuardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentText.ts:30:9
-       if (nullGuardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentText.ts:37:9
-       if (minGuardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentText.ts:37:9
-       if (minGuardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentText.ts:41:9
-       if (maxGuardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentText.ts:41:9
-       if (maxGuardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:33:12
-       return this.props.type === 'UPVOTE';
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:33:12
-       return this.props.type === 'UPVOTE';
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/commentVote.ts:33:12
-       return this.props.type === 'UPVOTE';
+       return this.props.type !== 'UPVOTE';

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:37:12
-       return this.props.type === 'DOWNVOTE';
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:37:12
-       return this.props.type === 'DOWNVOTE';
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/commentVote.ts:37:12
-       return this.props.type === 'DOWNVOTE';
+       return this.props.type !== 'DOWNVOTE';

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/commentVote.ts:45:58
-       const guardResult = Guard.againstNullOrUndefinedBulk([
-         { argument: props.memberId, argumentName: 'memberId' },
-         { argument: props.commentId, argumentName: 'commentId' },
-         { argument: props.type, argumentName: 'type' },
-       ]);
+       const guardResult = Guard.againstNullOrUndefinedBulk([]);

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:51:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:51:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:62:9
-       if (memberGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:62:9
-       if (memberGuard.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:66:9
-       if (postGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:66:9
-       if (postGuard.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:83:9
-       if (memberGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:83:9
-       if (memberGuard.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:87:9
-       if (postGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/commentVote.ts:87:9
-       if (postGuard.isFailure) {
+       if (false) {

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/member.ts:38:58
-       const guardResult = Guard.againstNullOrUndefinedBulk([
-         { argument: props.userId, argumentName: 'userId' },
-         { argument: props.username, argumentName: 'username' },
-       ]);
+       const guardResult = Guard.againstNullOrUndefinedBulk([]);

[NoCoverage] ConditionalExpression
src/modules/forum/domain/member.ts:43:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/member.ts:43:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/member.ts:53:25
-       const isNewMember = !!id === false;
+       const isNewMember = true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/member.ts:53:25
-       const isNewMember = !!id === false;
+       const isNewMember = false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/member.ts:53:25
-       const isNewMember = !!id === false;
+       const isNewMember = !!id !== false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/member.ts:53:25
-       const isNewMember = !!id === false;
+       const isNewMember = !id === false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/member.ts:53:26
-       const isNewMember = !!id === false;
+       const isNewMember = !id === false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/member.ts:53:34
-       const isNewMember = !!id === false;
+       const isNewMember = !!id === true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/member.ts:55:9
-       if (isNewMember) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/member.ts:55:9
-       if (isNewMember) {
+       if (false) {

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/memberDetails.ts:39:58
-       const guardResult = Guard.againstNullOrUndefinedBulk([
-         { argument: props.username, argumentName: 'username' },
-         { argument: props.reputation, argumentName: 'reputation' },
-       ]);
+       const guardResult = Guard.againstNullOrUndefinedBulk([]);

[NoCoverage] ConditionalExpression
src/modules/forum/domain/memberDetails.ts:44:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/memberDetails.ts:44:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/memberDetails.ts:51:62
-           isAdminUser: props.isAdminUser ? props.isAdminUser : false,
+           isAdminUser: props.isAdminUser ? props.isAdminUser : true,

[NoCoverage] BooleanLiteral
src/modules/forum/domain/memberDetails.ts:52:56
-           isDeleted: props.isDeleted ? props.isDeleted : false,
+           isDeleted: props.isDeleted ? props.isDeleted : true,

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:88:9
-       if (numComments >= 0) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:88:9
-       if (numComments >= 0) {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:88:9
-       if (numComments >= 0) {
+       if (numComments > 0) {

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:88:9
-       if (numComments >= 0) {
+       if (numComments < 0) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:94:12
-       return this.totalNumComments !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:94:12
-       return this.totalNumComments !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:94:12
-       return this.totalNumComments !== 0;
+       return this.totalNumComments === 0;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/post.ts:98:9
-       if (!this.isTextPost()) {
+       if (this.isTextPost()) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:98:9
-       if (!this.isTextPost()) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:98:9
-       if (!this.isTextPost()) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:102:9
-       if (this.hasComments()) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:102:9
-       if (this.hasComments()) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:108:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:108:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/post.ts:117:9
-       if (!this.isLinkPost()) {
+       if (this.isLinkPost()) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:117:9
-       if (!this.isLinkPost()) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:117:9
-       if (!this.isLinkPost()) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:121:9
-       if (this.hasComments()) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:121:9
-       if (this.hasComments()) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:127:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:127:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] ArithmeticOperator
src/modules/forum/domain/post.ts:142:7
-         numPostUpvotes - numPostDownvotes + (numPostCommentUpvotes - numPostCommentDownvotes);
+         numPostUpvotes - numPostDownvotes - (numPostCommentUpvotes - numPostCommentDownvotes);

[NoCoverage] ArithmeticOperator
src/modules/forum/domain/post.ts:142:7
-         numPostUpvotes - numPostDownvotes + (numPostCommentUpvotes - numPostCommentDownvotes);
+         numPostUpvotes + numPostDownvotes + (numPostCommentUpvotes - numPostCommentDownvotes);

[NoCoverage] ArithmeticOperator
src/modules/forum/domain/post.ts:142:44
-         numPostUpvotes - numPostDownvotes + (numPostCommentUpvotes - numPostCommentDownvotes);
+         numPostUpvotes - numPostDownvotes + (numPostCommentUpvotes + numPostCommentDownvotes);

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:158:9
-       if (this.props.comments.exists(comment)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:158:9
-       if (this.props.comments.exists(comment)) {
+       if (false) {

[NoCoverage] UpdateOperator
src/modules/forum/domain/post.ts:166:5
-       this.props.totalNumComments++;
+       this.props.totalNumComments--;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:179:12
-       return this.props.type === 'link';
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:179:12
-       return this.props.type === 'link';
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:179:12
-       return this.props.type === 'link';
+       return this.props.type !== 'link';

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:183:12
-       return this.props.type === 'text';
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:183:12
-       return this.props.type === 'text';
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:183:12
-       return this.props.type === 'text';
+       return this.props.type !== 'text';

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:197:12
-       return rawType === textType || rawType === linkType;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:197:12
-       return rawType === textType || rawType === linkType;
+       return false;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:197:12
-       return rawType === textType || rawType === linkType;
+       return false || rawType === linkType;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:197:36
-       return rawType === textType || rawType === linkType;
+       return rawType === textType || false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:197:36
-       return rawType === textType || rawType === linkType;
+       return rawType === textType || rawType !== linkType;

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/post.ts:201:41
-       const guardArgs: IGuardArgument[] = [
-         { argument: props.memberId, argumentName: 'memberId' },
-         { argument: props.slug, argumentName: 'slug' },
-         { argument: props.title, argumentName: 'title' },
-         { argument: props.type, argumentName: 'type' },
-       ];
+       const guardArgs: IGuardArgument[] = [];

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:208:9
-       if (props.type === 'link') {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:208:9
-       if (props.type === 'link') {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:208:9
-       if (props.type === 'link') {
+       if (props.type !== 'link') {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:216:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:216:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/post.ts:220:9
-       if (!this.isValidPostType(props.type)) {
+       if (this.isValidPostType(props.type)) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:220:9
-       if (!this.isValidPostType(props.type)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:220:9
-       if (!this.isValidPostType(props.type)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:233:23
-       const isNewPost = !!id === false;
+       const isNewPost = true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:233:23
-       const isNewPost = !!id === false;
+       const isNewPost = false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/post.ts:233:23
-       const isNewPost = !!id === false;
+       const isNewPost = !!id !== false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/post.ts:233:23
-       const isNewPost = !!id === false;
+       const isNewPost = !id === false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/post.ts:233:24
-       const isNewPost = !!id === false;
+       const isNewPost = !id === false;

[NoCoverage] BooleanLiteral
src/modules/forum/domain/post.ts:233:32
-       const isNewPost = !!id === false;
+       const isNewPost = !!id === true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:236:9
-       if (isNewPost) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/post.ts:236:9
-       if (isNewPost) {
+       if (false) {

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/postDetails.ts:76:41
-       const guardArgs: IGuardArgument[] = [
-         { argument: props.member, argumentName: 'member' },
-         { argument: props.slug, argumentName: 'slug' },
-         { argument: props.title, argumentName: 'title' },
-         { argument: props.type, argumentName: 'type' },
-         { argument: props.numComments, argumentName: 'numComments' },
-         { argument: props.points, argumentName: 'points' },
-         { argument: props.dateTimePosted, argumentName: 'dateTimePosted' },
-       ];
+       const guardArgs: IGuardArgument[] = [];

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postDetails.ts:86:9
-       if (props.type === 'link') {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postDetails.ts:86:9
-       if (props.type === 'link') {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/forum/domain/postDetails.ts:86:9
-       if (props.type === 'link') {
+       if (props.type !== 'link') {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postDetails.ts:94:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postDetails.ts:94:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/postDetails.ts:98:9
-       if (!Post.isValidPostType(props.type)) {
+       if (Post.isValidPostType(props.type)) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postDetails.ts:98:9
-       if (!Post.isValidPostType(props.type)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postDetails.ts:98:9
-       if (!Post.isValidPostType(props.type)) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/postDetails.ts:105:71
-           wasUpvotedByMe: props.wasUpvotedByMe ? props.wasUpvotedByMe : false,
+           wasUpvotedByMe: props.wasUpvotedByMe ? props.wasUpvotedByMe : true,

[NoCoverage] BooleanLiteral
src/modules/forum/domain/postDetails.ts:106:77
-           wasDownvotedByMe: props.wasDownvotedByMe ? props.wasDownvotedByMe : false,
+           wasDownvotedByMe: props.wasDownvotedByMe ? props.wasDownvotedByMe : true,

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postLink.ts:22:9
-       if (nullGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postLink.ts:22:9
-       if (nullGuard.isFailure) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/postLink.ts:26:9
-       if (!TextUtils.validateWebURL(props.url)) {
+       if (TextUtils.validateWebURL(props.url)) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postLink.ts:26:9
-       if (!TextUtils.validateWebURL(props.url)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postLink.ts:26:9
-       if (!TextUtils.validateWebURL(props.url)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postSlug.ts:30:9
-       if (!!slugName === true) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postSlug.ts:30:9
-       if (!!slugName === true) {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/forum/domain/postSlug.ts:30:9
-       if (!!slugName === true) {
+       if (!!slugName !== true) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/postSlug.ts:30:9
-       if (!!slugName === true) {
+       if (!slugName === true) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/postSlug.ts:30:10
-       if (!!slugName === true) {
+       if (!slugName === true) {

[NoCoverage] BooleanLiteral
src/modules/forum/domain/postSlug.ts:30:24
-       if (!!slugName === true) {
+       if (!!slugName === false) {

[Survived] ObjectLiteral
src/modules/forum/domain/postSlug.ts:8:33
-   slug.defaults.modes['pretty'] = {
-     replacement: '-', // replace spaces with replacement
-     symbols: false, // replace unicode symbols or not
-     lower: true, // result in lower case
-     charmap: slug.charmap, // replace special characters
-     multicharmap: slug.multicharmap, // replace multi-characters
-   };
+   slug.defaults.modes['pretty'] = {};
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/modules/forum/domain/postSlug.ts:10:12
-     symbols: false, // replace unicode symbols or not
+     symbols: true, // replace unicode symbols or not
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/modules/forum/domain/postSlug.ts:11:10
-     lower: true, // result in lower case
+     lower: false, // result in lower case
Ran all tests for this mutant.

[Survived] Regex
src/modules/forum/domain/postSlug.ts:42:42
-       returnSlug = postTitle.value.replace(/[\W_]+/g, ' ');
+       returnSlug = postTitle.value.replace(/[\W_]/g, ' ');
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] Regex
src/modules/forum/domain/postSlug.ts:42:42
-       returnSlug = postTitle.value.replace(/[\W_]+/g, ' ');
+       returnSlug = postTitle.value.replace(/[^\W_]+/g, ' ');
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] Regex
src/modules/forum/domain/postSlug.ts:42:42
-       returnSlug = postTitle.value.replace(/[\W_]+/g, ' ');
+       returnSlug = postTitle.value.replace(/[\w_]+/g, ' ');
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[NoCoverage] Regex
src/modules/forum/domain/postText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/[^>]+(>|$)/g, '');

[NoCoverage] Regex
src/modules/forum/domain/postText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/?[^>](>|$)/g, '');

[NoCoverage] Regex
src/modules/forum/domain/postText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/?[>]+(>|$)/g, '');

[NoCoverage] Regex
src/modules/forum/domain/postText.ts:23:26
-       return input.replace(/<\/?[^>]+(>|$)/g, '');
+       return input.replace(/<\/?[^>]+(>)/g, '');

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postText.ts:30:9
-       if (nullGuardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postText.ts:30:9
-       if (nullGuardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postText.ts:37:9
-       if (minGuardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postText.ts:37:9
-       if (minGuardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postText.ts:41:9
-       if (maxGuardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postText.ts:41:9
-       if (maxGuardResult.isFailure) {
+       if (false) {

[Survived] ConditionalExpression
src/modules/forum/domain/postTitle.ts:24:9
-       if (nullGuardResult.isFailure) {
+       if (false) {
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] ConditionalExpression
src/modules/forum/domain/postTitle.ts:31:9
-       if (minGuardResult.isFailure) {
+       if (false) {
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] ConditionalExpression
src/modules/forum/domain/postTitle.ts:35:9
-       if (maxGuardResult.isFailure) {
+       if (false) {
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:33:12
-       return this.props.type === 'UPVOTE';
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:33:12
-       return this.props.type === 'UPVOTE';
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/postVote.ts:33:12
-       return this.props.type === 'UPVOTE';
+       return this.props.type !== 'UPVOTE';

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:37:12
-       return this.props.type === 'DOWNVOTE';
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:37:12
-       return this.props.type === 'DOWNVOTE';
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/domain/postVote.ts:37:12
-       return this.props.type === 'DOWNVOTE';
+       return this.props.type !== 'DOWNVOTE';

[NoCoverage] ArrayDeclaration
src/modules/forum/domain/postVote.ts:45:58
-       const guardResult = Guard.againstNullOrUndefinedBulk([
-         { argument: props.memberId, argumentName: 'memberId' },
-         { argument: props.postId, argumentName: 'postId' },
-         { argument: props.type, argumentName: 'type' },
-       ]);
+       const guardResult = Guard.againstNullOrUndefinedBulk([]);

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:51:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:51:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:62:9
-       if (memberGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:62:9
-       if (memberGuard.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:66:9
-       if (postGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:66:9
-       if (postGuard.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:83:9
-       if (memberGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:83:9
-       if (memberGuard.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:87:9
-       if (postGuard.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/domain/postVote.ts:87:9
-       if (postGuard.isFailure) {
+       if (false) {

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/comment.ts:15:3
-     (req, res) =>
-       getCommentsByPostSlugController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/comment.ts:22:3
-     (req, res) => replyToPostController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/comment.ts:28:3
-     (req, res) => replyToCommentController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/comment.ts:34:3
-     (req, res) =>
-       getCommentByCommentIdController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/comment.ts:41:3
-     (req, res) => upvoteCommentController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/comment.ts:47:3
-     (req, res) => downvoteCommentController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/member.ts:7:25
-   memberRouter.get('/me', (req, res) =>
-     getCurrentMemberController.execute(req, res),
+   memberRouter.get('/me', () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/member.ts:11:32
-   memberRouter.get('/:username', (req, res) =>
-     getMemberByUserNameController.execute(req, res),
+   memberRouter.get('/:username', () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/post.ts:16:3
-     (req, res) => createPostController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/post.ts:22:3
-     (req, res) => getRecentPostsController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/post.ts:28:3
-     (req, res) => getPopularPostsController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/post.ts:34:3
-     (req, res) =>
-       getUnpopularPostsController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/post.ts:41:3
-     (req, res) => getPostBySlugController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/post.ts:47:3
-     (req, res) => upvotePostController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/infra/http/routes/post.ts:53:3
-     (req, res) => downvotePostController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/forum/mappers/commentDetailsMap.ts:16:30
-         ? raw.CommentVotes.map((v) => CommentVoteMap.toDomain(v))
+         ? raw.CommentVotes.map(() => undefined)

[NoCoverage] ArrayDeclaration
src/modules/forum/mappers/commentDetailsMap.ts:17:9
-         : [];
+         : ["Stryker was here"];

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/commentDetailsMap.ts:30:23
-         wasUpvotedByMe: !!votes.find((v) => v.isUpvote()),
+         wasUpvotedByMe: !votes.find(v => v.isUpvote()),

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/commentDetailsMap.ts:30:24
-         wasUpvotedByMe: !!votes.find((v) => v.isUpvote()),
+         wasUpvotedByMe: !votes.find(v => v.isUpvote()),

[NoCoverage] ArrowFunction
src/modules/forum/mappers/commentDetailsMap.ts:30:36
-         wasUpvotedByMe: !!votes.find((v) => v.isUpvote()),
+         wasUpvotedByMe: !!votes.find(() => undefined),

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/commentDetailsMap.ts:31:25
-         wasDownvotedByMe: !!votes.find((v) => v.isDownvote()),
+         wasDownvotedByMe: !votes.find(v => v.isDownvote()),

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/commentDetailsMap.ts:31:26
-         wasDownvotedByMe: !!votes.find((v) => v.isDownvote()),
+         wasDownvotedByMe: !votes.find(v => v.isDownvote()),

[NoCoverage] ArrowFunction
src/modules/forum/mappers/commentDetailsMap.ts:31:38
-         wasDownvotedByMe: !!votes.find((v) => v.isDownvote()),
+         wasDownvotedByMe: !!votes.find(() => undefined),

[NoCoverage] ObjectLiteral
src/modules/forum/mappers/commentMap.ts:11:12
-       return {
-         post_id: comment.postId.id.toString(),
-         comment_id: comment.commentId.id.toString(),
-         member_id: comment.memberId.id.toString(),
-         parent_comment_id: comment.parentCommentId ? comment.parentCommentId.id.toString() : null,
-         text: comment.text.value,
-         points: comment.points,
-       };
+       return {};

[NoCoverage] ObjectLiteral
src/modules/forum/mappers/commentVoteMap.ts:27:12
-       return {
-         comment_vote_id: vote.id.toString(),
-         comment_id: vote.commentId.id.toString(),
-         member_id: vote.memberId.id.toString(),
-         type: vote.type,
-       };
+       return {};

[NoCoverage] ObjectLiteral
src/modules/forum/mappers/memberMap.ts:28:12
-       return {
-         member_id: member.memberId.id.toString(),
-         member_base_id: member.userId.id.toString(),
-         reputation: member.reputation,
-       };
+       return {};

[NoCoverage] ArrowFunction
src/modules/forum/mappers/postDetailsMap.ts:21:57
-       const votes: PostVote[] = raw.Votes ? raw.Votes.map((v) => PostVoteMap.toDomain(v)) : [];
+       const votes: PostVote[] = raw.Votes ? raw.Votes.map(() => undefined) : [];

[NoCoverage] ArrayDeclaration
src/modules/forum/mappers/postDetailsMap.ts:21:91
-       const votes: PostVote[] = raw.Votes ? raw.Votes.map((v) => PostVoteMap.toDomain(v)) : [];
+       const votes: PostVote[] = raw.Votes ? raw.Votes.map((v) => PostVoteMap.toDomain(v)) : ["Stryker was here"];

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postDetailsMap.ts:31:13
-         text: postType === 'text' ? PostText.create({ value: raw.text }).getValue() : null,
+         text: true ? PostText.create({ value: raw.text }).getValue() : null,

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postDetailsMap.ts:31:13
-         text: postType === 'text' ? PostText.create({ value: raw.text }).getValue() : null,
+         text: false ? PostText.create({ value: raw.text }).getValue() : null,

[NoCoverage] EqualityOperator
src/modules/forum/mappers/postDetailsMap.ts:31:13
-         text: postType === 'text' ? PostText.create({ value: raw.text }).getValue() : null,
+         text: postType !== 'text' ? PostText.create({ value: raw.text }).getValue() : null,

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postDetailsMap.ts:32:13
-         link: postType === 'link' ? PostLink.create({ url: raw.link }).getValue() : null,
+         link: true ? PostLink.create({ url: raw.link }).getValue() : null,

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postDetailsMap.ts:32:13
-         link: postType === 'link' ? PostLink.create({ url: raw.link }).getValue() : null,
+         link: false ? PostLink.create({ url: raw.link }).getValue() : null,

[NoCoverage] EqualityOperator
src/modules/forum/mappers/postDetailsMap.ts:32:13
-         link: postType === 'link' ? PostLink.create({ url: raw.link }).getValue() : null,
+         link: postType !== 'link' ? PostLink.create({ url: raw.link }).getValue() : null,

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/postDetailsMap.ts:33:23
-         wasUpvotedByMe: !!votes.find((v) => v.isUpvote()),
+         wasUpvotedByMe: !votes.find(v => v.isUpvote()),

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/postDetailsMap.ts:33:24
-         wasUpvotedByMe: !!votes.find((v) => v.isUpvote()),
+         wasUpvotedByMe: !votes.find(v => v.isUpvote()),

[NoCoverage] ArrowFunction
src/modules/forum/mappers/postDetailsMap.ts:33:36
-         wasUpvotedByMe: !!votes.find((v) => v.isUpvote()),
+         wasUpvotedByMe: !!votes.find(() => undefined),

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/postDetailsMap.ts:34:25
-         wasDownvotedByMe: !!votes.find((v) => v.isDownvote()),
+         wasDownvotedByMe: !votes.find(v => v.isDownvote()),

[NoCoverage] BooleanLiteral
src/modules/forum/mappers/postDetailsMap.ts:34:26
-         wasDownvotedByMe: !!votes.find((v) => v.isDownvote()),
+         wasDownvotedByMe: !votes.find(v => v.isDownvote()),

[NoCoverage] ArrowFunction
src/modules/forum/mappers/postDetailsMap.ts:34:38
-         wasDownvotedByMe: !!votes.find((v) => v.isDownvote()),
+         wasDownvotedByMe: !!votes.find(() => undefined),

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postMap.ts:21:15
-           text: postType === 'text' ? PostText.create({ value: raw.text }).getValue() : null,
+           text: true ? PostText.create({ value: raw.text }).getValue() : null,

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postMap.ts:21:15
-           text: postType === 'text' ? PostText.create({ value: raw.text }).getValue() : null,
+           text: false ? PostText.create({ value: raw.text }).getValue() : null,

[NoCoverage] EqualityOperator
src/modules/forum/mappers/postMap.ts:21:15
-           text: postType === 'text' ? PostText.create({ value: raw.text }).getValue() : null,
+           text: postType !== 'text' ? PostText.create({ value: raw.text }).getValue() : null,

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postMap.ts:22:15
-           link: postType === 'link' ? PostLink.create({ url: raw.link }).getValue() : null,
+           link: true ? PostLink.create({ url: raw.link }).getValue() : null,

[NoCoverage] ConditionalExpression
src/modules/forum/mappers/postMap.ts:22:15
-           link: postType === 'link' ? PostLink.create({ url: raw.link }).getValue() : null,
+           link: false ? PostLink.create({ url: raw.link }).getValue() : null,

[NoCoverage] EqualityOperator
src/modules/forum/mappers/postMap.ts:22:15
-           link: postType === 'link' ? PostLink.create({ url: raw.link }).getValue() : null,
+           link: postType !== 'link' ? PostLink.create({ url: raw.link }).getValue() : null,

[NoCoverage] ObjectLiteral
src/modules/forum/mappers/postMap.ts:35:12
-       return {
-         total_num_comments: post.totalNumComments,
-         updatedAt: new Date().toString(),
-         title: post.title.value,
-         post_id: post.postId.id.toString(),
-         member_id: post.memberId.id.toString(),
-         text: post.isTextPost() ? post.text.value : null,
-         slug: post.slug.value,
-         points: post.points,
-         type: post.type,
-         link: post.isLinkPost() ? post.link.url : null,
-       };
+       return {};

[NoCoverage] ObjectLiteral
src/modules/forum/mappers/postVoteMap.ts:27:12
-       return {
-         post_vote_id: vote.id.toString(),
-         post_id: vote.postId.id.toString(),
-         member_id: vote.memberId.id.toString(),
-         type: vote.type,
-       };
+       return {};

[Survived] ArithmeticOperator
src/modules/forum/repos/implementations/bootstrap.ts:434:24
-       numDaysAgo.setDate(today.getDate() - daysAgo);
+       numDaysAgo.setDate(today.getDate() + daysAgo);
Tests ran:
    Inject data into db should inject data into db


[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:21:12
-       return {
-         where: {},
-       };
+       return {};

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:28:12
-       return {
-         where: {},
-         include: [
-           { model: models.Post, as: 'Post', where: {} },
-           {
-             model: models.Member,
-             as: 'Member',
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
-           },
-         ],
-         limit: 15,
-         offset: 0,
-       };
+       return {};

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/commentRepo.ts:30:16
-         include: [
-           { model: models.Post, as: 'Post', where: {} },
-           {
-             model: models.Member,
-             as: 'Member',
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
-           },
-         ],
+         include: [],

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:31:9
-           { model: models.Post, as: 'Post', where: {} },
+           {},

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:32:9
-           {
-             model: models.Member,
-             as: 'Member',
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
-           },
+           {},

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/commentRepo.ts:35:20
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
+             include: [],

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:35:21
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
+             include: [{}],

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:48:19
-       const found = !!comment === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:48:19
-       const found = !!comment === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/commentRepo.ts:48:19
-       const found = !!comment === true;
+       const found = !!comment !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:48:19
-       const found = !!comment === true;
+       const found = !comment === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:48:20
-       const found = !!comment === true;
+       const found = !comment === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:48:33
-       const found = !!comment === true;
+       const found = !!comment === false;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:61:9
-       if (!!memberId === true) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:61:9
-       if (!!memberId === true) {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/commentRepo.ts:61:9
-       if (!!memberId === true) {
+       if (!!memberId !== true) {

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:61:9
-       if (!!memberId === true) {
+       if (!memberId === true) {

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:61:10
-       if (!!memberId === true) {
+       if (!memberId === true) {

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:61:24
-       if (!!memberId === true) {
+       if (!!memberId === false) {

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:62:33
-         detailsQuery.include.push({
-           model: this.models.CommentVote,
-           as: 'CommentVotes',
-           where: { member_id: memberId.id.toString() },
-           required: false,
-         });
+         detailsQuery.include.push({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:65:16
-           where: { member_id: memberId.id.toString() },
+           where: {},

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:66:19
-           required: false,
+           required: true,

[NoCoverage] ArrowFunction
src/modules/forum/repos/implementations/commentRepo.ts:71:25
-       return comments.map((c) => CommentDetailsMap.toDomain(c));
+       return comments.map(() => undefined);

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:79:19
-       const found = !!comment === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:79:19
-       const found = !!comment === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/commentRepo.ts:79:19
-       const found = !!comment === true;
+       const found = !!comment !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:79:19
-       const found = !!comment === true;
+       const found = !comment === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:79:20
-       const found = !!comment === true;
+       const found = !comment === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:79:33
-       const found = !!comment === true;
+       const found = !!comment === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:80:9
-       if (!found) throw new Error('Comment not found');
+       if (found) throw new Error('Comment not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:80:9
-       if (!found) throw new Error('Comment not found');
+       if (true) throw new Error('Comment not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:80:9
-       if (!found) throw new Error('Comment not found');
+       if (false) throw new Error('Comment not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:92:9
-       if (!!memberId === true) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:92:9
-       if (!!memberId === true) {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/commentRepo.ts:92:9
-       if (!!memberId === true) {
+       if (!!memberId !== true) {

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:92:9
-       if (!!memberId === true) {
+       if (!memberId === true) {

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:92:10
-       if (!!memberId === true) {
+       if (!memberId === true) {

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:92:24
-       if (!!memberId === true) {
+       if (!!memberId === false) {

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:93:33
-         detailsQuery.include.push({
-           model: this.models.CommentVote,
-           as: 'CommentVotes',
-           where: { member_id: memberId.id.toString() },
-           required: false,
-         });
+         detailsQuery.include.push({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:96:16
-           where: { member_id: memberId.id.toString() },
+           where: {},

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:97:19
-           required: false,
+           required: true,

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:102:19
-       const found = !!comment === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:102:19
-       const found = !!comment === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/commentRepo.ts:102:19
-       const found = !!comment === true;
+       const found = !!comment !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:102:19
-       const found = !!comment === true;
+       const found = !comment === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:102:20
-       const found = !!comment === true;
+       const found = !comment === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:102:33
-       const found = !!comment === true;
+       const found = !!comment === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:103:9
-       if (!found) throw new Error('Comment not found');
+       if (found) throw new Error('Comment not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:103:9
-       if (!found) throw new Error('Comment not found');
+       if (true) throw new Error('Comment not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:103:9
-       if (!found) throw new Error('Comment not found');
+       if (false) throw new Error('Comment not found');

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:109:33
-       return CommentModel.destroy({
-         where: { comment_id: commentId.id.toString() },
-       });
+       return CommentModel.destroy({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:110:14
-         where: { comment_id: commentId.id.toString() },
+         where: {},

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/commentRepo.ts:123:9
-       if (!exists) {
+       if (exists) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:123:9
-       if (!exists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:123:9
-       if (!exists) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:133:67
-         const sequelizeCommentInstance = await CommentModel.findOne({
-           where: { comment_id: comment.commentId.id.toString() },
-         });
+         const sequelizeCommentInstance = await CommentModel.findOne({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/commentRepo.ts:134:16
-           where: { comment_id: comment.commentId.id.toString() },
+           where: {},

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:157:12
-       return commentsCount > 0;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/commentRepo.ts:157:12
-       return commentsCount > 0;
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/commentRepo.ts:157:12
-       return commentsCount > 0;
+       return commentsCount >= 0;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/commentRepo.ts:157:12
-       return commentsCount > 0;
+       return commentsCount <= 0;

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:18:12
-       return {
-         where: {},
-       };
+       return {};

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:30:12
-       return !!vote === true;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:30:12
-       return !!vote === true;
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:30:12
-       return !!vote === true;
+       return !!vote !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:30:12
-       return !!vote === true;
+       return !vote === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:30:13
-       return !!vote === true;
+       return !vote === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:30:23
-       return !!vote === true;
+       return !!vote === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:46:19
-       const isNew = !exists;
+       const isNew = exists;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:49:9
-       if (isNew) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:49:9
-       if (isNew) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:62:37
-       return CommentVoteModel.destroy({
-         where: {
-           comment_id: vote.commentId.id.toString(),
-           member_id: vote.memberId.id.toString(),
-         },
-       });
+       return CommentVoteModel.destroy({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:63:14
-         where: {
-           comment_id: vote.commentId.id.toString(),
-           member_id: vote.memberId.id.toString(),
-         },
+         where: {},

[NoCoverage] ArrowFunction
src/modules/forum/repos/implementations/sequelizeCommentVotesRepo.ts:79:22
-       return votes.map((v) => CommentVoteMap.toDomain(v));
+       return votes.map(() => undefined);

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:20:12
-       return {
-         where: {},
-         include: [{ model: models.BaseUser, as: 'BaseUser' }],
-       };
+       return {};

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:22:16
-         include: [{ model: models.BaseUser, as: 'BaseUser' }],
+         include: [],

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:22:17
-         include: [{ model: models.BaseUser, as: 'BaseUser' }],
+         include: [{}],

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:31:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:31:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:31:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:31:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:31:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:31:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:38:28
-       baseQuery.include.push({
-         model: this.models.Post,
-         as: 'Post',
-         required: true,
-         where: {
-           [Op.or]: {
-             slug: { [Op.eq]: linkOrSlug },
-             link: { [Op.eq]: linkOrSlug },
-           },
-         },
-       });
+       baseQuery.include.push({});

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:41:17
-         required: true,
+         required: false,

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:42:14
-         where: {
-           [Op.or]: {
-             slug: { [Op.eq]: linkOrSlug },
-             link: { [Op.eq]: linkOrSlug },
-           },
-         },
+         where: {},

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:43:18
-           [Op.or]: {
-             slug: { [Op.eq]: linkOrSlug },
-             link: { [Op.eq]: linkOrSlug },
-           },
+           [Op.or]: {},

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:44:17
-             slug: { [Op.eq]: linkOrSlug },
+             slug: {},

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:45:17
-             link: { [Op.eq]: linkOrSlug },
+             link: {},

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:50:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:50:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:50:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:50:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:50:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:50:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:51:9
-       if (!found) throw new Error('Member not found');
+       if (found) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:51:9
-       if (!found) throw new Error('Member not found');
+       if (true) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:51:9
-       if (!found) throw new Error('Member not found');
+       if (false) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:60:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:60:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:60:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:60:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:60:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:60:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:61:9
-       if (!found) throw new Error('Member id not found');
+       if (found) throw new Error('Member id not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:61:9
-       if (!found) throw new Error('Member id not found');
+       if (true) throw new Error('Member id not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:61:9
-       if (!found) throw new Error('Member id not found');
+       if (false) throw new Error('Member id not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:70:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:70:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:70:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:70:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:70:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:70:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:71:9
-       if (!found) throw new Error('Member not found');
+       if (found) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:71:9
-       if (!found) throw new Error('Member not found');
+       if (true) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:71:9
-       if (!found) throw new Error('Member not found');
+       if (false) throw new Error('Member not found');

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:78:28
-       baseQuery.include.push({
-         model: this.models.base_user,
-         as: 'base_user',
-         select: 'user_email',
-         required: true,
-         where: {
-           username: username,
-         },
-       });
+       baseQuery.include.push({});

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:82:17
-         required: true,
+         required: false,

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:83:14
-         where: {
-           username: username,
-         },
+         where: {},

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:88:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:88:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:88:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:88:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:88:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:88:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:89:9
-       if (!found) throw new Error('Member not found');
+       if (found) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:89:9
-       if (!found) throw new Error('Member not found');
+       if (true) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:89:9
-       if (!found) throw new Error('Member not found');
+       if (false) throw new Error('Member not found');

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:102:41
-       const count = await PostModel.count({
-         where: {
-           member_id: memberId,
-         },
-       });
+       const count = await PostModel.count({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:103:14
-         where: {
-           member_id: memberId,
-         },
+         where: {},

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:114:44
-       const count = await commentModel.count({
-         where: {
-           member_id: memberId,
-         },
-       });
+       const count = await commentModel.count({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:115:14
-         where: {
-           member_id: memberId,
-         },
+         where: {},

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:133:28
-       baseQuery.include.push({
-         model: this.models.base_user,
-         as: 'member',
-         select: 'member_id',
-         required: true,
-         where: {
-           member_base_id: userId,
-         },
-       });
+       baseQuery.include.push({});

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:137:17
-         required: true,
+         required: false,

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:138:14
-         where: {
-           member_base_id: userId,
-         },
+         where: {},

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:143:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:143:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:143:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:143:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:143:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:143:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:144:9
-       if (!found) throw new Error('Member not found');
+       if (found) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:144:9
-       if (!found) throw new Error('Member not found');
+       if (true) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:144:9
-       if (!found) throw new Error('Member not found');
+       if (false) throw new Error('Member not found');

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:151:34
-       baseQuery.include[0].where = {
-         username: username,
-       };
+       baseQuery.include[0].where = {};

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:155:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:155:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:155:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:155:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:155:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:155:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:156:9
-       if (!found) throw new Error('Member not found');
+       if (found) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:156:9
-       if (!found) throw new Error('Member not found');
+       if (true) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:156:9
-       if (!found) throw new Error('Member not found');
+       if (false) throw new Error('Member not found');

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:164:34
-       baseQuery.include[0].where = {
-         username: username,
-       };
+       baseQuery.include[0].where = {};

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:168:19
-       const found = !!member === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:168:19
-       const found = !!member === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:168:19
-       const found = !!member === true;
+       const found = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:168:19
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:168:20
-       const found = !!member === true;
+       const found = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:168:32
-       const found = !!member === true;
+       const found = !!member === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:169:9
-       if (!found) throw new Error('Member not found');
+       if (found) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:169:9
-       if (!found) throw new Error('Member not found');
+       if (true) throw new Error('Member not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:169:9
-       if (!found) throw new Error('Member not found');
+       if (false) throw new Error('Member not found');

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:177:9
-       if (!exists) {
+       if (exists) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:177:9
-       if (!exists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizeMemberRepo.ts:177:9
-       if (!exists) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:28:12
-       return {
-         where: {},
-         include: [],
-       };
+       return {};

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:30:16
-         include: [],
+         include: ["Stryker was here"],

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:36:12
-       return {
-         where: {},
-         include: [
-           {
-             model: models.Member,
-             as: 'Member',
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
-           },
-         ],
-         limit: 15,
-         offset: 0,
-       };
+       return {};

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:38:16
-         include: [
-           {
-             model: models.Member,
-             as: 'Member',
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
-           },
-         ],
+         include: [],

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:39:9
-           {
-             model: models.Member,
-             as: 'Member',
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
-           },
+           {},

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:42:20
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
+             include: [],

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:42:21
-             include: [{ model: models.BaseUser, as: 'BaseUser' }],
+             include: [{}],

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:56:19
-       const found = !!post === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:56:19
-       const found = !!post === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizePostRepo.ts:56:19
-       const found = !!post === true;
+       const found = !!post !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:56:19
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:56:20
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:56:30
-       const found = !!post === true;
+       const found = !!post === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:57:9
-       if (!found) throw new Error('Post not found');
+       if (found) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:57:9
-       if (!found) throw new Error('Post not found');
+       if (true) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:57:9
-       if (!found) throw new Error('Post not found');
+       if (false) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:76:19
-       const found = !!post === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:76:19
-       const found = !!post === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizePostRepo.ts:76:19
-       const found = !!post === true;
+       const found = !!post !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:76:19
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:76:20
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:76:30
-       const found = !!post === true;
+       const found = !!post === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:77:9
-       if (!found) throw new Error('Post not found');
+       if (found) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:77:9
-       if (!found) throw new Error('Post not found');
+       if (true) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:77:9
-       if (!found) throw new Error('Post not found');
+       if (false) throw new Error('Post not found');

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:86:29
-       detailsQuery['order'] = [['createdAt', 'DESC']];
+       detailsQuery['order'] = [];

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:86:30
-       detailsQuery['order'] = [['createdAt', 'DESC']];
+       detailsQuery['order'] = [[]];

[NoCoverage] ArrowFunction
src/modules/forum/repos/implementations/sequelizePostRepo.ts:89:22
-       return posts.map((p) => PostDetailsMap.toDomain(p));
+       return posts.map(() => undefined);

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:96:29
-       detailsQuery['order'] = [['points', 'DESC']];
+       detailsQuery['order'] = [];

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:96:30
-       detailsQuery['order'] = [['points', 'DESC']];
+       detailsQuery['order'] = [[]];

[NoCoverage] ArrowFunction
src/modules/forum/repos/implementations/sequelizePostRepo.ts:99:22
-       return posts.map((p) => PostDetailsMap.toDomain(p));
+       return posts.map(() => undefined);

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:111:29
-       detailsQuery['order'] = [['points', 'ASC']];
+       detailsQuery['order'] = [];

[NoCoverage] ArrayDeclaration
src/modules/forum/repos/implementations/sequelizePostRepo.ts:111:30
-       detailsQuery['order'] = [['points', 'ASC']];
+       detailsQuery['order'] = [[]];

[NoCoverage] ArrowFunction
src/modules/forum/repos/implementations/sequelizePostRepo.ts:114:22
-       return posts.map((p) => PostDetailsMap.toDomain(p));
+       return posts.map(() => undefined);

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:122:19
-       const found = !!post === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:122:19
-       const found = !!post === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizePostRepo.ts:122:19
-       const found = !!post === true;
+       const found = !!post !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:122:19
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:122:20
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:122:30
-       const found = !!post === true;
+       const found = !!post === false;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:123:9
-       if (!found) throw new Error('Post not found');
+       if (found) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:123:9
-       if (!found) throw new Error('Post not found');
+       if (true) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:123:9
-       if (!found) throw new Error('Post not found');
+       if (false) throw new Error('Post not found');

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:131:19
-       const found = !!post === true;
+       const found = true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:131:19
-       const found = !!post === true;
+       const found = false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizePostRepo.ts:131:19
-       const found = !!post === true;
+       const found = !!post !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:131:19
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:131:20
-       const found = !!post === true;
+       const found = !post === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:131:30
-       const found = !!post === true;
+       const found = !!post === false;

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:137:30
-       return PostModel.destroy({ where: { post_id: postId.id.toString() } });
+       return PostModel.destroy({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:137:39
-       return PostModel.destroy({ where: { post_id: postId.id.toString() } });
+       return PostModel.destroy({ where: {} });

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:151:23
-       const isNewPost = !exists;
+       const isNewPost = exists;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:154:9
-       if (isNewPost) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:154:9
-       if (isNewPost) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:169:48
-         await PostModel.update(rawSequelizePost, {
-           // To make sure your hooks always run, make sure to include this in
-           // the query
-           individualHooks: true,
-           hooks: true,
-           where: { post_id: post.postId.id.toString() },
-         });
+         await PostModel.update(rawSequelizePost, {});

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:172:26
-           individualHooks: true,
+           individualHooks: false,

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:173:16
-           hooks: true,
+           hooks: false,

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostRepo.ts:174:16
-           where: { post_id: post.postId.id.toString() },
+           where: {},

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:189:12
-       return postsCount > 0;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostRepo.ts:189:12
-       return postsCount > 0;
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizePostRepo.ts:189:12
-       return postsCount > 0;
+       return postsCount >= 0;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizePostRepo.ts:189:12
-       return postsCount > 0;
+       return postsCount <= 0;

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:17:12
-       return {
-         where: {},
-       };
+       return {};

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:29:12
-       return !!vote === true;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:29:12
-       return !!vote === true;
+       return false;

[NoCoverage] EqualityOperator
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:29:12
-       return !!vote === true;
+       return !!vote !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:29:12
-       return !!vote === true;
+       return !vote === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:29:13
-       return !!vote === true;
+       return !vote === true;

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:29:23
-       return !!vote === true;
+       return !!vote === false;

[NoCoverage] ArrowFunction
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:38:22
-       return votes.map((v) => PostVoteMap.toDomain(v));
+       return votes.map(() => undefined);

[NoCoverage] BooleanLiteral
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:46:9
-       if (!exists) {
+       if (exists) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:46:9
-       if (!exists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:46:9
-       if (!exists) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:59:34
-       return PostVoteModel.destroy({
-         where: {
-           post_id: vote.postId.id.toString(),
-           member_id: vote.memberId.id.toString(),
-         },
-       });
+       return PostVoteModel.destroy({});

[NoCoverage] ObjectLiteral
src/modules/forum/repos/implementations/sequelizePostVotesRepo.ts:60:14
-         where: {
-           post_id: vote.postId.id.toString(),
-           member_id: vote.memberId.id.toString(),
-         },
+         where: {},

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/downvoteComment/DownvoteComment.ts:77:11
-         if (downVoteCommentResult.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/downvoteComment/DownvoteComment.ts:77:11
-         if (downVoteCommentResult.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/downvoteComment/DownvoteCommentController.ts:27:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/downvoteComment/DownvoteCommentController.ts:27:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/downvoteComment/DownvoteCommentController.ts:33:11
-             case DownvoteCommentErrors.CommentNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case DownvoteCommentErrors.CommentNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/downvoteComment/DownvoteCommentController.ts:35:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/downvoteComment/DownvoteCommentErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/downvoteComment/DownvoteCommentErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/downvoteComment/DownvoteCommentErrors.ts:23:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:33:31
-         const isAuthenticated = !!req.userId === true;
+         const isAuthenticated = true;

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:33:31
-         const isAuthenticated = !!req.userId === true;
+         const isAuthenticated = false;

[NoCoverage] EqualityOperator
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:33:31
-         const isAuthenticated = !!req.userId === true;
+         const isAuthenticated = !!req.userId !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:33:31
-         const isAuthenticated = !!req.userId === true;
+         const isAuthenticated = !req.userId === true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:33:32
-         const isAuthenticated = !!req.userId === true;
+         const isAuthenticated = !req.userId === true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:33:48
-         const isAuthenticated = !!req.userId === true;
+         const isAuthenticated = !!req.userId === false;

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:35:11
-         if (isAuthenticated) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentId.ts:35:11
-         if (isAuthenticated) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentIdController.ts:31:11
-             case GetCommentByCommentIdErrors.CommentNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case GetCommentByCommentIdErrors.CommentNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentIdController.ts:33:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentByCommentId/GetCommentByCommentIdErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:29:29
-       const isAuthenticated = !!req.userId === true;
+       const isAuthenticated = true;

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:29:29
-       const isAuthenticated = !!req.userId === true;
+       const isAuthenticated = false;

[NoCoverage] EqualityOperator
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:29:29
-       const isAuthenticated = !!req.userId === true;
+       const isAuthenticated = !!req.userId !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:29:29
-       const isAuthenticated = !!req.userId === true;
+       const isAuthenticated = !req.userId === true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:29:30
-       const isAuthenticated = !!req.userId === true;
+       const isAuthenticated = !req.userId === true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:29:46
-       const isAuthenticated = !!req.userId === true;
+       const isAuthenticated = !!req.userId === false;

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:31:9
-       if (isAuthenticated) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlug.ts:31:9
-       if (isAuthenticated) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlugController.ts:31:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] ArrowFunction
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlugController.ts:37:40
-             comments: commentDetails.map((c) => CommentDetailsMap.toDTO(c)),
+             comments: commentDetails.map(() => undefined),

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/getCommentsByPostSlug/GetCommentsByPostSlugErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:86:11
-         if (slugOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:86:11
-         if (slugOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:99:13
-           if (result.isLeft()) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:99:13
-           if (result.isLeft()) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:112:11
-         if (commentTextOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:112:11
-         if (commentTextOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:123:11
-         if (replyToCommentResult.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToComment.ts:123:11
-         if (replyToCommentResult.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentController.ts:30:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentController.ts:30:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentController.ts:34:11
-             case ReplyToCommentErrors.PostNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case ReplyToCommentErrors.PostNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentController.ts:36:11
-             case ReplyToCommentErrors.CommentNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case ReplyToCommentErrors.CommentNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentController.ts:38:11
-             case ReplyToCommentErrors.MemberNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case ReplyToCommentErrors.MemberNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentController.ts:40:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/replyToComment/ReplyToCommentErrors.ts:23:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPost.ts:35:11
-         if (slugOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPost.ts:35:11
-         if (slugOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPost.ts:54:11
-         if (commentTextOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPost.ts:54:11
-         if (commentTextOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPost.ts:64:11
-         if (commentOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPost.ts:64:11
-         if (commentOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPostController.ts:29:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPostController.ts:29:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPostController.ts:33:11
-             case ReplyToPostErrors.PostNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case ReplyToPostErrors.PostNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/replyToPost/ReplyToPostController.ts:35:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/replyToPost/ReplyToPostErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/upvoteComment/UpvoteComment.ts:75:11
-         if (upvoteCommentResult.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/upvoteComment/UpvoteComment.ts:75:11
-         if (upvoteCommentResult.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/upvoteComment/UpvoteCommentController.ts:27:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/upvoteComment/UpvoteCommentController.ts:27:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/upvoteComment/UpvoteCommentController.ts:33:11
-             case UpvoteCommentErrors.CommentNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case UpvoteCommentErrors.CommentNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/comments/upvoteComment/UpvoteCommentController.ts:35:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/upvoteComment/UpvoteCommentErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/upvoteComment/UpvoteCommentErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/comments/upvoteComment/UpvoteCommentErrors.ts:23:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/createMember/CreateMember.ts:42:30
-           const memberExists = !!member === true;
+           const memberExists = true;

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/createMember/CreateMember.ts:42:30
-           const memberExists = !!member === true;
+           const memberExists = false;

[NoCoverage] EqualityOperator
src/modules/forum/useCases/members/createMember/CreateMember.ts:42:30
-           const memberExists = !!member === true;
+           const memberExists = !!member !== true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/members/createMember/CreateMember.ts:42:30
-           const memberExists = !!member === true;
+           const memberExists = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/members/createMember/CreateMember.ts:42:31
-           const memberExists = !!member === true;
+           const memberExists = !member === true;

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/members/createMember/CreateMember.ts:42:43
-           const memberExists = !!member === true;
+           const memberExists = !!member === false;

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/createMember/CreateMember.ts:44:13
-           if (memberExists) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/createMember/CreateMember.ts:44:13
-           if (memberExists) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/createMember/CreateMember.ts:55:11
-         if (memberOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/createMember/CreateMember.ts:55:11
-         if (memberOrError.isFailure) {
+         if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/members/createMember/CreateMemberErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/members/createMember/CreateMemberErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/getMemberByUserName/GetMemberByUserNameController.ts:30:11
-             case GetMemberByUserNameErrors.MemberNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case GetMemberByUserNameErrors.MemberNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/members/getMemberByUserName/GetMemberByUserNameController.ts:32:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/members/getMemberByUserName/GetMemberByUserNameErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:48:11
-         if (titleOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:48:11
-         if (titleOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:52:11
-         if (request.postType === 'text') {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:52:11
-         if (request.postType === 'text') {
+         if (false) {

[NoCoverage] EqualityOperator
src/modules/forum/useCases/post/createPost/CreatePost.ts:52:11
-         if (request.postType === 'text') {
+         if (request.postType !== 'text') {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:55:13
-           if (textOrError.isFailure) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:55:13
-           if (textOrError.isFailure) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:63:13
-           if (linkOrError.isFailure) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:63:13
-           if (linkOrError.isFailure) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:73:11
-         if (slugOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:73:11
-         if (slugOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:90:11
-         if (postOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePost.ts:90:11
-         if (postOrError.isFailure) {
+         if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/createPost/CreatePostController.ts:22:13
-         text: !!req.body.text ? TextUtils.sanitize(req.body.text) : null,
+         text: !req.body.text ? TextUtils.sanitize(req.body.text) : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/createPost/CreatePostController.ts:22:14
-         text: !!req.body.text ? TextUtils.sanitize(req.body.text) : null,
+         text: !req.body.text ? TextUtils.sanitize(req.body.text) : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/createPost/CreatePostController.ts:25:13
-         link: !!req.body.link ? TextUtils.sanitize(req.body.link) : null,
+         link: !req.body.link ? TextUtils.sanitize(req.body.link) : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/createPost/CreatePostController.ts:25:14
-         link: !!req.body.link ? TextUtils.sanitize(req.body.link) : null,
+         link: !req.body.link ? TextUtils.sanitize(req.body.link) : null,

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePostController.ts:31:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePostController.ts:31:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePostController.ts:35:11
-             case CreatePostErrors.MemberDoesntExistError:
-               return this.notFound(res, error.getErrorValue().message);
+             case CreatePostErrors.MemberDoesntExistError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/createPost/CreatePostController.ts:37:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/createPost/CreatePostErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/downvotePost/DownvotePost.ts:62:11
-         if (downvotePostResult.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/downvotePost/DownvotePost.ts:62:11
-         if (downvotePostResult.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/downvotePost/DownvotePostController.ts:27:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/downvotePost/DownvotePostController.ts:27:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/downvotePost/DownvotePostController.ts:32:11
-             case DownvotePostErrors.PostNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case DownvotePostErrors.PostNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/downvotePost/DownvotePostController.ts:34:11
-             case DownvotePostErrors.AlreadyDownvotedError:
-               return this.conflict(res, error.getErrorValue().message);
+             case DownvotePostErrors.AlreadyDownvotedError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/downvotePost/DownvotePostController.ts:36:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/downvotePost/DownvotePostErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/downvotePost/DownvotePostErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/downvotePost/DownvotePostErrors.ts:23:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/editPost/EditPost.ts:26:9
-       if (has(request, 'text')) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/editPost/EditPost.ts:26:9
-       if (has(request, 'text')) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/editPost/EditPost.ts:53:9
-       if (has(request, 'link')) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/editPost/EditPost.ts:53:9
-       if (has(request, 'link')) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/editPost/EditPostErrors.ts:8:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/editPost/EditPostErrors.ts:16:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/editPost/EditPostErrors.ts:24:13
-         super(false, {
+         super(true, {

[NoCoverage] ObjectLiteral
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:18:44
-       const dto: GetPopularPostsRequestDTO = {
-         offset: req.query.offset,
-         userId: !!req.decoded === true ? req.decoded.userId : null,
-       };
+       const dto: GetPopularPostsRequestDTO = {};

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: true ? req.decoded.userId : null,

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: false ? req.decoded.userId : null,

[NoCoverage] EqualityOperator
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !!req.decoded !== true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !req.decoded === true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:20:16
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !req.decoded === true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:20:33
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !!req.decoded === false ? req.decoded.userId : null,

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:30:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] ArrowFunction
src/modules/forum/useCases/post/getPopularPosts/GetPopularPostsController.ts:36:34
-             posts: postDetails.map((d) => PostDetailsMap.toDTO(d)),
+             posts: postDetails.map(() => undefined),

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getPostBySlug/GetPostBySlugController.ts:29:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getPostBySlug/GetPostBySlugErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ObjectLiteral
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:18:43
-       const dto: GetRecentPostsRequestDTO = {
-         offset: req.query.offset,
-         userId: !!req.decoded === true ? req.decoded.userId : null,
-       };
+       const dto: GetRecentPostsRequestDTO = {};

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: true ? req.decoded.userId : null,

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: false ? req.decoded.userId : null,

[NoCoverage] EqualityOperator
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !!req.decoded !== true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !req.decoded === true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:20:16
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !req.decoded === true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:20:33
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !!req.decoded === false ? req.decoded.userId : null,

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:30:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] ArrowFunction
src/modules/forum/useCases/post/getRecentPosts/GetRecentPostsController.ts:36:34
-             posts: postDetails.map((d) => PostDetailsMap.toDTO(d)),
+             posts: postDetails.map(() => undefined),

[NoCoverage] ObjectLiteral
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:18:46
-       const dto: GetUnpopularPostsRequestDTO = {
-         offset: req.query.offset,
-         userId: !!req.decoded === true ? req.decoded.userId : null,
-       };
+       const dto: GetUnpopularPostsRequestDTO = {};

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: true ? req.decoded.userId : null,

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: false ? req.decoded.userId : null,

[NoCoverage] EqualityOperator
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !!req.decoded !== true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:20:15
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !req.decoded === true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:20:16
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !req.decoded === true ? req.decoded.userId : null,

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:20:33
-         userId: !!req.decoded === true ? req.decoded.userId : null,
+         userId: !!req.decoded === false ? req.decoded.userId : null,

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:30:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] ArrowFunction
src/modules/forum/useCases/post/getUnpopularPosts/GetUnpopularPostsController.ts:36:34
-             posts: postDetails.map((d) => PostDetailsMap.toDTO(d)),
+             posts: postDetails.map(() => undefined),

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/updatePostStats/UpdatePostStatsErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/upvotePost/UpvotePost.ts:62:11
-         if (upvotePostResult.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/upvotePost/UpvotePost.ts:62:11
-         if (upvotePostResult.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/upvotePost/UpvotePostController.ts:27:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/upvotePost/UpvotePostController.ts:27:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/upvotePost/UpvotePostController.ts:32:11
-             case UpvotePostErrors.PostNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case UpvotePostErrors.PostNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/upvotePost/UpvotePostController.ts:34:11
-             case UpvotePostErrors.AlreadyUpvotedError:
-               return this.conflict(res, error.getErrorValue().message);
+             case UpvotePostErrors.AlreadyUpvotedError:

[NoCoverage] ConditionalExpression
src/modules/forum/useCases/post/upvotePost/UpvotePostController.ts:36:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/upvotePost/UpvotePostErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/upvotePost/UpvotePostErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/forum/useCases/post/upvotePost/UpvotePostErrors.ts:23:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:27:12
-       return date > this.expiry;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:27:12
-       return date > this.expiry;
+       return false;

[NoCoverage] EqualityOperator
src/modules/users/domain/emailVerificationToken.ts:27:12
-       return date > this.expiry;
+       return date >= this.expiry;

[NoCoverage] EqualityOperator
src/modules/users/domain/emailVerificationToken.ts:27:12
-       return date > this.expiry;
+       return date <= this.expiry;

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:31:12
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return true;

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:31:12
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return false;

[NoCoverage] LogicalOperator
src/modules/users/domain/emailVerificationToken.ts:31:12
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return this.token.toUpperCase() === code.toUpperCase() || !this.isCodeExpired();

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:31:12
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return true && !this.isCodeExpired();

[NoCoverage] EqualityOperator
src/modules/users/domain/emailVerificationToken.ts:31:12
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return this.token.toUpperCase() !== code.toUpperCase() && !this.isCodeExpired();

[NoCoverage] MethodExpression
src/modules/users/domain/emailVerificationToken.ts:31:12
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return this.token.toLowerCase() === code.toUpperCase() && !this.isCodeExpired();

[NoCoverage] MethodExpression
src/modules/users/domain/emailVerificationToken.ts:31:41
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return this.token.toUpperCase() === code.toLowerCase() && !this.isCodeExpired();

[NoCoverage] BooleanLiteral
src/modules/users/domain/emailVerificationToken.ts:31:63
-       return this.token.toUpperCase() === code.toUpperCase() && !this.isCodeExpired();
+       return this.token.toUpperCase() === code.toUpperCase() && this.isCodeExpired();

[NoCoverage] ObjectLiteral
src/modules/users/domain/emailVerificationToken.ts:35:27
-       return JSON.stringify({
-         token: this.token,
-         expiry: this.expiry,
-       });
+       return JSON.stringify({});

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:46:9
-       if (rawToken) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:46:9
-       if (rawToken) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/emailVerificationToken.ts:61:37
-       for (let i = this.numberDigits; i > 0; --i) {
+       for (let i = this.numberDigits; false; --i) {

[NoCoverage] EqualityOperator
src/modules/users/domain/emailVerificationToken.ts:61:37
-       for (let i = this.numberDigits; i > 0; --i) {
+       for (let i = this.numberDigits; i >= 0; --i) {

[NoCoverage] EqualityOperator
src/modules/users/domain/emailVerificationToken.ts:61:37
-       for (let i = this.numberDigits; i > 0; --i) {
+       for (let i = this.numberDigits; i <= 0; --i) {

[NoCoverage] UpdateOperator
src/modules/users/domain/emailVerificationToken.ts:61:44
-       for (let i = this.numberDigits; i > 0; --i) {
+       for (let i = this.numberDigits; i > 0; ++i) {

[NoCoverage] ArithmeticOperator
src/modules/users/domain/emailVerificationToken.ts:62:33
-         token += chars[Math.round(Math.random() * (chars.length - 1))];
+         token += chars[Math.round(Math.random() / (chars.length - 1))];

[NoCoverage] ArithmeticOperator
src/modules/users/domain/emailVerificationToken.ts:62:50
-         token += chars[Math.round(Math.random() * (chars.length - 1))];
+         token += chars[Math.round(Math.random() * (chars.length + 1))];

[NoCoverage] MethodExpression
src/modules/users/domain/emailVerificationToken.ts:65:13
-       token = token.toUpperCase();
+       token = token.toLowerCase();

[NoCoverage] ArithmeticOperator
src/modules/users/domain/emailVerificationToken.ts:69:22
-       expires.setHours(expires.getHours() + this.tokenExpiryHours);
+       expires.setHours(expires.getHours() - this.tokenExpiryHours);

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:68:12
-       return !!this.props.accessToken && !!this.props.refreshToken;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:68:12
-       return !!this.props.accessToken && !!this.props.refreshToken;
+       return false;

[NoCoverage] LogicalOperator
src/modules/users/domain/user.ts:68:12
-       return !!this.props.accessToken && !!this.props.refreshToken;
+       return !!this.props.accessToken || !!this.props.refreshToken;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:68:12
-       return !!this.props.accessToken && !!this.props.refreshToken;
+       return !this.props.accessToken && !!this.props.refreshToken;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:68:13
-       return !!this.props.accessToken && !!this.props.refreshToken;
+       return !this.props.accessToken && !!this.props.refreshToken;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:68:40
-       return !!this.props.accessToken && !!this.props.refreshToken;
+       return !!this.props.accessToken && !this.props.refreshToken;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:68:41
-       return !!this.props.accessToken && !!this.props.refreshToken;
+       return !!this.props.accessToken && !this.props.refreshToken;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:79:9
-       if (!this.props.isDeleted) {
+       if (this.props.isDeleted) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:79:9
-       if (!this.props.isDeleted) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:79:9
-       if (!this.props.isDeleted) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:81:30
-         this.props.isDeleted = true;
+         this.props.isDeleted = false;

[NoCoverage] ArrayDeclaration
src/modules/users/domain/user.ts:89:58
-       const guardResult = Guard.againstNullOrUndefinedBulk([
-         { argument: props.username, argumentName: 'username' },
-         { argument: props.email, argumentName: 'email' },
-       ]);
+       const guardResult = Guard.againstNullOrUndefinedBulk([]);

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:94:9
-       if (guardResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:94:9
-       if (guardResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:98:23
-       const isNewUser = !!id === false;
+       const isNewUser = true;

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:98:23
-       const isNewUser = !!id === false;
+       const isNewUser = false;

[NoCoverage] EqualityOperator
src/modules/users/domain/user.ts:98:23
-       const isNewUser = !!id === false;
+       const isNewUser = !!id !== false;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:98:23
-       const isNewUser = !!id === false;
+       const isNewUser = !id === false;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:98:24
-       const isNewUser = !!id === false;
+       const isNewUser = !id === false;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:98:32
-       const isNewUser = !!id === false;
+       const isNewUser = !!id === true;

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:102:56
-           isDeleted: props.isDeleted ? props.isDeleted : false,
+           isDeleted: props.isDeleted ? props.isDeleted : true,

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:103:74
-           isEmailVerified: props.isEmailVerified ? props.isEmailVerified : false,
+           isEmailVerified: props.isEmailVerified ? props.isEmailVerified : true,

[NoCoverage] BooleanLiteral
src/modules/users/domain/user.ts:104:62
-           isAdminUser: props.isAdminUser ? props.isAdminUser : false,
+           isAdminUser: props.isAdminUser ? props.isAdminUser : true,

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:109:9
-       if (isNewUser) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/user.ts:109:9
-       if (isNewUser) {
+       if (false) {

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"](\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\S@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+))|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"])*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\S@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|("."))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[^0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[^0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[^0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[^0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([^a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]))$/;

[NoCoverage] Regex
src/modules/users/domain/userEmail.ts:19:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[^a-zA-Z]{2,}))$/;

[NoCoverage] MethodExpression
src/modules/users/domain/userEmail.ts:24:12
-       return email.trim().toLowerCase();
+       return email.trim().toUpperCase();

[NoCoverage] MethodExpression
src/modules/users/domain/userEmail.ts:24:12
-       return email.trim().toLowerCase();
+       return email.toLowerCase();

[NoCoverage] BooleanLiteral
src/modules/users/domain/userEmail.ts:28:9
-       if (!this.isValidEmail(email)) {
+       if (this.isValidEmail(email)) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userEmail.ts:28:9
-       if (!this.isValidEmail(email)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userEmail.ts:28:9
-       if (!this.isValidEmail(email)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userName.ts:23:9
-       if (usernameResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userName.ts:23:9
-       if (usernameResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userName.ts:28:9
-       if (minLengthResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userName.ts:28:9
-       if (minLengthResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userName.ts:33:9
-       if (maxLengthResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userName.ts:33:9
-       if (maxLengthResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:23:12
-       return password.length >= this.minLength;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:23:12
-       return password.length >= this.minLength;
+       return false;

[NoCoverage] EqualityOperator
src/modules/users/domain/userPassword.ts:23:12
-       return password.length >= this.minLength;
+       return password.length > this.minLength;

[NoCoverage] EqualityOperator
src/modules/users/domain/userPassword.ts:23:12
-       return password.length >= this.minLength;
+       return password.length < this.minLength;

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:33:9
-       if (this.isAlreadyHashed()) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:33:9
-       if (this.isAlreadyHashed()) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:37:14
-         return this.props.value === plainTextPassword;
+         return true;

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:37:14
-         return this.props.value === plainTextPassword;
+         return false;

[NoCoverage] EqualityOperator
src/modules/users/domain/userPassword.ts:37:14
-         return this.props.value === plainTextPassword;
+         return this.props.value !== plainTextPassword;

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:44:13
-           if (err) return resolve(false);
+           if (true) return resolve(false);

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:44:13
-           if (err) return resolve(false);
+           if (false) return resolve(false);

[NoCoverage] BooleanLiteral
src/modules/users/domain/userPassword.ts:44:33
-           if (err) return resolve(false);
+           if (err) return resolve(true);

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:57:13
-           if (err) return reject(err);
+           if (true) return reject(err);

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:57:13
-           if (err) return reject(err);
+           if (false) return reject(err);

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:65:11
-         if (this.isAlreadyHashed()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:65:11
-         if (this.isAlreadyHashed()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:76:9
-       if (propsResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:76:9
-       if (propsResult.isFailure) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/domain/userPassword.ts:79:11
-         if (!props.hashed) {
+         if (props.hashed) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:79:11
-         if (!props.hashed) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:79:11
-         if (!props.hashed) {
+         if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/domain/userPassword.ts:80:13
-           if (!this.isAppropriateLength(props.value)) {
+           if (this.isAppropriateLength(props.value)) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:80:13
-           if (!this.isAppropriateLength(props.value)) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:80:13
-           if (!this.isAppropriateLength(props.value)) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:88:19
-             hashed: !!props.hashed === true,
+             hashed: true,

[NoCoverage] ConditionalExpression
src/modules/users/domain/userPassword.ts:88:19
-             hashed: !!props.hashed === true,
+             hashed: false,

[NoCoverage] EqualityOperator
src/modules/users/domain/userPassword.ts:88:19
-             hashed: !!props.hashed === true,
+             hashed: !!props.hashed !== true,

[NoCoverage] BooleanLiteral
src/modules/users/domain/userPassword.ts:88:19
-             hashed: !!props.hashed === true,
+             hashed: !props.hashed === true,

[NoCoverage] BooleanLiteral
src/modules/users/domain/userPassword.ts:88:20
-             hashed: !!props.hashed === true,
+             hashed: !props.hashed === true,

[NoCoverage] BooleanLiteral
src/modules/users/domain/userPassword.ts:88:38
-             hashed: !!props.hashed === true,
+             hashed: !!props.hashed === false,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:16:22
-   userRouter.post('/', (req, res) =>
-     createUserController.execute(req, res),
+   userRouter.post('/', () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:23:3
-     (req, res) => getCurrentUserController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:26:27
-   userRouter.post('/login', (req, res) =>
-     loginController.execute(req, res),
+   userRouter.post('/login', () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:33:3
-     (req, res) => logoutController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:36:35
-   userRouter.post('/token/refresh', (req, res) =>
-     refreshAccessTokenController.execute(req, res),
+   userRouter.post('/token/refresh', () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:43:3
-     (req, res) => deleteUserController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:49:3
-     (req, res) =>
-       getUserByUserNameController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:55:3
-     (req, res) =>
-       getPostsCommentsByUsernameController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:62:3
-     (req, res) =>
-       getUserWithMoreCommentsPostsController.execute(req, res),
+     () => undefined,

[NoCoverage] ArrowFunction
src/modules/users/infra/http/routes/index.ts:69:3
-     (req, res) => getStatisticsByDateController.execute(req, res),
+     () => undefined,

[NoCoverage] BooleanLiteral
src/modules/users/mappers/userMap.ts:22:89
-       const userPasswordOrError = UserPassword.create({ value: raw.user_password, hashed: true });
+       const userPasswordOrError = UserPassword.create({ value: raw.user_password, hashed: false });

[NoCoverage] ConditionalExpression
src/modules/users/mappers/userMap.ts:44:9
-       if (!!user.password === true) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/mappers/userMap.ts:44:9
-       if (!!user.password === true) {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/users/mappers/userMap.ts:44:9
-       if (!!user.password === true) {
+       if (!!user.password !== true) {

[NoCoverage] BooleanLiteral
src/modules/users/mappers/userMap.ts:44:9
-       if (!!user.password === true) {
+       if (!user.password === true) {

[NoCoverage] BooleanLiteral
src/modules/users/mappers/userMap.ts:44:10
-       if (!!user.password === true) {
+       if (!user.password === true) {

[NoCoverage] BooleanLiteral
src/modules/users/mappers/userMap.ts:44:29
-       if (!!user.password === true) {
+       if (!!user.password === false) {

[NoCoverage] ConditionalExpression
src/modules/users/mappers/userMap.ts:45:11
-         if (user.password.isAlreadyHashed()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/mappers/userMap.ts:45:11
-         if (user.password.isAlreadyHashed()) {
+         if (false) {

[NoCoverage] ObjectLiteral
src/modules/users/mappers/userMap.ts:52:12
-       return {
-         base_user_id: user.userId.id.toString(),
-         user_email: user.email.value,
-         is_email_verified: user.isEmailVerified,
-         username: user.username.value,
-         user_password: password,
-         is_admin_user: user.isAdminUser,
-         is_deleted: user.isDeleted,
-       };
+       return {};

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:17:50
-       const baseUser = await BaseUserModel.findOne({
-         where: {
-           user_email: userEmail.value,
-         },
-       });
+       const baseUser = await BaseUserModel.findOne({});

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:18:14
-         where: {
-           user_email: userEmail.value,
-         },
+         where: {},

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:22:12
-       return !!baseUser === true;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:22:12
-       return !!baseUser === true;
+       return false;

[NoCoverage] EqualityOperator
src/modules/users/repos/implementations/sequelizeUserRepo.ts:22:12
-       return !!baseUser === true;
+       return !!baseUser !== true;

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:22:12
-       return !!baseUser === true;
+       return !baseUser === true;

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:22:13
-       return !!baseUser === true;
+       return !baseUser === true;

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:22:27
-       return !!baseUser === true;
+       return !!baseUser === false;

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:27:50
-       const baseUser = await BaseUserModel.findOne({
-         where: {
-           username: userName instanceof UserName ? (<UserName>userName).value : userName,
-         },
-       });
+       const baseUser = await BaseUserModel.findOne({});

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:28:14
-         where: {
-           username: userName instanceof UserName ? (<UserName>userName).value : userName,
-         },
+         where: {},

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:32:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (true) throw new Error('User not found.');

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:32:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (false) throw new Error('User not found.');

[NoCoverage] EqualityOperator
src/modules/users/repos/implementations/sequelizeUserRepo.ts:32:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!!baseUser !== false) throw new Error('User not found.');

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:32:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!baseUser === false) throw new Error('User not found.');

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:32:10
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!baseUser === false) throw new Error('User not found.');

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:32:24
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!!baseUser === true) throw new Error('User not found.');

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:38:50
-       const baseUser = await BaseUserModel.findOne({
-         where: {
-           base_user_id: userId,
-         },
-       });
+       const baseUser = await BaseUserModel.findOne({});

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:39:14
-         where: {
-           base_user_id: userId,
-         },
+         where: {},

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:43:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (true) throw new Error('User not found.');

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:43:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (false) throw new Error('User not found.');

[NoCoverage] EqualityOperator
src/modules/users/repos/implementations/sequelizeUserRepo.ts:43:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!!baseUser !== false) throw new Error('User not found.');

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:43:9
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!baseUser === false) throw new Error('User not found.');

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:43:10
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!baseUser === false) throw new Error('User not found.');

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:43:24
-       if (!!baseUser === false) throw new Error('User not found.');
+       if (!!baseUser === true) throw new Error('User not found.');

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:65:7
-         {
-           replacements: { userName },
-           type: this.models.sequelize.QueryTypes.SELECT,
-         },
+         {},

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:66:23
-           replacements: { userName },
+           replacements: {},

[NoCoverage] BooleanLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:95:9
-       if (!exists) {
+       if (exists) {

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:95:9
-       if (!exists) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:95:9
-       if (!exists) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:98:48
-         await UserModel.update(rawSequelizeUser, { where: { user_email: user.email.value } });
+         await UserModel.update(rawSequelizeUser, {});

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:98:57
-         await UserModel.update(rawSequelizeUser, { where: { user_email: user.email.value } });
+         await UserModel.update(rawSequelizeUser, { where: {} });

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:156:7
-         {
-           replacements: { date },
-           type: this.models.sequelize.QueryTypes.SELECT,
-         },
+         {},

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:157:23
-           replacements: { date },
+           replacements: {},

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:161:9
-       if (response.length === 0) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:161:9
-       if (response.length === 0) {
+       if (false) {

[NoCoverage] EqualityOperator
src/modules/users/repos/implementations/sequelizeUserRepo.ts:161:9
-       if (response.length === 0) {
+       if (response.length !== 0) {

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:162:14
-         return { title: null }; // Or any other default value
+         return {}; // Or any other default value

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:238:7
-         {
-           replacements: { date: date }, 
-           type: this.models.sequelize.QueryTypes.SELECT,
-         },
+         {},

[NoCoverage] ObjectLiteral
src/modules/users/repos/implementations/sequelizeUserRepo.ts:239:23
-           replacements: { date: date }, 
+           replacements: {}, 

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:251:7
-         case 'averageComments':
-           statisticsObject.averageCommentsByDate = await this.averageCommentsByDate(date);
-           break;
+         case 'averageComments':

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:254:7
-         case 'averagePosts':
-           statisticsObject.averagePostsByDate = await this.averagePostsByDate(date);
-           break;
+         case 'averagePosts':

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:257:7
-         case 'mostCommentedPost':
-           statisticsObject.getPostTitleWithMostCommentsOnDate = await this.getPostTitleWithMostCommentsOnDate(date);
-           break;
+         case 'mostCommentedPost':

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:263:7
-         case 'usersWithoutCommentsAndPosts':
-           statisticsObject.getUserWithoutCommentsandPostsbyDate = await this.getUserWithoutCommentsandPostsbyDate(date);
-           break;
+         case 'usersWithoutCommentsAndPosts':

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:266:7
-         case 'postsWithoutCommentsPercentage':
-           statisticsObject.percentageOfPostsWithoutCommentsByDate = await this.percentageOfPostsWithoutCommentsByDate(date);
-           break;
+         case 'postsWithoutCommentsPercentage':

[NoCoverage] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:269:7
-         default:
-           throw new Error(`Invalid stat type: ${statType}`);
+         default:

[Survived] ConditionalExpression
src/modules/users/repos/implementations/sequelizeUserRepo.ts:190:13
-           if (a.comment_count !== b.comment_count) {
+           if (true) {
Tests ran:
    API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the top three commenters on a specific date
    API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return top three commenters in alphabetical order for a tie
    API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the last two commenters alphabetically in case of a tie
  and 1 more test!


[Survived] ArithmeticOperator
src/modules/users/repos/implementations/sequelizeUserRepo.ts:191:18
-             return b.comment_count - a.comment_count; // Sort by comment_count
+             return b.comment_count + a.comment_count; // Sort by comment_count
Tests ran:
    API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the top three commenters on a specific date
    API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the last two commenters alphabetically in case of a tie
    API Tests for getTopThreeByDate - Retrieval of the top three commenting members by date Return the first two commenters alphabetically in case of a tie.


[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:20:26
-             return resolve(count >= 1 ? true : false);
+             return resolve(true ? true : false);

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:20:26
-             return resolve(count >= 1 ? true : false);
+             return resolve(false ? true : false);

[NoCoverage] EqualityOperator
src/modules/users/services/redis/abstractRedisClient.ts:20:26
-             return resolve(count >= 1 ? true : false);
+             return resolve(count > 1 ? true : false);

[NoCoverage] EqualityOperator
src/modules/users/services/redis/abstractRedisClient.ts:20:26
-             return resolve(count >= 1 ? true : false);
+             return resolve(count < 1 ? true : false);

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/abstractRedisClient.ts:20:39
-             return resolve(count >= 1 ? true : false);
+             return resolve(count >= 1 ? false : false);

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/abstractRedisClient.ts:20:46
-             return resolve(count >= 1 ? true : false);
+             return resolve(count >= 1 ? true : true);

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:31:13
-           if (error) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:31:13
-           if (error) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:43:13
-           if (error) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:43:13
-           if (error) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:55:13
-           if (error) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:55:13
-           if (error) {
+           if (false) {

[NoCoverage] ObjectLiteral
src/modules/users/services/redis/abstractRedisClient.ts:61:22
-                 return { key, value };
+                 return {};

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:73:13
-           if (error) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:73:13
-           if (error) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:86:13
-           if (error) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:86:13
-           if (error) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:98:13
-           if (err) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/abstractRedisClient.ts:98:13
-           if (err) {
+           if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/abstractRedisClient.ts:101:19
-             resolve(true);
+             resolve(false);

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:28:12
-       return keys.length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:28:12
-       return keys.length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/modules/users/services/redis/redisAuthService.ts:28:12
-       return keys.length !== 0;
+       return keys.length === 0;

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:33:20
-       const exists = keys.length !== 0;
+       const exists = true;

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:33:20
-       const exists = keys.length !== 0;
+       const exists = false;

[NoCoverage] EqualityOperator
src/modules/users/services/redis/redisAuthService.ts:33:20
-       const exists = keys.length !== 0;
+       const exists = keys.length === 0;

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/redisAuthService.ts:35:9
-       if (!exists) throw new Error('Username not found for refresh token.');
+       if (exists) throw new Error('Username not found for refresh token.');

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:35:9
-       if (!exists) throw new Error('Username not found for refresh token.');
+       if (true) throw new Error('Username not found for refresh token.');

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:35:9
-       if (!exists) throw new Error('Username not found for refresh token.');
+       if (false) throw new Error('Username not found for refresh token.');

[NoCoverage] MethodExpression
src/modules/users/services/redis/redisAuthService.ts:39:12
-       return key.substring(key.indexOf(this.jwtHashName) + this.jwtHashName.length + 1);
+       return key;

[NoCoverage] ArithmeticOperator
src/modules/users/services/redis/redisAuthService.ts:39:26
-       return key.substring(key.indexOf(this.jwtHashName) + this.jwtHashName.length + 1);
+       return key.substring(key.indexOf(this.jwtHashName) + this.jwtHashName.length - 1);

[NoCoverage] ArithmeticOperator
src/modules/users/services/redis/redisAuthService.ts:39:26
-       return key.substring(key.indexOf(this.jwtHashName) + this.jwtHashName.length + 1);
+       return key.substring(key.indexOf(this.jwtHashName) - this.jwtHashName.length + 1);

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:43:9
-       if (user.isLoggedIn()) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:43:9
-       if (user.isLoggedIn()) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/modules/users/services/redis/redisAuthService.ts:71:48
-       return jwt.sign(claims, authConfig.secret, {
-         expiresIn: authConfig.tokenExpiryTime,
-       });
+       return jwt.sign(claims, authConfig.secret, {});

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:87:13
-           if (err) return resolve(null);
+           if (true) return resolve(null);

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:87:13
-           if (err) return resolve(null);
+           if (false) return resolve(null);

[NoCoverage] ArrowFunction
src/modules/users/services/redis/redisAuthService.ts:119:36
-       return Promise.all(allKeys.map((key) => this.deleteOne(key)));
+       return Promise.all(allKeys.map(() => undefined));

[NoCoverage] ArrowFunction
src/modules/users/services/redis/redisAuthService.ts:151:26
-       return keyValues.map((kv) => kv.value);
+       return keyValues.map(() => undefined);

[NoCoverage] ArrowFunction
src/modules/users/services/redis/redisAuthService.ts:187:32
-       const keys = keyValues.map((kv) => kv.key);
+       const keys = keyValues.map(() => undefined);

[NoCoverage] ArrowFunction
src/modules/users/services/redis/redisAuthService.ts:188:33
-       return Promise.all(keys.map((key) => this.deleteOne(key)));
+       return Promise.all(keys.map(() => undefined));

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/redisAuthService.ts:201:9
-       if (!!token) {
+       if (!token) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:201:9
-       if (!!token) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/services/redis/redisAuthService.ts:201:9
-       if (!!token) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/redisAuthService.ts:201:10
-       if (!!token) {
+       if (!token) {

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/redisAuthService.ts:202:14
-         return true;
+         return false;

[NoCoverage] BooleanLiteral
src/modules/users/services/redis/redisAuthService.ts:204:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserController.ts:29:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserController.ts:29:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserController.ts:33:11
-             case CreateUserErrors.UsernameTakenError:
-               return this.conflict(res, error.getErrorValue().message);
+             case CreateUserErrors.UsernameTakenError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserController.ts:35:11
-             case CreateUserErrors.EmailAlreadyExistsError:
-               return this.conflict(res, error.getErrorValue().message);
+             case CreateUserErrors.EmailAlreadyExistsError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserController.ts:37:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/users/useCases/createUser/CreateUserErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/createUser/CreateUserErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] ArrayDeclaration
src/modules/users/useCases/createUser/CreateUserUseCase.ts:32:38
-       const dtoResult = Result.combine([emailOrError, passwordOrError, usernameOrError]);
+       const dtoResult = Result.combine([]);

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:34:9
-       if (dtoResult.isFailure) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:34:9
-       if (dtoResult.isFailure) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:45:11
-         if (userAlreadyExists) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:45:11
-         if (userAlreadyExists) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:52:31
-           const userNameTaken = !!alreadyCreatedUserByUserName === true;
+           const userNameTaken = true;

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:52:31
-           const userNameTaken = !!alreadyCreatedUserByUserName === true;
+           const userNameTaken = false;

[NoCoverage] EqualityOperator
src/modules/users/useCases/createUser/CreateUserUseCase.ts:52:31
-           const userNameTaken = !!alreadyCreatedUserByUserName === true;
+           const userNameTaken = !!alreadyCreatedUserByUserName !== true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/createUser/CreateUserUseCase.ts:52:31
-           const userNameTaken = !!alreadyCreatedUserByUserName === true;
+           const userNameTaken = !alreadyCreatedUserByUserName === true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/createUser/CreateUserUseCase.ts:52:32
-           const userNameTaken = !!alreadyCreatedUserByUserName === true;
+           const userNameTaken = !alreadyCreatedUserByUserName === true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/createUser/CreateUserUseCase.ts:52:66
-           const userNameTaken = !!alreadyCreatedUserByUserName === true;
+           const userNameTaken = !!alreadyCreatedUserByUserName === false;

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:54:13
-           if (userNameTaken) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:54:13
-           if (userNameTaken) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:65:11
-         if (userOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/createUser/CreateUserUseCase.ts:65:11
-         if (userOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserController.ts:22:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserController.ts:22:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserController.ts:26:11
-             case DeleteUserErrors.UserNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case DeleteUserErrors.UserNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserController.ts:28:11
-             case DeleteUserErrors.UserHasContentError:
-               return this.conflict(res, error.getErrorValue().message);
+             case DeleteUserErrors.UserHasContentError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserController.ts:30:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/users/useCases/deleteUser/DeleteUserErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/deleteUser/DeleteUserErrors.ts:20:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:39:27
-         const memberFound = !!user === true;
+         const memberFound = true;

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:39:27
-         const memberFound = !!user === true;
+         const memberFound = false;

[NoCoverage] EqualityOperator
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:39:27
-         const memberFound = !!user === true;
+         const memberFound = !!user !== true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:39:27
-         const memberFound = !!user === true;
+         const memberFound = !user === true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:39:28
-         const memberFound = !!user === true;
+         const memberFound = !user === true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:39:38
-         const memberFound = !!user === true;
+         const memberFound = !!user === false;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:40:11
-         if (!memberFound) {
+         if (memberFound) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:40:11
-         if (!memberFound) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:40:11
-         if (!memberFound) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:48:11
-         if (hasPosts || hasComments) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:48:11
-         if (hasPosts || hasComments) {
+         if (false) {

[NoCoverage] LogicalOperator
src/modules/users/useCases/deleteUser/DeleteUserUseCase.ts:48:11
-         if (hasPosts || hasComments) {
+         if (hasPosts && hasComments) {

[NoCoverage] ObjectLiteral
src/modules/users/useCases/getCurrentUser/GetCurrentUserController.ts:25:29
-           return this.ok(res, {
-             user: UserMap.toDTO(user),
-           });
+           return this.ok(res, {});

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getPostsCommentsByUsername/GetPostsCommentsByUsernameController.ts:22:17
-               if (result.isLeft()) {
+               if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getPostsCommentsByUsername/GetPostsCommentsByUsernameController.ts:22:17
-               if (result.isLeft()) {
+               if (false) {

[NoCoverage] ObjectLiteral
src/modules/users/useCases/getPostsCommentsByUsername/GetPostsCommentsByUsernameController.ts:26:37
-                   return this.ok(res, {
-                       user: user, 
-                   })
+                   return this.ok(res, {})

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getStatistics/GetStatisticsByDateController.ts:22:11
-         if (result.isLeft()) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getStatistics/GetStatisticsByDateController.ts:22:11
-         if (result.isLeft()) {
+         if (false) {

[NoCoverage] ObjectLiteral
src/modules/users/useCases/getStatistics/GetStatisticsByDateController.ts:27:29
-           return this.ok(res, {
-             statistics: user,
-           });
+           return this.ok(res, {});

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:23:11
-         if (userNameOrError.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:23:11
-         if (userNameOrError.isFailure) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:30:25
-         const userFound = !!user === true;
+         const userFound = true;

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:30:25
-         const userFound = !!user === true;
+         const userFound = false;

[NoCoverage] EqualityOperator
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:30:25
-         const userFound = !!user === true;
+         const userFound = !!user !== true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:30:25
-         const userFound = !!user === true;
+         const userFound = !user === true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:30:26
-         const userFound = !!user === true;
+         const userFound = !user === true;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:30:36
-         const userFound = !!user === true;
+         const userFound = !!user === false;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:32:11
-         if (!userFound) {
+         if (userFound) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:32:11
-         if (!userFound) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserName.ts:32:11
-         if (!userFound) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserNameController.ts:26:11
-             case GetUserByUserNameErrors.UserNotFoundError:
-               return this.notFound(res, error.getErrorValue().message);
+             case GetUserByUserNameErrors.UserNotFoundError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserByUserName/GetUserByUserNameController.ts:28:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/users/useCases/getUserByUserName/GetUserByUserNameErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserWithMoreCommentsPosts/GetUserWithMoreCommentsPostsController.ts:19:17
-               if (result.isLeft()) {
+               if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/getUserWithMoreCommentsPosts/GetUserWithMoreCommentsPostsController.ts:19:17
-               if (result.isLeft()) {
+               if (false) {

[NoCoverage] ObjectLiteral
src/modules/users/useCases/getUserWithMoreCommentsPosts/GetUserWithMoreCommentsPostsController.ts:23:37
-                   return this.ok(res, {
-                       user: user, 
-                   })
+                   return this.ok(res, {})

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginController.ts:26:11
-             case LoginUseCaseErrors.UserNameDoesntExistError:
-               return this.notFound(res, error.getErrorValue().message);
+             case LoginUseCaseErrors.UserNameDoesntExistError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginController.ts:28:11
-             case LoginUseCaseErrors.PasswordDoesntMatchError:
-               return this.clientError(res, error.getErrorValue().message);
+             case LoginUseCaseErrors.PasswordDoesntMatchError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginController.ts:30:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/users/useCases/login/LoginErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/login/LoginErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/login/LoginErrors.ts:23:13
-         super(false, {
+         super(true, {

[NoCoverage] ArrayDeclaration
src/modules/users/useCases/login/LoginUseCase.ts:37:44
-         const payloadResult = Result.combine([usernameOrError, passwordOrError]);
+         const payloadResult = Result.combine([]);

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:39:11
-         if (payloadResult.isFailure) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:39:11
-         if (payloadResult.isFailure) {
+         if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/login/LoginUseCase.ts:47:25
-         const userFound = !!user;
+         const userFound = !user;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/login/LoginUseCase.ts:47:26
-         const userFound = !!user;
+         const userFound = !user;

[NoCoverage] BooleanLiteral
src/modules/users/useCases/login/LoginUseCase.ts:49:11
-         if (!userFound) {
+         if (userFound) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:49:11
-         if (!userFound) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:49:11
-         if (!userFound) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:53:11
-         if (user.isDeleted) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:53:11
-         if (user.isDeleted) {
+         if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/login/LoginUseCase.ts:59:11
-         if (!passwordValid) {
+         if (passwordValid) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:59:11
-         if (!passwordValid) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/login/LoginUseCase.ts:59:11
-         if (!passwordValid) {
+         if (false) {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/logout/LogoutErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/modules/users/useCases/refreshAccessToken/RefreshAccessTokenController.ts:27:11
-             case RefreshAccessTokenErrors.RefreshTokenNotFound:
-               return this.notFound(res, error.getErrorValue().message);
+             case RefreshAccessTokenErrors.RefreshTokenNotFound:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/refreshAccessToken/RefreshAccessTokenController.ts:29:11
-             case RefreshAccessTokenErrors.UserNotFoundOrDeletedError:
-               return this.notFound(res, error.getErrorValue().message);
+             case RefreshAccessTokenErrors.UserNotFoundOrDeletedError:

[NoCoverage] ConditionalExpression
src/modules/users/useCases/refreshAccessToken/RefreshAccessTokenController.ts:31:11
-             default:
-               return this.fail(res, error.getErrorValue().message);
+             default:

[NoCoverage] BooleanLiteral
src/modules/users/useCases/refreshAccessToken/RefreshAccessTokenErrors.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/modules/users/useCases/refreshAccessToken/RefreshAccessTokenErrors.ts:15:13
-         super(false, {
+         super(true, {

[NoCoverage] BooleanLiteral
src/shared/core/AppError.ts:7:13
-         super(false, {
+         super(true, {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return true

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return false

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return actualValue >= minValue

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:22:12
-       return actualValue > minValue
+       return actualValue <= minValue

[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:63:19
-       let isValid = false;
+       let isValid = true;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:65:11
-         if (value === validValue) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:65:11
-         if (value === validValue) {
+         if (false) {

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:65:11
-         if (value === validValue) {
+         if (value !== validValue) {

[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:66:19
-           isValid = true;
+           isValid = false;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:70:9
-       if (isValid) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:70:9
-       if (isValid) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = true;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = false;

[NoCoverage] LogicalOperator
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min || num <= max;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = true && num <= max;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = num > min && num <= max;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:23
-       const isInRange = num >= min && num <= max;
+       const isInRange = num < min && num <= max;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:87:37
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min && true;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:37
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min && num < max;

[NoCoverage] EqualityOperator
src/shared/core/Guard.ts:87:37
-       const isInRange = num >= min && num <= max;
+       const isInRange = num >= min && num > max;

[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:88:9
-       if (!isInRange) {
+       if (isInRange) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:88:9
-       if (!isInRange) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:88:9
-       if (!isInRange) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/core/Guard.ts:105:11
-         if (!numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;
+         if (numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:105:11
-         if (!numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;
+         if (true) failingResult = numIsInRangeResult;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:105:11
-         if (!numIsInRangeResult.isFailure) failingResult = numIsInRangeResult;
+         if (false) failingResult = numIsInRangeResult;

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:108:9
-       if (failingResult) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/core/Guard.ts:108:9
-       if (failingResult) {
+       if (false) {

[Survived] ConditionalExpression
src/shared/core/Guard.ts:30:12
-       return text.length >= numChars
+       return true
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] EqualityOperator
src/shared/core/Guard.ts:30:12
-       return text.length >= numChars
+       return text.length > numChars
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] ConditionalExpression
src/shared/core/Guard.ts:36:12
-       return text.length <= numChars
+       return true
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] EqualityOperator
src/shared/core/Guard.ts:36:12
-       return text.length <= numChars
+       return text.length < numChars
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] ConditionalExpression
src/shared/core/Guard.ts:52:11
-         if (result.isFailure) return result;
+         if (true) return result;
Tests ran:
    guard against null or undefined bulk knows that values provided equates to success
    guard against null or undefined bulk knows that a single null value equates to failure
    guard against null or undefined bulk knows that a single undefined value equates to failure


[NoCoverage] ConditionalExpression
src/shared/core/Result.ts:46:11
-         if (result.isFailure) return result;
+         if (true) return result;

[NoCoverage] ConditionalExpression
src/shared/core/Result.ts:46:11
-         if (result.isFailure) return result;
+         if (false) return result;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:62:12
-       return true;
+       return false;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:66:12
-       return false;
+       return true;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:78:12
-       return false;
+       return true;

[NoCoverage] BooleanLiteral
src/shared/core/Result.ts:82:12
-       return true;
+       return false;

[Survived] ConditionalExpression
src/shared/core/Result.ts:8:9
-       if (isSuccess && error) {
+       if (false) {
Tests ran:
    guard combined results knows that two successful results equates to success
    guard combined results knows that one success, one failure equates to overall failure
    guard against null or undefined knows that value provided equates to success
  and 8 more tests!


[Survived] ConditionalExpression
src/shared/core/Result.ts:11:9
-       if (!isSuccess && !error) {
+       if (false) {
Tests ran:
    guard combined results knows that two successful results equates to success
    guard combined results knows that one success, one failure equates to overall failure
    guard against null or undefined knows that value provided equates to success
  and 8 more tests!


[Survived] ConditionalExpression
src/shared/core/Result.ts:24:9
-       if (!this.isSuccess) {
+       if (false) {
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:18:28
-       const aggregateFound = !!this.findMarkedAggregateByID(aggregate.id);
+       const aggregateFound = !this.findMarkedAggregateByID(aggregate.id);

[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:18:29
-       const aggregateFound = !!this.findMarkedAggregateByID(aggregate.id);
+       const aggregateFound = !this.findMarkedAggregateByID(aggregate.id);

[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:20:9
-       if (!aggregateFound) {
+       if (aggregateFound) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:20:9
-       if (!aggregateFound) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:20:9
-       if (!aggregateFound) {
+       if (false) {

[NoCoverage] ArrowFunction
src/shared/domain/events/DomainEvents.ts:26:36
-       aggregate.domainEvents.forEach((event: IDomainEvent) => this.dispatch(event));
+       aggregate.domainEvents.forEach(() => undefined);

[NoCoverage] ArrowFunction
src/shared/domain/events/DomainEvents.ts:30:51
-       const index = this.markedAggregates.findIndex((a) => a.equals(aggregate));
+       const index = this.markedAggregates.findIndex(() => undefined);

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:37:11
-         if (aggregate.id.equals(id)) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:37:11
-         if (aggregate.id.equals(id)) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:48:9
-       if (aggregate) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:48:9
-       if (aggregate) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/events/DomainEvents.ts:56:9
-       if (!this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (this.handlersMap.hasOwnProperty(eventClassName)) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:56:9
-       if (!this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:56:9
-       if (!this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (false) {

[NoCoverage] ArrayDeclaration
src/shared/domain/events/DomainEvents.ts:57:42
-         this.handlersMap[eventClassName] = [];
+         this.handlersMap[eventClassName] = ["Stryker was here"];

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:73:9
-       if (this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/events/DomainEvents.ts:73:9
-       if (this.handlersMap.hasOwnProperty(eventClassName)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (object == null && object == undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (false || object == undefined) {

[NoCoverage] EqualityOperator
src/shared/domain/Entity.ts:17:9
-       if (object == null || object == undefined) {
+       if (object != null || object == undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:17:27
-       if (object == null || object == undefined) {
+       if (object == null || false) {

[NoCoverage] EqualityOperator
src/shared/domain/Entity.ts:17:27
-       if (object == null || object == undefined) {
+       if (object == null || object != undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/Entity.ts:18:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:21:9
-       if (this === object) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:21:9
-       if (this === object) {
+       if (false) {

[NoCoverage] EqualityOperator
src/shared/domain/Entity.ts:21:9
-       if (this === object) {
+       if (this !== object) {

[NoCoverage] BooleanLiteral
src/shared/domain/Entity.ts:22:14
-         return true;
+         return false;

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:25:9
-       if (!isEntity(object)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Entity.ts:25:9
-       if (!isEntity(object)) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/Entity.ts:26:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (id === null && id === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (false || id === undefined) {

[NoCoverage] EqualityOperator
src/shared/domain/Identifier.ts:7:9
-       if (id === null || id === undefined) {
+       if (id !== null || id === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:7:24
-       if (id === null || id === undefined) {
+       if (id === null || false) {

[NoCoverage] EqualityOperator
src/shared/domain/Identifier.ts:7:24
-       if (id === null || id === undefined) {
+       if (id === null || id !== undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/Identifier.ts:8:14
-         return false;
+         return true;

[NoCoverage] BooleanLiteral
src/shared/domain/Identifier.ts:10:9
-       if (!(id instanceof this.constructor)) {
+       if (id instanceof this.constructor) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:10:9
-       if (!(id instanceof this.constructor)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:10:9
-       if (!(id instanceof this.constructor)) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/Identifier.ts:11:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:13:12
-       return id.toValue() === this.value;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/Identifier.ts:13:12
-       return id.toValue() === this.value;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/Identifier.ts:13:12
-       return id.toValue() === this.value;
+       return id.toValue() !== this.value;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (vo === null && vo === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (false || vo === undefined) {

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:22:9
-       if (vo === null || vo === undefined) {
+       if (vo !== null || vo === undefined) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:22:24
-       if (vo === null || vo === undefined) {
+       if (vo === null || false) {

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:22:24
-       if (vo === null || vo === undefined) {
+       if (vo === null || vo !== undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/ValueObject.ts:23:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:25:9
-       if (vo.props === undefined) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:25:9
-       if (vo.props === undefined) {
+       if (false) {

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:25:9
-       if (vo.props === undefined) {
+       if (vo.props !== undefined) {

[NoCoverage] BooleanLiteral
src/shared/domain/ValueObject.ts:26:14
-         return false;
+         return true;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:28:12
-       return JSON.stringify(this.props) === JSON.stringify(vo.props);
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/ValueObject.ts:28:12
-       return JSON.stringify(this.props) === JSON.stringify(vo.props);
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/ValueObject.ts:28:12
-       return JSON.stringify(this.props) === JSON.stringify(vo.props);
+       return JSON.stringify(this.props) !== JSON.stringify(vo.props);

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:29:12
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.currentItems.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:29:37
-       return this.currentItems.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.currentItems.filter(() => undefined).length !== 0;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.new.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:33:12
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.new.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:33:28
-       return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.new.filter(() => undefined).length !== 0;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.removed.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:37:12
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.removed.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:37:32
-       return this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.removed.filter(() => undefined).length !== 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:41:16
-       this.new = this.new.filter((v) => !this.compareItems(v, item));
+       this.new = this.new;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:41:32
-       this.new = this.new.filter((v) => !this.compareItems(v, item));
+       this.new = this.new.filter(() => undefined);

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:41:39
-       this.new = this.new.filter((v) => !this.compareItems(v, item));
+       this.new = this.new.filter((v) => this.compareItems(v, item));

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:45:25
-       this.currentItems = this.currentItems.filter((v) => !this.compareItems(item, v));
+       this.currentItems = this.currentItems;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:45:50
-       this.currentItems = this.currentItems.filter((v) => !this.compareItems(item, v));
+       this.currentItems = this.currentItems.filter(() => undefined);

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:45:57
-       this.currentItems = this.currentItems.filter((v) => !this.compareItems(item, v));
+       this.currentItems = this.currentItems.filter((v) => this.compareItems(item, v));

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:49:20
-       this.removed = this.removed.filter((v) => !this.compareItems(item, v));
+       this.removed = this.removed;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:49:40
-       this.removed = this.removed.filter((v) => !this.compareItems(item, v));
+       this.removed = this.removed.filter(() => undefined);

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:49:47
-       this.removed = this.removed.filter((v) => !this.compareItems(item, v));
+       this.removed = this.removed.filter((v) => this.compareItems(item, v));

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return true;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return false;

[NoCoverage] EqualityOperator
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.initial.filter((v: T) => this.compareItems(item, v)).length === 0;

[NoCoverage] MethodExpression
src/shared/domain/WatchedList.ts:53:12
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.initial.length !== 0;

[NoCoverage] ArrowFunction
src/shared/domain/WatchedList.ts:53:32
-       return this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0;
+       return this.initial.filter(() => undefined).length !== 0;

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:61:9
-       if (this.isRemovedItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:61:9
-       if (this.isRemovedItem(item)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (false) {

[NoCoverage] LogicalOperator
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (!this.isNewItem(item) || !this.wasAddedInitially(item)) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:65:9
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (this.isNewItem(item) && !this.wasAddedInitially(item)) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:65:34
-       if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {
+       if (!this.isNewItem(item) && this.wasAddedInitially(item)) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:69:9
-       if (!this.isCurrentItem(item)) {
+       if (this.isCurrentItem(item)) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:69:9
-       if (!this.isCurrentItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:69:9
-       if (!this.isCurrentItem(item)) {
+       if (false) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:77:9
-       if (this.isNewItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:77:9
-       if (this.isNewItem(item)) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/domain/WatchedList.ts:82:9
-       if (!this.isRemovedItem(item)) {
+       if (this.isRemovedItem(item)) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:82:9
-       if (!this.isRemovedItem(item)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/domain/WatchedList.ts:82:9
-       if (!this.isRemovedItem(item)) {
+       if (false) {

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:17:18
-     "development": {
-       "username": DDD_FORUM_DB_USER,
-       "password": DDD_FORUM_DB_PASS,
-       "database": DDD_FORUM_DB_DEV_DB_NAME,
-       "host": DDD_FORUM_DB_HOST,
-       "dialect": "mysql"
-     },
+     "development": {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:31:17
-     "production": {
-       "username": DDD_FORUM_DB_USER,
-       "password": DDD_FORUM_DB_PASS,
-       "database": DDD_FORUM_DB_PROD_DB_NAME,
-       "host": DDD_FORUM_DB_HOST,
-       "dialect": "mysql"
-     }
+     "production": {}
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/config/config.js:46:14
-   const mode = DDD_FORUM_IS_PRODUCTION === "true" ? 'prod' : 'dev';
+   const mode = true ? 'prod' : 'dev';
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/config/config.js:46:14
-   const mode = DDD_FORUM_IS_PRODUCTION === "true" ? 'prod' : 'dev';
+   const mode = false ? 'prod' : 'dev';
Ran all tests for this mutant.

[Survived] EqualityOperator
src/shared/infra/database/sequelize/config/config.js:46:14
-   const mode = DDD_FORUM_IS_PRODUCTION === "true" ? 'prod' : 'dev';
+   const mode = DDD_FORUM_IS_PRODUCTION !== "true" ? 'prod' : 'dev';
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/config/config.js:50:29
-   module.exports.connection = DDD_FORUM_IS_PRODUCTION === "true"
+   module.exports.connection = false
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:56:21
-       dialectOptions: {
-         multipleStatements: true,
-       },
+       dialectOptions: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/config/config.js:57:27
-         multipleStatements: true,
+         multipleStatements: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/config/config.js:59:11
-       pool: {
-         max: 5,
-         min: 0,
-         idle: 10000
-       },
+       pool: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/config/config.js:64:14
-       logging: false
+       logging: true
Ran all tests for this mutant.

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:13:35
-     BaseUser.addHook('afterCreate', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterCreate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:14:36
-     BaseUser.addHook('afterDestroy', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterDestroy', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:15:35
-     BaseUser.addHook('afterUpdate', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterUpdate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:16:33
-     BaseUser.addHook('afterSave', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterSave', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:17:35
-     BaseUser.addHook('afterUpsert', (m: any) => dispatchEventsCallback(m, 'base_user_id'));
+     BaseUser.addHook('afterUpsert', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:19:33
-     Member.addHook('afterCreate', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterCreate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:20:34
-     Member.addHook('afterDestroy', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterDestroy', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:21:33
-     Member.addHook('afterUpdate', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterUpdate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:22:31
-     Member.addHook('afterSave', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterSave', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:23:33
-     Member.addHook('afterUpsert', (m: any) => dispatchEventsCallback(m, 'member_id'));
+     Member.addHook('afterUpsert', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:25:31
-     Post.addHook('afterCreate', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterCreate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:26:32
-     Post.addHook('afterDestroy', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterDestroy', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:27:31
-     Post.addHook('afterUpdate', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterUpdate', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:28:29
-     Post.addHook('afterSave', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterSave', () => undefined);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/hooks/index.ts:29:31
-     Post.addHook('afterUpsert', (m: any) => dispatchEventsCallback(m, 'post_id'));
+     Post.addHook('afterUpsert', () => undefined);

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:4:16
-   export default {
-     up: async (queryInterface, Sequelize) => {
-       const CREATE_BASE_USER = () => {
-         return queryInterface.createTable('base_user', {
-           base_user_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           user_email: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-             unique: true,
-           },
-           is_email_verified: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           username: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-           },
-           user_password: {
-             type: Sequelize.STRING,
-             allowNull: true,
-             defaultValue: null,
-           },
-           is_admin_user: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           is_deleted: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       };
-       const CREATE_MEMBER = () =>
-         queryInterface.createTable('member', {
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_POST = () =>
-         queryInterface.createTable('post', {
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_COMMENT = () =>
-         queryInterface.createTable('comment', {
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_POST_VOTE = () =>
-         queryInterface.createTable('post_vote', {
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       const CREATE_COMMENT_VOTE = () =>
-         queryInterface.createTable('comment_vote', {
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
-       await runner.run([
-         () => CREATE_BASE_USER(),
-         () => CREATE_MEMBER(),
-         () => CREATE_POST(),
-         () => CREATE_COMMENT(),
-         () => CREATE_POST_VOTE(),
-         () => CREATE_COMMENT_VOTE(),
-       ]);
-     },
-     down: (queryInterface, Sequelize) => {
-       return runner.run([() => queryInterface.dropTable('base_user')]);
-     },
-   };
+   export default {};

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:7:54
-         return queryInterface.createTable('base_user', {
-           base_user_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           user_email: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-             unique: true,
-           },
-           is_email_verified: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           username: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-           },
-           user_password: {
-             type: Sequelize.STRING,
-             allowNull: true,
-             defaultValue: null,
-           },
-           is_admin_user: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           is_deleted: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         return queryInterface.createTable('base_user', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:8:23
-           base_user_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           base_user_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:11:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:12:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:14:21
-           user_email: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-             unique: true,
-           },
+           user_email: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:16:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:17:19
-             unique: true,
+             unique: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:19:28
-           is_email_verified: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
+           is_email_verified: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:21:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:22:25
-             defaultValue: false,
+             defaultValue: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:24:19
-           username: {
-             type: Sequelize.STRING(250),
-             allowNull: false,
-           },
+           username: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:26:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:28:24
-           user_password: {
-             type: Sequelize.STRING,
-             allowNull: true,
-             defaultValue: null,
-           },
+           user_password: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:30:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:33:24
-           is_admin_user: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
+           is_admin_user: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:35:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:36:25
-             defaultValue: false,
+             defaultValue: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:38:21
-           is_deleted: {
-             type: Sequelize.BOOLEAN,
-             allowNull: false,
-             defaultValue: false,
-           },
+           is_deleted: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:40:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:41:25
-             defaultValue: false,
+             defaultValue: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:43:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:45:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:48:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:50:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:56:27
-       const CREATE_MEMBER = () =>
-         queryInterface.createTable('member', {
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_MEMBER = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:57:44
-         queryInterface.createTable('member', {
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('member', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:58:20
-           member_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:61:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:62:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:64:25
-           member_base_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             primaryKey: true,
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_base_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:66:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:67:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:68:23
-             references: {
-               model: 'base_user',
-               key: 'base_user_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:75:21
-           reputation: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
+           reputation: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:77:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:80:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:82:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:85:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:87:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:92:25
-       const CREATE_POST = () =>
-         queryInterface.createTable('post', {
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_POST = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:93:42
-         queryInterface.createTable('post', {
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('post', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:94:18
-           post_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           post_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:97:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:98:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:100:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:102:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:103:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:110:15
-           type: {
-             type: Sequelize.STRING(30),
-             allowNull: false,
-           },
+           type: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:112:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:114:16
-           title: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
+           title: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:116:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:118:15
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
+           text: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:120:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:122:15
-           link: {
-             type: Sequelize.TEXT,
-             allowNull: true,
-           },
+           link: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:124:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:126:15
-           slug: {
-             type: Sequelize.STRING(150),
-             allowNull: false,
-           },
+           slug: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:128:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:130:17
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
+           points: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:132:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:135:29
-           total_num_comments: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 0,
-           },
+           total_num_comments: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:137:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:140:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:142:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:145:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:147:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:152:28
-       const CREATE_COMMENT = () =>
-         queryInterface.createTable('comment', {
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_COMMENT = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:153:45
-         queryInterface.createTable('comment', {
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('comment', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:154:21
-           comment_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           comment_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:157:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:158:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:160:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:162:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:163:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:170:28
-           parent_comment_id: {
-             type: Sequelize.UUID,
-             allowNull: true,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           parent_comment_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:172:22
-             allowNull: true,
+             allowNull: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:173:23
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:180:18
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           post_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:182:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:183:23
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:190:15
-           text: {
-             type: Sequelize.TEXT,
-             allowNull: false,
-           },
+           text: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:192:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:194:17
-           points: {
-             type: Sequelize.INTEGER,
-             allowNull: false,
-             defaultValue: 1,
-           },
+           points: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:196:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:199:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:201:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:204:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:206:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:211:30
-       const CREATE_POST_VOTE = () =>
-         queryInterface.createTable('post_vote', {
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_POST_VOTE = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:212:47
-         queryInterface.createTable('post_vote', {
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('post_vote', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:213:23
-           post_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           post_vote_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:216:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:217:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:219:18
-           post_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           post_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:221:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:222:23
-             references: {
-               model: 'post',
-               key: 'post_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:229:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:231:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:232:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:239:15
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
+           type: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:241:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:243:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:245:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:248:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:250:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:255:33
-       const CREATE_COMMENT_VOTE = () =>
-         queryInterface.createTable('comment_vote', {
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+       const CREATE_COMMENT_VOTE = () => undefined;

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:256:50
-         queryInterface.createTable('comment_vote', {
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
-         });
+         queryInterface.createTable('comment_vote', {});

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:257:26
-           comment_vote_id: {
-             type: Sequelize.UUID,
-             defaultValue: Sequelize.UUIDV4,
-             allowNull: false,
-             primaryKey: true,
-           },
+           comment_vote_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:260:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:261:23
-             primaryKey: true,
+             primaryKey: false,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:263:21
-           comment_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           comment_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:265:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:266:23
-             references: {
-               model: 'comment',
-               key: 'comment_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:273:20
-           member_id: {
-             type: Sequelize.UUID,
-             allowNull: false,
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
-             onDelete: 'cascade',
-             onUpdate: 'cascade',
-           },
+           member_id: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:275:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:276:23
-             references: {
-               model: 'member',
-               key: 'member_id',
-             },
+             references: {},

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:283:15
-           type: {
-             type: Sequelize.STRING(10),
-             allowNull: false,
-           },
+           type: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:285:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:287:21
-           created_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
-           },
+           created_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:289:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ObjectLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:292:21
-           updated_at: {
-             type: Sequelize.DATE,
-             allowNull: false,
-             defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
-           },
+           updated_at: {},

[NoCoverage] BooleanLiteral
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:294:22
-             allowNull: false,
+             allowNull: true,

[NoCoverage] ArrayDeclaration
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:299:22
-       await runner.run([
-         () => CREATE_BASE_USER(),
-         () => CREATE_MEMBER(),
-         () => CREATE_POST(),
-         () => CREATE_COMMENT(),
-         () => CREATE_POST_VOTE(),
-         () => CREATE_COMMENT_VOTE(),
-       ]);
+       await runner.run([]);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:300:7
-         () => CREATE_BASE_USER(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:301:7
-         () => CREATE_MEMBER(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:302:7
-         () => CREATE_POST(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:303:7
-         () => CREATE_COMMENT(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:304:7
-         () => CREATE_POST_VOTE(),
+         () => undefined,

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:305:7
-         () => CREATE_COMMENT_VOTE(),
+         () => undefined,

[NoCoverage] ArrayDeclaration
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:310:23
-       return runner.run([() => queryInterface.dropTable('base_user')]);
+       return runner.run([]);

[NoCoverage] ArrowFunction
src/shared/infra/database/sequelize/migrations/20191004134636-initial-migration.ts:310:24
-       return runner.run([() => queryInterface.dropTable('base_user')]);
+       return runner.run([() => undefined]);

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:4:5
-       {
-         base_user_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         user_email: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-           unique: true,
-         },
-         is_email_verified: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
-         is_admin_user: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
-         is_deleted: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
-         username: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-         },
-         user_password: {
-           type: DataTypes.STRING,
-           allowNull: true,
-           defaultValue: null,
-         },
-       },
+       {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:5:21
-         base_user_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         base_user_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:8:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:9:21
-           primaryKey: true,
+           primaryKey: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:11:19
-         user_email: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-           unique: true,
-         },
+         user_email: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:13:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:14:17
-           unique: true,
+           unique: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:16:26
-         is_email_verified: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
+         is_email_verified: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:18:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:19:23
-           defaultValue: false,
+           defaultValue: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:21:22
-         is_admin_user: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
+         is_admin_user: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:23:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:24:23
-           defaultValue: false,
+           defaultValue: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:26:19
-         is_deleted: {
-           type: DataTypes.BOOLEAN,
-           allowNull: false,
-           defaultValue: false,
-         },
+         is_deleted: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:28:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:29:23
-           defaultValue: false,
+           defaultValue: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:31:17
-         username: {
-           type: DataTypes.STRING(250),
-           allowNull: false,
-         },
+         username: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:33:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:35:22
-         user_password: {
-           type: DataTypes.STRING,
-           allowNull: true,
-           defaultValue: null,
-         },
+         user_password: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:37:20
-           allowNull: true,
+           allowNull: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:41:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'base_user',
-         indexes: [{ unique: true, fields: ['user_email'] }],
-       },
+       {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:42:19
-         timestamps: true,
+         timestamps: false,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:43:20
-         underscored: true,
+         underscored: false,
Ran all tests for this mutant.

[Survived] ArrayDeclaration
src/shared/infra/database/sequelize/models/BaseUser.ts:45:16
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [],
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:45:17
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [{}],
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:45:27
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [{ unique: false, fields: ['user_email'] }],
Ran all tests for this mutant.

[Survived] ArrayDeclaration
src/shared/infra/database/sequelize/models/BaseUser.ts:45:41
-         indexes: [{ unique: true, fields: ['user_email'] }],
+         indexes: [{ unique: true, fields: [] }],
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/BaseUser.ts:50:36
-       BaseUser.hasOne(models.Member, { as: 'Member', foreignKey: 'member_id' });
+       BaseUser.hasOne(models.Member, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:4:5
-       {
-         comment_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         parent_comment_id: {
-           type: DataTypes.UUID,
-           allowNull: true,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: false,
-         },
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 1,
-         },
-       },
+       {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:5:19
-         comment_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         comment_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:8:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:9:21
-           primaryKey: true,
+           primaryKey: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:11:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:13:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:14:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:21:16
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         post_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:23:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:24:21
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:31:26
-         parent_comment_id: {
-           type: DataTypes.UUID,
-           allowNull: true,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         parent_comment_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:33:20
-           allowNull: true,
+           allowNull: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:34:21
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:41:13
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: false,
-         },
+         text: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:43:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:45:15
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 1,
-         },
+         points: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:47:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:51:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'comment',
-       },
+       {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:52:19
-         timestamps: true,
+         timestamps: false,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Comment.ts:53:20
-         underscored: true,
+         underscored: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:59:38
-       Comment.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       Comment.belongsTo(models.Member, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:64:36
-       Comment.belongsTo(models.Post, { foreignKey: 'post_id', targetKey: 'post_id', as: 'Post' });
+       Comment.belongsTo(models.Post, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Comment.ts:65:41
-       Comment.hasMany(models.CommentVote, { foreignKey: 'comment_id', as: 'CommentVotes' });
+       Comment.hasMany(models.CommentVote, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:4:5
-       {
-         comment_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         comment_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
-       },
+       {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:5:24
-         comment_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         comment_vote_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:8:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:9:21
-           primaryKey: true,
+           primaryKey: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:11:19
-         comment_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         comment_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:13:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:14:21
-           references: {
-             model: 'comment',
-             key: 'comment_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:21:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:23:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:24:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:31:13
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
+         type: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:33:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:36:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'comment_vote',
-       },
+       {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:37:19
-         timestamps: true,
+         timestamps: false,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:38:20
-         underscored: true,
+         underscored: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:44:42
-       CommentVote.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       CommentVote.belongsTo(models.Member, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/CommentVote.ts:49:43
-       CommentVote.belongsTo(models.Comment, {
-         foreignKey: 'comment_id',
-         targetKey: 'comment_id',
-         as: 'Comment',
-       });
+       CommentVote.belongsTo(models.Comment, {});
Ran all tests for this mutant.

[NoCoverage] UnaryOperator
src/shared/infra/database/sequelize/models/index.ts:36:31
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') || t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/index.ts:26:20
-   let modelsLoaded = false;
+   let modelsLoaded = true;
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:29:7
-     if (modelsLoaded) return models;
+     if (true) return models;
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:29:7
-     if (modelsLoaded) return models;
+     if (false) return models;
Ran all tests for this mutant.

[Survived] ArrowFunction
src/shared/infra/database/sequelize/models/index.ts:35:7
-         (t) =>
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+         () => undefined,
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:36:9
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           false,
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:36:10
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (true) && !~t.indexOf('index') && !~t.indexOf('.map'),
Ran all tests for this mutant.

[Survived] LogicalOperator
src/shared/infra/database/sequelize/models/index.ts:36:10
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') && ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
Ran all tests for this mutant.

[Survived] UnaryOperator
src/shared/infra/database/sequelize/models/index.ts:36:10
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/index.ts:36:77
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && ~t.indexOf('.map'),
Ran all tests for this mutant.

[Survived] UnaryOperator
src/shared/infra/database/sequelize/models/index.ts:36:78
-           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !~t.indexOf('.map'),
+           (~t.indexOf('.ts') || ~t.indexOf('.js')) && !~t.indexOf('index') && !t.indexOf('.map'),
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:41:19
-     for (let i = 0; i < modelsList.length; i++) {
+     for (let i = 0; false; i++) {
Ran all tests for this mutant.

[Survived] EqualityOperator
src/shared/infra/database/sequelize/models/index.ts:41:19
-     for (let i = 0; i < modelsList.length; i++) {
+     for (let i = 0; i >= modelsList.length; i++) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:48:9
-       if (models[modelName].associate) {
+       if (true) {
Ran all tests for this mutant.

[Survived] ConditionalExpression
src/shared/infra/database/sequelize/models/index.ts:48:9
-       if (models[modelName].associate) {
+       if (false) {
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/index.ts:56:18
-     modelsLoaded = true;
+     modelsLoaded = false;
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:4:5
-       {
-         member_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         member_base_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           primaryKey: true,
-           references: {
-             model: 'base_user',
-             key: 'base_user_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         reputation: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
-       },
+       {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:5:18
-         member_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         member_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:8:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:9:21
-           primaryKey: true,
+           primaryKey: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:11:23
-         member_base_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           primaryKey: true,
-           references: {
-             model: 'base_user',
-             key: 'base_user_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_base_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:13:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:14:21
-           primaryKey: true,
+           primaryKey: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:15:21
-           references: {
-             model: 'base_user',
-             key: 'base_user_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:22:19
-         reputation: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
+         reputation: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:24:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:28:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'member',
-       },
+       {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:29:19
-         timestamps: true,
+         timestamps: false,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Member.ts:30:20
-         underscored: true,
+         underscored: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:36:39
-       Member.belongsTo(models.BaseUser, {
-         foreignKey: 'member_base_id',
-         targetKey: 'base_user_id',
-         as: 'BaseUser',
-       });
+       Member.belongsTo(models.BaseUser, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Member.ts:41:33
-       Member.hasMany(models.Post, { foreignKey: 'member_id', as: 'Post' });
+       Member.hasMany(models.Post, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:4:5
-       {
-         post_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         type: {
-           type: DataTypes.STRING(30),
-           allowNull: false,
-         },
-         title: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
-         link: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
-         slug: {
-           type: DataTypes.STRING(300),
-           allowNull: false,
-         },
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
-         total_num_comments: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
-       },
+       {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:5:16
-         post_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         post_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:8:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:9:21
-           primaryKey: true,
+           primaryKey: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:11:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:13:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:14:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:21:13
-         type: {
-           type: DataTypes.STRING(30),
-           allowNull: false,
-         },
+         type: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:23:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:25:14
-         title: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
+         title: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:27:20
-           allowNull: true,
+           allowNull: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:29:13
-         text: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
+         text: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:31:20
-           allowNull: true,
+           allowNull: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:33:13
-         link: {
-           type: DataTypes.TEXT,
-           allowNull: true,
-         },
+         link: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:35:20
-           allowNull: true,
+           allowNull: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:37:13
-         slug: {
-           type: DataTypes.STRING(300),
-           allowNull: false,
-         },
+         slug: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:39:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:41:15
-         points: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
+         points: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:43:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:46:27
-         total_num_comments: {
-           type: DataTypes.INTEGER,
-           allowNull: false,
-           defaultValue: 0,
-         },
+         total_num_comments: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:48:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:52:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'post',
-       },
+       {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:53:19
-         timestamps: true,
+         timestamps: false,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/Post.ts:54:20
-         underscored: true,
+         underscored: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:60:35
-       Post.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       Post.belongsTo(models.Member, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/Post.ts:65:35
-       Post.hasMany(models.PostVote, { foreignKey: 'post_id', as: 'Votes' });
+       Post.hasMany(models.PostVote, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:4:5
-       {
-         post_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
-       },
+       {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:5:21
-         post_vote_id: {
-           type: DataTypes.UUID,
-           defaultValue: DataTypes.UUIDV4,
-           allowNull: false,
-           primaryKey: true,
-         },
+         post_vote_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:8:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:9:21
-           primaryKey: true,
+           primaryKey: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:11:16
-         post_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         post_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:13:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:14:21
-           references: {
-             model: 'post',
-             key: 'post_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:21:18
-         member_id: {
-           type: DataTypes.UUID,
-           allowNull: false,
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
-           onDelete: 'cascade',
-           onUpdate: 'cascade',
-         },
+         member_id: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:23:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:24:21
-           references: {
-             model: 'member',
-             key: 'member_id',
-           },
+           references: {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:31:13
-         type: {
-           type: DataTypes.STRING(10),
-           allowNull: false,
-         },
+         type: {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:33:20
-           allowNull: false,
+           allowNull: true,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:36:5
-       {
-         timestamps: true,
-         underscored: true,
-         tableName: 'post_vote',
-       },
+       {},
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:37:19
-         timestamps: true,
+         timestamps: false,
Ran all tests for this mutant.

[Survived] BooleanLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:38:20
-         underscored: true,
+         underscored: false,
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:44:39
-       PostVote.belongsTo(models.Member, {
-         foreignKey: 'member_id',
-         targetKey: 'member_id',
-         as: 'Member',
-       });
+       PostVote.belongsTo(models.Member, {});
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/shared/infra/database/sequelize/models/PostVote.ts:49:37
-       PostVote.belongsTo(models.Post, { foreignKey: 'post_id', targetKey: 'post_id', as: 'Post' });
+       PostVote.belongsTo(models.Post, {});
Ran all tests for this mutant.

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:6:11
-         if (err.original) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:6:11
-         if (err.original) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:12:13
-           if (err.original.code == 'ER_DUP_ENTRY') {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:12:13
-           if (err.original.code == 'ER_DUP_ENTRY') {
+           if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:12:13
-           if (err.original.code == 'ER_DUP_ENTRY') {
+           if (err.original.code != 'ER_DUP_ENTRY') {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:14:20
-           } else if (err.original.code == 'ER_DUP_FIELDNAME') {
+           } else if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:14:20
-           } else if (err.original.code == 'ER_DUP_FIELDNAME') {
+           } else if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:14:20
-           } else if (err.original.code == 'ER_DUP_FIELDNAME') {
+           } else if (err.original.code != 'ER_DUP_FIELDNAME') {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:21:20
-           } else if (err.original.code == 'ER_CANT_DROP_FIELD_OR_KEY') {
+           } else if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:21:20
-           } else if (err.original.code == 'ER_CANT_DROP_FIELD_OR_KEY') {
+           } else if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:21:20
-           } else if (err.original.code == 'ER_CANT_DROP_FIELD_OR_KEY') {
+           } else if (err.original.code != 'ER_CANT_DROP_FIELD_OR_KEY') {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:28:20
-           } else if (err.name == 'SequelizeUnknownConstraintError') {
+           } else if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/database/sequelize/runner.ts:28:20
-           } else if (err.name == 'SequelizeUnknownConstraintError') {
+           } else if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/database/sequelize/runner.ts:28:20
-           } else if (err.name == 'SequelizeUnknownConstraintError') {
+           } else if (err.name != 'SequelizeUnknownConstraintError') {

[NoCoverage] ObjectLiteral
src/shared/infra/http/api/v1.ts:9:19
-     return res.json({ message: "Yo! we're up" });
+     return res.json({});

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:19:33
-   const server = new ApolloServer({
-     typeDefs: [typeDefs, ForumTypeDefs, UserTypeDefs],
-     resolvers: {
-       DateTime: GraphQLDateTime,
-       Post: {
-         memberPostedBy: async (post, args, context) => {
-           const memberDetails = await memberRepo.getMemberDetailsByPostLinkOrSlug(post.slug);
-           return MemberDetailsMap.toDTO(memberDetails);
-         },
-       },
-       Query: {
-         posts: async (parent, args, context) => {
-           const response = await getRecentPosts.execute({});
-           if (response.isRight()) {
-             const postDetails = response.value.getValue();
-             return postDetails.map(PostDetailsMap.toDTO);
-           } else {
-             throw response.value;
-           }
-         },
-       },
-     },
-   });
+   const server = new ApolloServer({});

[NoCoverage] ArrayDeclaration
src/shared/infra/http/graphql/server.ts:20:13
-     typeDefs: [typeDefs, ForumTypeDefs, UserTypeDefs],
+     typeDefs: [],

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:21:14
-     resolvers: {
-       DateTime: GraphQLDateTime,
-       Post: {
-         memberPostedBy: async (post, args, context) => {
-           const memberDetails = await memberRepo.getMemberDetailsByPostLinkOrSlug(post.slug);
-           return MemberDetailsMap.toDTO(memberDetails);
-         },
-       },
-       Query: {
-         posts: async (parent, args, context) => {
-           const response = await getRecentPosts.execute({});
-           if (response.isRight()) {
-             const postDetails = response.value.getValue();
-             return postDetails.map(PostDetailsMap.toDTO);
-           } else {
-             throw response.value;
-           }
-         },
-       },
-     },
+     resolvers: {},

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:23:11
-       Post: {
-         memberPostedBy: async (post, args, context) => {
-           const memberDetails = await memberRepo.getMemberDetailsByPostLinkOrSlug(post.slug);
-           return MemberDetailsMap.toDTO(memberDetails);
-         },
-       },
+       Post: {},

[NoCoverage] ObjectLiteral
src/shared/infra/http/graphql/server.ts:29:12
-       Query: {
-         posts: async (parent, args, context) => {
-           const response = await getRecentPosts.execute({});
-           if (response.isRight()) {
-             const postDetails = response.value.getValue();
-             return postDetails.map(PostDetailsMap.toDTO);
-           } else {
-             throw response.value;
-           }
-         },
-       },
+       Query: {},

[NoCoverage] ObjectLiteral
src/shared/infra/http/models/BaseController.ts:17:34
-       return res.status(code).json({ message });
+       return res.status(code).json({});

[NoCoverage] BooleanLiteral
src/shared/infra/http/models/BaseController.ts:21:9
-       if (!!dto) {
+       if (!dto) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/models/BaseController.ts:21:9
-       if (!!dto) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/models/BaseController.ts:21:9
-       if (!!dto) {
+       if (false) {

[NoCoverage] BooleanLiteral
src/shared/infra/http/models/BaseController.ts:21:10
-       if (!!dto) {
+       if (!dto) {

[NoCoverage] ObjectLiteral
src/shared/infra/http/models/BaseController.ts:67:33
-       return res.status(500).json({
-         message: error.toString(),
-       });
+       return res.status(500).json({});

[NoCoverage] ObjectLiteral
src/shared/infra/http/utils/Middleware.ts:13:36
-       return res.status(status).send({ message });
+       return res.status(status).send({});

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:20:11
-         if (token) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:20:11
-         if (token) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = false;

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded !== false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:22:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:22:34
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:22:47
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded === true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:24:13
-           if (signatureFailed) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:24:13
-           if (signatureFailed) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:33:13
-           if (tokens.length !== 0) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:33:13
-           if (tokens.length !== 0) {
+           if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:33:13
-           if (tokens.length !== 0) {
+           if (tokens.length === 0) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:49:11
-         if (token) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:49:11
-         if (token) {
+         if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = false;

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded !== false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:51:33
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:51:34
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !decoded === false;

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:51:47
-           const signatureFailed = !!decoded === false;
+           const signatureFailed = !!decoded === true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:53:13
-           if (signatureFailed) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:53:13
-           if (signatureFailed) {
+           if (false) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:62:13
-           if (tokens.length !== 0) {
+           if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:62:13
-           if (tokens.length !== 0) {
+           if (false) {

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:62:13
-           if (tokens.length !== 0) {
+           if (tokens.length === 0) {

[NoCoverage] ObjectLiteral
src/shared/infra/http/utils/Middleware.ts:79:22
-       return rateLimit({
-         windowMs: mins * 60 * 1000,
-         max: maxRequests,
-       });
+       return rateLimit({});

[NoCoverage] ArithmeticOperator
src/shared/infra/http/utils/Middleware.ts:80:17
-         windowMs: mins * 60 * 1000,
+         windowMs: mins * 60 / 1000,

[NoCoverage] ArithmeticOperator
src/shared/infra/http/utils/Middleware.ts:80:17
-         windowMs: mins * 60 * 1000,
+         windowMs: mins / 60 * 1000,

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:86:9
-       if (!isProduction) {
+       if (isProduction) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:86:9
-       if (!isProduction) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:86:9
-       if (!isProduction) {
+       if (false) {

[NoCoverage] ArrayDeclaration
src/shared/infra/http/utils/Middleware.ts:90:32
-       const approvedDomainList = ['https://khalilstemmler.com'];
+       const approvedDomainList = [];

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:94:27
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !approvedDomainList.find(d => d === domain);

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:94:28
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !approvedDomainList.find(d => d === domain);

[NoCoverage] ArrowFunction
src/shared/infra/http/utils/Middleware.ts:94:53
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find(() => undefined);

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:94:60
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find((d) => true);

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:94:60
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find((d) => false);

[NoCoverage] EqualityOperator
src/shared/infra/http/utils/Middleware.ts:94:60
-       const isValidDomain = !!approvedDomainList.find((d) => d === domain);
+       const isValidDomain = !!approvedDomainList.find((d) => d !== domain);

[NoCoverage] BooleanLiteral
src/shared/infra/http/utils/Middleware.ts:97:9
-       if (!isValidDomain) {
+       if (isValidDomain) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:97:9
-       if (!isValidDomain) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/shared/infra/http/utils/Middleware.ts:97:9
-       if (!isValidDomain) {
+       if (false) {

[NoCoverage] ObjectLiteral
src/shared/infra/http/utils/Middleware.ts:98:35
-         return res.status(403).json({ message: 'Unauthorized' });
+         return res.status(403).json({});

[NoCoverage] ObjectLiteral
src/shared/infra/http/app.ts:10:16
-   const origin = {
-     // origin: isProduction ? 'https://dddforum.com' : '*',
-     origin: '*',
-   };
+   const origin = {};

[NoCoverage] ObjectLiteral
src/shared/infra/http/app.ts:18:31
-   app.use(bodyParser.urlencoded({ extended: true }));
+   app.use(bodyParser.urlencoded({}));

[NoCoverage] BooleanLiteral
src/shared/infra/http/app.ts:18:43
-   app.use(bodyParser.urlencoded({ extended: true }));
+   app.use(bodyParser.urlencoded({ extended: false }));

[NoCoverage] ConditionalExpression
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = true;

[NoCoverage] ConditionalExpression
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = false;

[NoCoverage] LogicalOperator
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = (process.env.DEBUG_PORT || process.env.PORT) && 5001;

[NoCoverage] ConditionalExpression
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = false || 5001;

[NoCoverage] LogicalOperator
src/shared/infra/http/app.ts:26:14
-   const port = process.env.DEBUG_PORT || process.env.PORT || 5001;
+   const port = process.env.DEBUG_PORT && process.env.PORT || 5001;

[NoCoverage] ArrowFunction
src/shared/utils/FlowUtils.ts:3:24
-       return new Promise((resolve) => setTimeout(resolve, ms));
+       return new Promise(() => undefined);

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"](\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\S@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+))|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"])*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\S@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|("."))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[^0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[^0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[^0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[^0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([^a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]))$/;

[NoCoverage] Regex
src/shared/utils/TextUtils.ts:18:7
-         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
+         /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[^a-zA-Z]{2,}))$/;

[NoCoverage] MethodExpression
src/shared/utils/TextUtils.ts:19:20
-       return re.test(String(email).toLowerCase());
+       return re.test(String(email).toUpperCase());

[Survived] ConditionalExpression
src/shared/utils/TextUtils.ts:26:32
-       for (let i = numberDigits; i > 0; --i) {
+       for (let i = numberDigits; false; --i) {
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] EqualityOperator
src/shared/utils/TextUtils.ts:26:32
-       for (let i = numberDigits; i > 0; --i) {
+       for (let i = numberDigits; i <= 0; --i) {
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] EqualityOperator
src/shared/utils/TextUtils.ts:26:32
-       for (let i = numberDigits; i > 0; --i) {
+       for (let i = numberDigits; i >= 0; --i) {
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] ArithmeticOperator
src/shared/utils/TextUtils.ts:27:33
-         value += chars[Math.round(Math.random() * (chars.length - 1))];
+         value += chars[Math.round(Math.random() / (chars.length - 1))];
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


[Survived] ArithmeticOperator
src/shared/utils/TextUtils.ts:27:50
-         value += chars[Math.round(Math.random() * (chars.length - 1))];
+         value += chars[Math.round(Math.random() * (chars.length + 1))];
Tests ran:
    Should be able to create a post slug
    Should be able to parse out any bad characters not suitable for a slug


Ran 0.70 tests per mutant on average.
-----------------------------------------------|---------|----------|-----------|------------|----------|----------|
File                                           | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------------------------------------|---------|----------|-----------|------------|----------|----------|
All files                                      |    6.01 |       97 |         5 |        198 |     1397 |      258 |
 api_test                                      |   64.20 |       51 |         1 |         22 |        7 |       41 |
  config                                       |    0.00 |        0 |         0 |          2 |        0 |        9 |
   configHandler.ts                            |    0.00 |        0 |         0 |          2 |        0 |        9 |
  endpoints                                    |   50.00 |       19 |         1 |         15 |        5 |       24 |
   abstracts                                   |    0.00 |        0 |         0 |          2 |        0 |        3 |
    AEndpoint.ts                               |    0.00 |        0 |         0 |          2 |        0 |        3 |
   Comments.ts                                 |  100.00 |       12 |         1 |          0 |        0 |        6 |
   Posts.ts                                    |    5.88 |        1 |         0 |         12 |        4 |        7 |
   Users.ts                                    |   75.00 |        6 |         0 |          1 |        1 |        8 |
  restClient                                   |   82.05 |       32 |         0 |          5 |        2 |        8 |
   RestClient.ts                               |   82.05 |       32 |         0 |          5 |        2 |        8 |
 config                                        |    0.00 |        0 |         0 |          0 |        6 |        1 |
  auth.ts                                      |    0.00 |        0 |         0 |          0 |        3 |        1 |
  index.ts                                     |    0.00 |        0 |         0 |          0 |        3 |        0 |
 modules                                       |    1.95 |       20 |         0 |         12 |      993 |      174 |
  forum                                        |    0.43 |        3 |         0 |         10 |      679 |      135 |
   domain                                      |    1.26 |        3 |         0 |          9 |      227 |       56 |
    events                                     |     n/a |        0 |         0 |          0 |        0 |        0 |
     commentPosted.ts                          |     n/a |        0 |         0 |          0 |        0 |        0 |
     commentVotesChanged.ts                    |     n/a |        0 |         0 |          0 |        0 |        0 |
     memberCreated.ts                          |     n/a |        0 |         0 |          0 |        0 |        0 |
     postCreated.ts                            |     n/a |        0 |         0 |          0 |        0 |        0 |
     postVotesChanged.ts                       |     n/a |        0 |         0 |          0 |        0 |        0 |
    services                                   |    0.00 |        0 |         0 |          0 |       50 |        1 |
     postService.ts                            |    0.00 |        0 |         0 |          0 |       50 |        1 |
    comment.ts                                 |    0.00 |        0 |         0 |          0 |       25 |        5 |
    commentDetails.ts                          |    0.00 |        0 |         0 |          0 |        5 |        8 |
    commentId.ts                               |     n/a |        0 |         0 |          0 |        0 |        0 |
    comments.ts                                |     n/a |        0 |         0 |          0 |        0 |        1 |
    commentText.ts                             |    0.00 |        0 |         0 |          0 |       10 |        0 |
    commentVote.ts                             |    0.00 |        0 |         0 |          0 |       17 |        5 |
    commentVotes.ts                            |     n/a |        0 |         0 |          0 |        0 |        1 |
    member.ts                                  |    0.00 |        0 |         0 |          0 |       11 |        3 |
    memberDetails.ts                           |    0.00 |        0 |         0 |          0 |        5 |        3 |
    memberId.ts                                |     n/a |        0 |         0 |          0 |        0 |        0 |
    post.ts                                    |    0.00 |        0 |         0 |          0 |       55 |       11 |
    postDetails.ts                             |    0.00 |        0 |         0 |          0 |       11 |       10 |
    postId.ts                                  |     n/a |        0 |         0 |          0 |        0 |        0 |
    postLink.ts                                |    0.00 |        0 |         0 |          0 |        5 |        0 |
    postSlug.ts                                |    0.00 |        0 |         0 |          6 |        6 |        2 |
    postText.ts                                |    0.00 |        0 |         0 |          0 |       10 |        0 |
    postTitle.ts                               |   50.00 |        3 |         0 |          3 |        0 |        0 |
    postVote.ts                                |    0.00 |        0 |         0 |          0 |       17 |        5 |
    postVotes.ts                               |     n/a |        0 |         0 |          0 |        0 |        1 |
   infra                                       |    0.00 |        0 |         0 |          0 |       15 |        0 |
    http                                       |    0.00 |        0 |         0 |          0 |       15 |        0 |
     routes                                    |    0.00 |        0 |         0 |          0 |       15 |        0 |
      comment.ts                               |    0.00 |        0 |         0 |          0 |        6 |        0 |
      member.ts                                |    0.00 |        0 |         0 |          0 |        2 |        0 |
      post.ts                                  |    0.00 |        0 |         0 |          0 |        7 |        0 |
   mappers                                     |    0.00 |        0 |         0 |          0 |       33 |       24 |
    commentDetailsMap.ts                       |    0.00 |        0 |         0 |          0 |        8 |        5 |
    commentMap.ts                              |    0.00 |        0 |         0 |          0 |        1 |        2 |
    commentVoteMap.ts                          |    0.00 |        0 |         0 |          0 |        1 |        1 |
    memberDetailsMap.ts                        |     n/a |        0 |         0 |          0 |        0 |        4 |
    memberIdMap.ts                             |     n/a |        0 |         0 |          0 |        0 |        0 |
    memberMap.ts                               |    0.00 |        0 |         0 |          0 |        1 |        2 |
    postDetailsMap.ts                          |    0.00 |        0 |         0 |          0 |       14 |        5 |
    postMap.ts                                 |    0.00 |        0 |         0 |          0 |        7 |        4 |
    postVoteMap.ts                             |    0.00 |        0 |         0 |          0 |        1 |        1 |
   repos                                       |    0.00 |        0 |         0 |          1 |      242 |        0 |
    implementations                            |    0.00 |        0 |         0 |          1 |      242 |        0 |
     bootstrap.ts                              |    0.00 |        0 |         0 |          1 |        0 |        0 |
     commentRepo.ts                            |    0.00 |        0 |         0 |          0 |       61 |        0 |
     sequelizeCommentVotesRepo.ts              |    0.00 |        0 |         0 |          0 |       13 |        0 |
     sequelizeMemberRepo.ts                    |    0.00 |        0 |         0 |          0 |       93 |        0 |
     sequelizePostRepo.ts                      |    0.00 |        0 |         0 |          0 |       62 |        0 |
     sequelizePostVotesRepo.ts                 |    0.00 |        0 |         0 |          0 |       13 |        0 |
   subscriptions                               |     n/a |        0 |         0 |          0 |        0 |        5 |
    afterCommentPosted.ts                      |     n/a |        0 |         0 |          0 |        0 |        1 |
    afterCommentVotesChanged.ts                |     n/a |        0 |         0 |          0 |        0 |        2 |
    afterPostVotesChanged.ts                   |     n/a |        0 |         0 |          0 |        0 |        1 |
    afterUserCreated.ts                        |     n/a |        0 |         0 |          0 |        0 |        1 |
   useCases                                    |    0.00 |        0 |         0 |          0 |      162 |       50 |
    comments                                   |    0.00 |        0 |         0 |          0 |       68 |       18 |
     downvoteComment                           |    0.00 |        0 |         0 |          0 |        9 |        1 |
      DownvoteComment.ts                       |    0.00 |        0 |         0 |          0 |        2 |        0 |
      DownvoteCommentController.ts             |    0.00 |        0 |         0 |          0 |        4 |        1 |
      DownvoteCommentErrors.ts                 |    0.00 |        0 |         0 |          0 |        3 |        0 |
     getCommentByCommentId                     |    0.00 |        0 |         0 |          0 |       11 |        4 |
      GetCommentByCommentId.ts                 |    0.00 |        0 |         0 |          0 |        8 |        0 |
      GetCommentByCommentIdController.ts       |    0.00 |        0 |         0 |          0 |        2 |        4 |
      GetCommentByCommentIdErrors.ts           |    0.00 |        0 |         0 |          0 |        1 |        0 |
     getCommentsByPostSlug                     |    0.00 |        0 |         0 |          0 |       11 |        4 |
      GetCommentsByPostSlug.ts                 |    0.00 |        0 |         0 |          0 |        8 |        0 |
      GetCommentsByPostSlugController.ts       |    0.00 |        0 |         0 |          0 |        2 |        4 |
      GetCommentsByPostSlugErrors.ts           |    0.00 |        0 |         0 |          0 |        1 |        0 |
     replyToComment                            |    0.00 |        0 |         0 |          0 |       17 |        3 |
      ReplyToComment.ts                        |    0.00 |        0 |         0 |          0 |        8 |        2 |
      ReplyToCommentController.ts              |    0.00 |        0 |         0 |          0 |        6 |        1 |
      ReplyToCommentErrors.ts                  |    0.00 |        0 |         0 |          0 |        3 |        0 |
     replyToPost                               |    0.00 |        0 |         0 |          0 |       11 |        4 |
      ReplyToPost.ts                           |    0.00 |        0 |         0 |          0 |        6 |        3 |
      ReplyToPostController.ts                 |    0.00 |        0 |         0 |          0 |        4 |        1 |
      ReplyToPostErrors.ts                     |    0.00 |        0 |         0 |          0 |        1 |        0 |
     updateCommentStats                        |     n/a |        0 |         0 |          0 |        0 |        1 |
      UpdateCommentStats.ts                    |     n/a |        0 |         0 |          0 |        0 |        1 |
     upvoteComment                             |    0.00 |        0 |         0 |          0 |        9 |        1 |
      UpvoteComment.ts                         |    0.00 |        0 |         0 |          0 |        2 |        0 |
      UpvoteCommentController.ts               |    0.00 |        0 |         0 |          0 |        4 |        1 |
      UpvoteCommentErrors.ts                   |    0.00 |        0 |         0 |          0 |        3 |        0 |
    members                                    |    0.00 |        0 |         0 |          0 |       15 |        9 |
     createMember                              |    0.00 |        0 |         0 |          0 |       12 |        1 |
      CreateMember.ts                          |    0.00 |        0 |         0 |          0 |       10 |        1 |
      CreateMemberErrors.ts                    |    0.00 |        0 |         0 |          0 |        2 |        0 |
     getCurrentMember                          |     n/a |        0 |         0 |          0 |        0 |        4 |
      GetCurrentMemberController.ts            |     n/a |        0 |         0 |          0 |        0 |        4 |
     getMemberByUserName                       |    0.00 |        0 |         0 |          0 |        3 |        4 |
      GetMemberByUserName.ts                   |     n/a |        0 |         0 |          0 |        0 |        0 |
      GetMemberByUserNameController.ts         |    0.00 |        0 |         0 |          0 |        2 |        4 |
      GetMemberByUserNameErrors.ts             |    0.00 |        0 |         0 |          0 |        1 |        0 |
    post                                       |    0.00 |        0 |         0 |          0 |       79 |       23 |
     createPost                                |    0.00 |        0 |         0 |          0 |       22 |        5 |
      CreatePost.ts                            |    0.00 |        0 |         0 |          0 |       13 |        4 |
      CreatePostController.ts                  |    0.00 |        0 |         0 |          0 |        8 |        1 |
      CreatePostErrors.ts                      |    0.00 |        0 |         0 |          0 |        1 |        0 |
     downvotePost                              |    0.00 |        0 |         0 |          0 |       10 |        1 |
      DownvotePost.ts                          |    0.00 |        0 |         0 |          0 |        2 |        0 |
      DownvotePostController.ts                |    0.00 |        0 |         0 |          0 |        5 |        1 |
      DownvotePostErrors.ts                    |    0.00 |        0 |         0 |          0 |        3 |        0 |
     editPost                                  |    0.00 |        0 |         0 |          0 |        7 |        2 |
      EditPost.ts                              |    0.00 |        0 |         0 |          0 |        4 |        2 |
      EditPostErrors.ts                        |    0.00 |        0 |         0 |          0 |        3 |        0 |
     getPopularPosts                           |    0.00 |        0 |         0 |          0 |        9 |        3 |
      GetPopularPosts.ts                       |     n/a |        0 |         0 |          0 |        0 |        0 |
      GetPopularPostsController.ts             |    0.00 |        0 |         0 |          0 |        9 |        3 |
     getPostBySlug                             |    0.00 |        0 |         0 |          0 |        2 |        4 |
      GetPostBySlug.ts                         |     n/a |        0 |         0 |          0 |        0 |        0 |
      GetPostBySlugController.ts               |    0.00 |        0 |         0 |          0 |        1 |        4 |
      GetPostBySlugErrors.ts                   |    0.00 |        0 |         0 |          0 |        1 |        0 |
     getRecentPosts                            |    0.00 |        0 |         0 |          0 |        9 |        3 |
      GetRecentPosts.ts                        |     n/a |        0 |         0 |          0 |        0 |        0 |
      GetRecentPostsController.ts              |    0.00 |        0 |         0 |          0 |        9 |        3 |
     getUnpopularPosts                         |    0.00 |        0 |         0 |          0 |        9 |        3 |
      GetUnpopularPosts.ts                     |     n/a |        0 |         0 |          0 |        0 |        0 |
      GetUnpopularPostsController.ts           |    0.00 |        0 |         0 |          0 |        9 |        3 |
     updatePostStats                           |    0.00 |        0 |         0 |          0 |        1 |        1 |
      UpdatePostStats.ts                       |     n/a |        0 |         0 |          0 |        0 |        1 |
      UpdatePostStatsErrors.ts                 |    0.00 |        0 |         0 |          0 |        1 |        0 |
     upvotePost                                |    0.00 |        0 |         0 |          0 |       10 |        1 |
      UpvotePost.ts                            |    0.00 |        0 |         0 |          0 |        2 |        0 |
      UpvotePostController.ts                  |    0.00 |        0 |         0 |          0 |        5 |        1 |
      UpvotePostErrors.ts                      |    0.00 |        0 |         0 |          0 |        3 |        0 |
  users                                        |    5.11 |       17 |         0 |          2 |      314 |       39 |
   domain                                      |    0.00 |        0 |         0 |          0 |      112 |        8 |
    events                                     |     n/a |        0 |         0 |          0 |        0 |        0 |
     emailVerified.ts                          |     n/a |        0 |         0 |          0 |        0 |        0 |
     userCreated.ts                            |     n/a |        0 |         0 |          0 |        0 |        0 |
     userDeleted.ts                            |     n/a |        0 |         0 |          0 |        0 |        0 |
     userLoggedIn.ts                           |     n/a |        0 |         0 |          0 |        0 |        0 |
    emailVerificationToken.ts                  |    0.00 |        0 |         0 |          0 |       23 |        3 |
    user.ts                                    |    0.00 |        0 |         0 |          0 |       25 |        3 |
    userEmail.ts                               |    0.00 |        0 |         0 |          0 |       28 |        1 |
    userId.ts                                  |     n/a |        0 |         0 |          0 |        0 |        0 |
    userName.ts                                |    0.00 |        0 |         0 |          0 |        6 |        0 |
    userPassword.ts                            |    0.00 |        0 |         0 |          0 |       30 |        1 |
   infra                                       |    0.00 |        0 |         0 |          0 |       10 |        0 |
    http                                       |    0.00 |        0 |         0 |          0 |       10 |        0 |
     routes                                    |    0.00 |        0 |         0 |          0 |       10 |        0 |
      index.ts                                 |    0.00 |        0 |         0 |          0 |       10 |        0 |
   mappers                                     |    0.00 |        0 |         0 |          0 |       10 |        4 |
    userMap.ts                                 |    0.00 |        0 |         0 |          0 |       10 |        4 |
   repos                                       |   26.56 |       17 |         0 |          2 |       45 |        1 |
    implementations                            |   26.56 |       17 |         0 |          2 |       45 |        1 |
     sequelizeUserRepo.ts                      |   26.56 |       17 |         0 |          2 |       45 |        1 |
   services                                    |    0.00 |        0 |         0 |          0 |       47 |        1 |
    redis                                      |    0.00 |        0 |         0 |          0 |       47 |        1 |
     abstractRedisClient.ts                    |    0.00 |        0 |         0 |          0 |       20 |        0 |
     redisAuthService.ts                       |    0.00 |        0 |         0 |          0 |       27 |        1 |
     redisConnection.ts                        |     n/a |        0 |         0 |          0 |        0 |        0 |
   useCases                                    |    0.00 |        0 |         0 |          0 |       90 |       25 |
    createUser                                 |    0.00 |        0 |         0 |          0 |       22 |        4 |
     CreateUserController.ts                   |    0.00 |        0 |         0 |          0 |        5 |        1 |
     CreateUserErrors.ts                       |    0.00 |        0 |         0 |          0 |        2 |        0 |
     CreateUserUseCase.ts                      |    0.00 |        0 |         0 |          0 |       15 |        3 |
    deleteUser                                 |    0.00 |        0 |         0 |          0 |       19 |        0 |
     DeleteUserController.ts                   |    0.00 |        0 |         0 |          0 |        5 |        0 |
     DeleteUserErrors.ts                       |    0.00 |        0 |         0 |          0 |        2 |        0 |
     DeleteUserUseCase.ts                      |    0.00 |        0 |         0 |          0 |       12 |        0 |
    getCurrentUser                             |    0.00 |        0 |         0 |          0 |        1 |        3 |
     GetCurrentUserController.ts               |    0.00 |        0 |         0 |          0 |        1 |        3 |
    getPostsCommentsByUsername                 |    0.00 |        0 |         0 |          0 |        3 |        1 |
     GetPostsCommentsByUsername.ts             |     n/a |        0 |         0 |          0 |        0 |        0 |
     GetPostsCommentsByUsernameController.ts   |    0.00 |        0 |         0 |          0 |        3 |        1 |
    getStatistics                              |    0.00 |        0 |         0 |          0 |        3 |        1 |
     GetStatisticsByDate.ts                    |     n/a |        0 |         0 |          0 |        0 |        0 |
     GetStatisticsByDateController.ts          |    0.00 |        0 |         0 |          0 |        3 |        1 |
    getUserByUserName                          |    0.00 |        0 |         0 |          0 |       14 |        3 |
     GetUserByUserName.ts                      |    0.00 |        0 |         0 |          0 |       11 |        1 |
     GetUserByUserNameController.ts            |    0.00 |        0 |         0 |          0 |        2 |        2 |
     GetUserByUserNameErrors.ts                |    0.00 |        0 |         0 |          0 |        1 |        0 |
    getUserWithMoreCommentsPosts               |    0.00 |        0 |         0 |          0 |        3 |        0 |
     GetUserWithMoreCommentsPosts.ts           |     n/a |        0 |         0 |          0 |        0 |        0 |
     GetUserWithMoreCommentsPostsController.ts |    0.00 |        0 |         0 |          0 |        3 |        0 |
    login                                      |    0.00 |        0 |         0 |          0 |       19 |        6 |
     LoginController.ts                        |    0.00 |        0 |         0 |          0 |        3 |        2 |
     LoginErrors.ts                            |    0.00 |        0 |         0 |          0 |        3 |        0 |
     LoginUseCase.ts                           |    0.00 |        0 |         0 |          0 |       13 |        4 |
    logout                                     |    0.00 |        0 |         0 |          0 |        1 |        3 |
     LogoutController.ts                       |     n/a |        0 |         0 |          0 |        0 |        3 |
     LogoutErrors.ts                           |    0.00 |        0 |         0 |          0 |        1 |        0 |
     LogoutUseCase.ts                          |     n/a |        0 |         0 |          0 |        0 |        0 |
    refreshAccessToken                         |    0.00 |        0 |         0 |          0 |        5 |        4 |
     RefreshAccessToken.ts                     |     n/a |        0 |         0 |          0 |        0 |        1 |
     RefreshAccessTokenController.ts           |    0.00 |        0 |         0 |          0 |        3 |        3 |
     RefreshAccessTokenErrors.ts               |    0.00 |        0 |         0 |          0 |        2 |        0 |
 shared                                        |    5.13 |       26 |         4 |        164 |      391 |       42 |
  core                                         |   36.76 |       25 |         0 |          8 |       35 |        1 |
   AppError.ts                                 |    0.00 |        0 |         0 |          0 |        1 |        0 |
   Guard.ts                                    |   29.79 |       14 |         0 |          5 |       28 |        0 |
   Result.ts                                   |   55.00 |       11 |         0 |          3 |        6 |        0 |
   UseCaseError.ts                             |     n/a |        0 |         0 |          0 |        0 |        0 |
   WithChanges.ts                              |     n/a |        0 |         0 |          0 |        0 |        1 |
  domain                                       |    0.93 |        1 |         0 |          0 |      106 |        8 |
   events                                      |    0.00 |        0 |         0 |          0 |       17 |        2 |
    DomainEvents.ts                            |    0.00 |        0 |         0 |          0 |       17 |        2 |
   AggregateRoot.ts                            |     n/a |        0 |         0 |          0 |        0 |        1 |
   Entity.ts                                   |    0.00 |        0 |         0 |          0 |       15 |        1 |
   Identifier.ts                               |    0.00 |        0 |         0 |          0 |       15 |        0 |
   UniqueEntityID.ts                           |     n/a |        0 |         0 |          0 |        0 |        0 |
   ValueObject.ts                              |    6.25 |        1 |         0 |          0 |       15 |        0 |
   WatchedList.ts                              |    0.00 |        0 |         0 |          0 |       44 |        4 |
  infra                                        |    0.79 |        0 |         3 |        151 |      225 |       32 |
   database                                    |    0.95 |        0 |         3 |        151 |      161 |       29 |
    sequelize                                  |    0.95 |        0 |         3 |        151 |      161 |       29 |
     config                                    |    0.00 |        0 |         0 |         10 |        0 |        5 |
      config.js                                |    0.00 |        0 |         0 |         10 |        0 |        5 |
     hooks                                     |    0.00 |        0 |         0 |          0 |       15 |        0 |
      index.ts                                 |    0.00 |        0 |         0 |          0 |       15 |        0 |
     migrations                                |    0.00 |        0 |         0 |          0 |      131 |        0 |
      20191004134636-initial-migration.ts      |    0.00 |        0 |         0 |          0 |      131 |        0 |
     models                                    |    2.07 |        0 |         3 |        141 |        1 |       23 |
      BaseUser.ts                              |    0.00 |        0 |         0 |         28 |        0 |        0 |
      Comment.ts                               |    0.00 |        0 |         0 |         23 |        0 |        0 |
      CommentVote.ts                           |    0.00 |        0 |         0 |         17 |        0 |        0 |
      index.ts                                 |   15.79 |        0 |         3 |         15 |        1 |       23 |
      Member.ts                                |    0.00 |        0 |         0 |         15 |        0 |        0 |
      Post.ts                                  |    0.00 |        0 |         0 |         26 |        0 |        0 |
      PostVote.ts                              |    0.00 |        0 |         0 |         17 |        0 |        0 |
     runner.ts                                 |    0.00 |        0 |         0 |          0 |       14 |        1 |
   http                                        |    0.00 |        0 |         0 |          0 |       64 |        3 |
    api                                        |    0.00 |        0 |         0 |          0 |        1 |        0 |
     v1.ts                                     |    0.00 |        0 |         0 |          0 |        1 |        0 |
    graphql                                    |    0.00 |        0 |         0 |          0 |        5 |        3 |
     forum.ts                                  |     n/a |        0 |         0 |          0 |        0 |        0 |
     server.ts                                 |    0.00 |        0 |         0 |          0 |        5 |        3 |
     users.ts                                  |     n/a |        0 |         0 |          0 |        0 |        0 |
    models                                     |    0.00 |        0 |         0 |          0 |        6 |        0 |
     BaseController.ts                         |    0.00 |        0 |         0 |          0 |        6 |        0 |
    utils                                      |    0.00 |        0 |         0 |          0 |       44 |        0 |
     Middleware.ts                             |    0.00 |        0 |         0 |          0 |       44 |        0 |
    app.ts                                     |    0.00 |        0 |         0 |          0 |        8 |        0 |
  utils                                        |    3.23 |        0 |         1 |          5 |       25 |        1 |
   FlowUtils.ts                                |    0.00 |        0 |         0 |          0 |        1 |        0 |
   TextUtils.ts                                |    3.33 |        0 |         1 |          5 |       24 |        1 |
-----------------------------------------------|---------|----------|-----------|------------|----------|----------|
[32m03:05:40 (74818) INFO HtmlReporter[39m Your report can be found at: file:///Users/SwitchQA/switch-projetos/qa-proj/switch-qa-23-project-switch-qa-23-2/reports/mutation/mutation.html
[32m03:05:40 (74818) INFO MutationTestExecutor[39m Done in 79 minutes 8 seconds.
